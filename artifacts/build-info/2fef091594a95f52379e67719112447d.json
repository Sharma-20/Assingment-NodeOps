{"id":"2fef091594a95f52379e67719112447d","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /// @inheritdoc IERC721\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /// @inheritdoc IERC721\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /// @inheritdoc IERC721\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /// @inheritdoc IERC721\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC721\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /// @inheritdoc IERC721\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/GovernanceExecutor.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"./GovernanceRootPublisher.sol\";\n\n/**\n * @title GovernanceExecutor\n * @dev Executes governance proposals on Chain A after cross-chain verification\n * Handles proposal execution with action data hash verification\n */\ncontract GovernanceExecutor is Ownable, ReentrancyGuard {\n    \n    // Reference to the governance root publisher\n    GovernanceRootPublisher public immutable rootPublisher;\n    \n    // Mapping from action data hash to commitment status\n    mapping(bytes32 => bool) public committedActions;\n    \n    // Mapping from action data hash to execution status\n    mapping(bytes32 => bool) public executedActions;\n    \n    // Events\n    event ProposalExecuted(\n        uint256 indexed proposalId,\n        bytes32 actionDataHash,\n        bytes actionData,\n        address executor\n    );\n    \n    event ActionDataHashCommitted(\n        bytes32 indexed actionDataHash,\n        uint256 timestamp\n    );\n    \n    constructor(address _rootPublisher) Ownable(msg.sender) {\n        rootPublisher = GovernanceRootPublisher(_rootPublisher);\n    }\n    \n    /**\n     * @dev Commit action data hash for execution\n     * @param actionDataHash Hash of the action data to execute\n     */\n    function commitActionDataHash(bytes32 actionDataHash) external onlyOwner {\n        require(actionDataHash != bytes32(0), \"Action data hash cannot be zero\");\n        require(!executedActions[actionDataHash], \"Action already executed\");\n        \n        // Mark as committed\n        committedActions[actionDataHash] = true;\n        \n        emit ActionDataHashCommitted(actionDataHash, block.timestamp);\n    }\n    \n    /**\n     * @dev Execute a proposal if authorized\n     * @param proposalId ID of the proposal to execute\n     * @param actionData Action data to execute\n     */\n    function executeIfAuthorized(\n        uint256 proposalId,\n        bytes memory actionData\n    ) external nonReentrant {\n        require(actionData.length > 0, \"Action data cannot be empty\");\n        \n        // Get proposal details\n        GovernanceRootPublisher.Proposal memory proposal = rootPublisher.getProposal(proposalId);\n        require(proposal.id != 0, \"Proposal does not exist\");\n        require(proposal.rootPublished, \"Root not published\");\n        require(!proposal.executed, \"Proposal already executed\");\n        \n        // Verify action data hash matches\n        bytes32 actionDataHash = keccak256(actionData);\n        require(actionDataHash == proposal.actionDataHash, \"Action data hash mismatch\");\n        \n        // Check if action has been committed\n        require(committedActions[actionDataHash], \"Action not committed\");\n        \n        // Mark as executed in root publisher\n        rootPublisher.executeProposal(proposalId);\n        \n        // Mark as executed locally\n        executedActions[actionDataHash] = true;\n        \n        emit ProposalExecuted(proposalId, actionDataHash, actionData, msg.sender);\n        \n        // Execute the action data\n        _executeAction(actionData);\n    }\n    \n    /**\n     * @dev Execute action data (internal function)\n     * @param actionData Encoded action data to execute\n     */\n    function _executeAction(bytes memory actionData) internal {\n        // Decode action data and execute\n        // This is a simplified implementation - in practice, you'd decode\n        // the action data and execute specific functions based on the action type\n        \n        // For example, if actionData contains a function call to update unbonding period:\n        // (address target, bytes4 selector, bytes data) = abi.decode(actionData, (address, bytes4, bytes));\n        // (bool success, ) = target.call(abi.encodePacked(selector, data));\n        // require(success, \"Action execution failed\");\n        \n        // For now, we'll just emit an event to indicate execution\n        // In a real implementation, you'd decode and execute the actual action\n        emit ActionExecuted(actionData);\n    }\n    \n    /**\n     * @dev Check if an action has been executed\n     * @param actionDataHash Hash of the action data\n     * @return executed True if action has been executed\n     */\n    function isActionExecuted(bytes32 actionDataHash) external view returns (bool executed) {\n        return executedActions[actionDataHash];\n    }\n    \n    /**\n     * @dev Get proposal details from root publisher\n     * @param proposalId ID of the proposal\n     * @return proposal Proposal struct\n     */\n    function getProposal(uint256 proposalId) external view returns (GovernanceRootPublisher.Proposal memory proposal) {\n        return rootPublisher.getProposal(proposalId);\n    }\n    \n    // Event for action execution (placeholder)\n    event ActionExecuted(bytes actionData);\n}\n"},"contracts/GovernanceRootPublisher.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./LiquidStakingVault.sol\";\n\n/**\n * @title GovernanceRootPublisher\n * @dev Creates governance proposals and publishes voting power snapshots\n * Handles proposal creation, snapshot taking, and root publishing for cross-chain voting\n */\ncontract GovernanceRootPublisher is Ownable {\n    \n    struct Proposal {\n        uint256 id;\n        string description;\n        bytes actionData;\n        bytes32 actionDataHash;\n        uint256 snapshotBlock;\n        uint256 exchangeRateSnapshot;\n        bytes32 votingPowerRoot;\n        bool rootPublished;\n        bool executed;\n        uint256 createdAt;\n    }\n    \n    // Mapping from proposal ID to proposal\n    mapping(uint256 => Proposal) public proposals;\n    \n    // Counter for proposal IDs\n    uint256 private _nextProposalId = 1;\n    \n    // Reference to the liquid staking vault\n    LiquidStakingVault public immutable vault;\n    \n    // Events\n    event ProposalCreated(\n        uint256 indexed proposalId,\n        string description,\n        bytes actionData,\n        bytes32 actionDataHash,\n        uint256 snapshotBlock,\n        uint256 exchangeRateSnapshot\n    );\n    \n    event VotingPowerRootPublished(\n        uint256 indexed proposalId,\n        bytes32 votingPowerRoot\n    );\n    \n    event ProposalExecuted(\n        uint256 indexed proposalId,\n        bytes actionData\n    );\n    \n    constructor(address _vault) Ownable(msg.sender) {\n        vault = LiquidStakingVault(_vault);\n    }\n    \n    /**\n     * @dev Create a new governance proposal\n     * @param description Human-readable description of the proposal\n     * @param actionData Encoded action data to execute if proposal passes\n     * @return proposalId ID of the created proposal\n     */\n    function createProposal(\n        string memory description,\n        bytes memory actionData\n    ) external onlyOwner returns (uint256 proposalId) {\n        require(bytes(description).length > 0, \"Description cannot be empty\");\n        require(actionData.length > 0, \"Action data cannot be empty\");\n        \n        proposalId = _nextProposalId++;\n        \n        // Take snapshot of current state\n        uint256 snapshotBlock = block.number;\n        uint256 exchangeRateSnapshot = vault.exchangeRate();\n        \n        // Calculate action data hash\n        bytes32 actionDataHash = keccak256(actionData);\n        \n        proposals[proposalId] = Proposal({\n            id: proposalId,\n            description: description,\n            actionData: actionData,\n            actionDataHash: actionDataHash,\n            snapshotBlock: snapshotBlock,\n            exchangeRateSnapshot: exchangeRateSnapshot,\n            votingPowerRoot: bytes32(0),\n            rootPublished: false,\n            executed: false,\n            createdAt: block.timestamp\n        });\n        \n        emit ProposalCreated(\n            proposalId,\n            description,\n            actionData,\n            actionDataHash,\n            snapshotBlock,\n            exchangeRateSnapshot\n        );\n    }\n    \n    /**\n     * @dev Publish voting power root for a proposal\n     * @param proposalId ID of the proposal\n     * @param votingPowerRoot Merkle root of voting power snapshot\n     */\n    function publishVotingPowerRoot(\n        uint256 proposalId,\n        bytes32 votingPowerRoot\n    ) external onlyOwner {\n        require(proposals[proposalId].id != 0, \"Proposal does not exist\");\n        require(!proposals[proposalId].rootPublished, \"Root already published\");\n        require(votingPowerRoot != bytes32(0), \"Root cannot be zero\");\n        \n        proposals[proposalId].votingPowerRoot = votingPowerRoot;\n        proposals[proposalId].rootPublished = true;\n        \n        emit VotingPowerRootPublished(proposalId, votingPowerRoot);\n    }\n    \n    /**\n     * @dev Execute a proposal (called by GovernanceExecutor)\n     * @param proposalId ID of the proposal to execute\n     */\n    function executeProposal(uint256 proposalId) external {\n        require(proposals[proposalId].id != 0, \"Proposal does not exist\");\n        require(proposals[proposalId].rootPublished, \"Root not published\");\n        require(!proposals[proposalId].executed, \"Proposal already executed\");\n        \n        // Mark as executed\n        proposals[proposalId].executed = true;\n        \n        emit ProposalExecuted(proposalId, proposals[proposalId].actionData);\n    }\n    \n    /**\n     * @dev Get proposal details\n     * @param proposalId ID of the proposal\n     * @return proposal Proposal struct\n     */\n    function getProposal(uint256 proposalId) external view returns (Proposal memory proposal) {\n        require(proposals[proposalId].id != 0, \"Proposal does not exist\");\n        return proposals[proposalId];\n    }\n    \n    /**\n     * @dev Get voting power for a user at a specific block\n     * @param user User address\n     * @param blockNumber Block number for snapshot\n     * @return votingPower User's voting power at the snapshot\n     */\n    function getVotingPowerAtBlock(\n        address user,\n        uint256 blockNumber\n    ) external view returns (uint256 votingPower) {\n        // This would need to be implemented with proper block snapshots\n        // For now, we'll use current state as a placeholder\n        return vault.getVotingPower(user, blockNumber);\n    }\n    \n    /**\n     * @dev Get the next proposal ID\n     */\n    function nextProposalId() external view returns (uint256) {\n        return _nextProposalId;\n    }\n    \n    /**\n     * @dev Check if a proposal exists\n     * @param proposalId ID of the proposal\n     * @return exists True if proposal exists\n     */\n    function proposalExists(uint256 proposalId) external view returns (bool exists) {\n        return proposals[proposalId].id != 0;\n    }\n}\n"},"contracts/LiquidStakingVault.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./WithdrawalNFT.sol\";\n\n/**\n * @title LiquidStakingVault\n * @dev ERC-4626-like liquid staking vault with time-locked redemptions\n * Implements shares model where exchange rate = totalAssets / totalShares\n * LST tokens appreciate over time as rewards are distributed\n */\ncontract LiquidStakingVault is ERC20, ReentrancyGuard, Ownable {\n    using SafeERC20 for IERC20;\n\n    IERC20 public immutable asset;\n    WithdrawalNFT public immutable withdrawalNFT;\n    \n    uint256 public constant UNBONDING_PERIOD = 7 days;\n    uint256 public constant PRECISION = 1e18;\n    \n    // Total assets under management (including rewards)\n    uint256 private _totalAssets;\n    \n    // Total shares outstanding\n    uint256 private _totalShares;\n    \n    // Exchange rate = totalAssets / totalShares (scaled by PRECISION)\n    uint256 public exchangeRate;\n    \n    // Last time exchange rate was updated\n    uint256 public lastUpdateTime;\n    \n    // Events\n    event Deposited(address indexed user, uint256 assets, uint256 shares);\n    event RewardsDistributed(uint256 amount, uint256 newExchangeRate);\n    event WithdrawalInitiated(address indexed user, uint256 shares, uint256 nftId);\n    event WithdrawalClaimed(address indexed user, uint256 nftId, uint256 assets);\n    \n    constructor(\n        address _asset,\n        address _withdrawalNFT,\n        string memory name,\n        string memory symbol\n    ) ERC20(name, symbol) Ownable(msg.sender) {\n        asset = IERC20(_asset);\n        withdrawalNFT = WithdrawalNFT(_withdrawalNFT);\n        exchangeRate = PRECISION; // 1:1 initially\n        lastUpdateTime = block.timestamp;\n    }\n    \n    /**\n     * @dev Deposit assets and mint shares\n     * @param assets Amount of assets to deposit\n     * @param receiver Address to receive shares\n     * @return shares Amount of shares minted\n     */\n    function deposit(uint256 assets, address receiver) \n        external \n        nonReentrant \n        returns (uint256 shares) \n    {\n        require(assets > 0, \"Assets must be > 0\");\n        \n        // Calculate shares based on current exchange rate\n        shares = _convertToShares(assets);\n        require(shares > 0, \"Shares must be > 0\");\n        \n        // Transfer assets from user\n        asset.safeTransferFrom(msg.sender, address(this), assets);\n        \n        // Update state\n        _totalAssets += assets;\n        _totalShares += shares;\n        _updateExchangeRate();\n        \n        // Mint shares to receiver\n        _mint(receiver, shares);\n        \n        emit Deposited(receiver, assets, shares);\n    }\n    \n    /**\n     * @dev Mint shares for assets (alternative to deposit)\n     * @param shares Amount of shares to mint\n     * @param receiver Address to receive shares\n     * @return assets Amount of assets required\n     */\n    function mint(uint256 shares, address receiver) \n        external \n        nonReentrant \n        returns (uint256 assets) \n    {\n        require(shares > 0, \"Shares must be > 0\");\n        \n        // Calculate assets required\n        assets = _convertToAssets(shares);\n        require(assets > 0, \"Assets must be > 0\");\n        \n        // Transfer assets from user\n        asset.safeTransferFrom(msg.sender, address(this), assets);\n        \n        // Update state\n        _totalAssets += assets;\n        _totalShares += shares;\n        _updateExchangeRate();\n        \n        // Mint shares to receiver\n        _mint(receiver, shares);\n        \n        emit Deposited(receiver, assets, shares);\n    }\n    \n    /**\n     * @dev Distribute rewards to increase exchange rate\n     * @param rewardAmount Amount of rewards to distribute\n     */\n    function distributeRewards(uint256 rewardAmount) external onlyOwner {\n        require(rewardAmount > 0, \"Reward amount must be > 0\");\n        \n        // Transfer rewards to vault\n        asset.safeTransferFrom(msg.sender, address(this), rewardAmount);\n        \n        // Update total assets\n        _totalAssets += rewardAmount;\n        \n        // Update exchange rate\n        _updateExchangeRate();\n        \n        emit RewardsDistributed(rewardAmount, exchangeRate);\n    }\n    \n    /**\n     * @dev Initiate withdrawal by burning shares and minting withdrawal NFT\n     * @param shares Amount of shares to burn\n     * @return nftId ID of the withdrawal NFT\n     */\n    function initiateWithdraw(uint256 shares) \n        external \n        nonReentrant \n        returns (uint256 nftId) \n    {\n        require(shares > 0, \"Shares must be > 0\");\n        require(balanceOf(msg.sender) >= shares, \"Insufficient shares\");\n        \n        // Calculate assets owed based on current exchange rate\n        uint256 assetsOwed = _convertToAssets(shares);\n        \n        // Burn shares\n        _burn(msg.sender, shares);\n        _totalShares -= shares;\n        \n        // Calculate available time (current time + unbonding period)\n        uint256 availableAt = block.timestamp + UNBONDING_PERIOD;\n        \n        // Mint withdrawal NFT\n        nftId = withdrawalNFT.mint(msg.sender, assetsOwed, availableAt);\n        \n        emit WithdrawalInitiated(msg.sender, shares, nftId);\n    }\n    \n    /**\n     * @dev Claim withdrawal after unbonding period\n     * @param nftId ID of the withdrawal NFT\n     */\n    function claim(uint256 nftId) external nonReentrant {\n        require(withdrawalNFT.ownerOf(nftId) == msg.sender, \"Not NFT owner\");\n        \n        (uint256 assetsOwed, uint256 availableAt) = withdrawalNFT.getWithdrawalInfo(nftId);\n        require(block.timestamp >= availableAt, \"Withdrawal not available yet\");\n        \n        // Burn NFT\n        withdrawalNFT.burn(nftId);\n        \n        // Transfer assets to user\n        asset.safeTransfer(msg.sender, assetsOwed);\n        \n        emit WithdrawalClaimed(msg.sender, nftId, assetsOwed);\n    }\n    \n    /**\n     * @dev Get total assets under management\n     */\n    function totalAssets() external view returns (uint256) {\n        return _totalAssets;\n    }\n    \n    /**\n     * @dev Get total shares outstanding\n     */\n    function totalShares() external view returns (uint256) {\n        return _totalShares;\n    }\n    \n    /**\n     * @dev Convert assets to shares using current exchange rate\n     */\n    function convertToShares(uint256 assets) external view returns (uint256) {\n        return _convertToShares(assets);\n    }\n    \n    /**\n     * @dev Convert shares to assets using current exchange rate\n     */\n    function convertToAssets(uint256 shares) external view returns (uint256) {\n        return _convertToAssets(shares);\n    }\n    \n    /**\n     * @dev Get voting power for a user (assets + LST * exchange rate)\n     * @param user User address\n     */\n    function getVotingPower(address user, uint256 /* snapshotBlock */) external view returns (uint256) {\n        // Get user's asset balance at snapshot\n        uint256 assetBalance = asset.balanceOf(user);\n        \n        // Get user's LST balance at snapshot (this would need to be implemented with snapshots)\n        uint256 lstBalance = balanceOf(user);\n        \n        // Calculate voting power: assets + floor(LST * exchange rate / 1e18)\n        uint256 lstVotingPower = (lstBalance * exchangeRate) / PRECISION;\n        \n        return assetBalance + lstVotingPower;\n    }\n    \n    /**\n     * @dev Internal function to convert assets to shares\n     */\n    function _convertToShares(uint256 assets) internal view returns (uint256) {\n        if (_totalShares == 0) {\n            return assets; // First deposit\n        }\n        return (assets * PRECISION) / exchangeRate;\n    }\n    \n    /**\n     * @dev Internal function to convert shares to assets\n     */\n    function _convertToAssets(uint256 shares) internal view returns (uint256) {\n        if (_totalShares == 0) {\n            return shares; // First mint: 1:1 ratio\n        }\n        return (shares * exchangeRate) / PRECISION;\n    }\n    \n    /**\n     * @dev Update exchange rate based on current total assets and shares\n     */\n    function _updateExchangeRate() internal {\n        if (_totalShares > 0) {\n            exchangeRate = (_totalAssets * PRECISION) / _totalShares;\n        }\n        lastUpdateTime = block.timestamp;\n    }\n}\n"},"contracts/WithdrawalNFT.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title WithdrawalNFT\n * @dev NFT representing a time-locked withdrawal claim\n * Each NFT contains information about assets owed and when they become available\n */\ncontract WithdrawalNFT is ERC721, Ownable {\n    \n    struct WithdrawalInfo {\n        uint256 assetsOwed;\n        uint256 availableAt;\n    }\n    \n    // Mapping from token ID to withdrawal info\n    mapping(uint256 => WithdrawalInfo) public withdrawals;\n    \n    // Counter for token IDs\n    uint256 private _nextTokenId = 1;\n    \n    // Events\n    event WithdrawalMinted(address indexed to, uint256 indexed tokenId, uint256 assetsOwed, uint256 availableAt);\n    event WithdrawalBurned(uint256 indexed tokenId);\n    \n    constructor() ERC721(\"Withdrawal NFT\", \"WITHDRAWAL\") Ownable(msg.sender) {}\n    \n    /**\n     * @dev Mint a new withdrawal NFT\n     * @param to Address to mint to\n     * @param assetsOwed Amount of assets owed\n     * @param availableAt Timestamp when withdrawal becomes available\n     * @return tokenId ID of the minted NFT\n     */\n    function mint(address to, uint256 assetsOwed, uint256 availableAt) \n        external \n        onlyOwner \n        returns (uint256 tokenId) \n    {\n        tokenId = _nextTokenId++;\n        \n        withdrawals[tokenId] = WithdrawalInfo({\n            assetsOwed: assetsOwed,\n            availableAt: availableAt\n        });\n        \n        _mint(to, tokenId);\n        \n        emit WithdrawalMinted(to, tokenId, assetsOwed, availableAt);\n    }\n    \n    /**\n     * @dev Burn a withdrawal NFT\n     * @param tokenId ID of the NFT to burn\n     */\n    function burn(uint256 tokenId) external onlyOwner {\n        require(ownerOf(tokenId) != address(0), \"Token does not exist\");\n        \n        delete withdrawals[tokenId];\n        _burn(tokenId);\n        \n        emit WithdrawalBurned(tokenId);\n    }\n    \n    /**\n     * @dev Get withdrawal information for a token\n     * @param tokenId ID of the token\n     * @return assetsOwed Amount of assets owed\n     * @return availableAt Timestamp when withdrawal becomes available\n     */\n    function getWithdrawalInfo(uint256 tokenId) external view returns (uint256 assetsOwed, uint256 availableAt) {\n        require(ownerOf(tokenId) != address(0), \"Token does not exist\");\n        WithdrawalInfo memory info = withdrawals[tokenId];\n        return (info.assetsOwed, info.availableAt);\n    }\n    \n    /**\n     * @dev Check if a withdrawal is available\n     * @param tokenId ID of the token\n     * @return available True if withdrawal is available\n     */\n    function isWithdrawalAvailable(uint256 tokenId) external view returns (bool available) {\n        require(ownerOf(tokenId) != address(0), \"Token does not exist\");\n        return block.timestamp >= withdrawals[tokenId].availableAt;\n    }\n    \n    /**\n     * @dev Get the next token ID\n     */\n    function nextTokenId() external view returns (uint256) {\n        return _nextTokenId;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2684],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2685,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2684,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2684],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[229],"IERC165":[4243],"IERC20":[967]},"id":230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":238,"src":"133:36:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"141:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":234,"src":"170:38:1","symbolAliases":[{"foreign":{"id":152,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"178:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":155,"name":"IERC20","nameLocations":["590:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"590:6:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"590:6:1"},{"baseName":{"id":157,"name":"IERC165","nameLocations":["598:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":4243,"src":"598:7:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"598:7:1"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"210:357:1","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":229,"linearizedBaseContracts":[229,4243,967],"name":"IERC1363","nameLocation":"578:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"1148:370:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":168,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"to","nameLocation":"1556:2:1","nodeType":"VariableDeclaration","scope":168,"src":"1548:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"value","nameLocation":"1568:5:1","nodeType":"VariableDeclaration","scope":168,"src":"1560:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"1593:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":165,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:1"},"scope":229,"src":"1523:76:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"1605:453:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":180,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:1","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"2096:2:1","nodeType":"VariableDeclaration","scope":180,"src":"2088:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"value","nameLocation":"2108:5:1","nodeType":"VariableDeclaration","scope":180,"src":"2100:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"data","nameLocation":"2130:4:1","nodeType":"VariableDeclaration","scope":180,"src":"2115:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":174,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":180,"src":"2154:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":177,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:1"},"scope":229,"src":"2063:97:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"2166:453:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"from","nameLocation":"2661:4:1","nodeType":"VariableDeclaration","scope":192,"src":"2653:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"to","nameLocation":"2675:2:1","nodeType":"VariableDeclaration","scope":192,"src":"2667:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"value","nameLocation":"2687:5:1","nodeType":"VariableDeclaration","scope":192,"src":"2679:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"2712:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:1"},"scope":229,"src":"2624:94:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"2724:536:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":206,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:1","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"from","nameLocation":"3302:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3294:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"to","nameLocation":"3316:2:1","nodeType":"VariableDeclaration","scope":206,"src":"3308:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"value","nameLocation":"3328:5:1","nodeType":"VariableDeclaration","scope":206,"src":"3320:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"data","nameLocation":"3350:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3335:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":200,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"3374:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:1"},"scope":229,"src":"3265:115:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"3386:390:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:1","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"spender","nameLocation":"3813:7:1","nodeType":"VariableDeclaration","scope":216,"src":"3805:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"value","nameLocation":"3830:5:1","nodeType":"VariableDeclaration","scope":216,"src":"3822:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":216,"src":"3855:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":213,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:1"},"scope":229,"src":"3781:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3867:478:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":228,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:1","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"spender","nameLocation":"4382:7:1","nodeType":"VariableDeclaration","scope":228,"src":"4374:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"value","nameLocation":"4399:5:1","nodeType":"VariableDeclaration","scope":228,"src":"4391:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"data","nameLocation":"4421:4:1","nodeType":"VariableDeclaration","scope":228,"src":"4406:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":222,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:1"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"4445:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:1"},"scope":229,"src":"4350:101:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":230,"src":"568:3885:1","usedErrors":[],"usedEvents":[901,910]}],"src":"107:4347:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[4243]},"id":234,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":231,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":234,"sourceUnit":4244,"src":"133:59:2","symbolAliases":[{"foreign":{"id":232,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[967]},"id":238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":235,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"105:25:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":238,"sourceUnit":968,"src":"132:49:3","symbolAliases":[{"foreign":{"id":236,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"140:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:77:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[374],"IERC20Errors":[279],"IERC721Errors":[327]},"id":375,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":239,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"138:141:4","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":279,"linearizedBaseContracts":[279],"name":"IERC20Errors","nameLocation":"290:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"309:309:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":249,"name":"ERC20InsufficientBalance","nameLocation":"629:24:4","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"sender","nameLocation":"662:6:4","nodeType":"VariableDeclaration","scope":249,"src":"654:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"balance","nameLocation":"678:7:4","nodeType":"VariableDeclaration","scope":249,"src":"670:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"needed","nameLocation":"695:6:4","nodeType":"VariableDeclaration","scope":249,"src":"687:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:4"},"src":"623:80:4"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"709:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":254,"name":"ERC20InvalidSender","nameLocation":"872:18:4","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"899:6:4","nodeType":"VariableDeclaration","scope":254,"src":"891:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:4"},"src":"866:41:4"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"913:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":259,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:4","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:4","nodeType":"VariableDeclaration","scope":259,"src":"1104:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:4"},"src":"1077:45:4"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"1128:345:4","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":268,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:4","nodeType":"ErrorDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"spender","nameLocation":"1519:7:4","nodeType":"VariableDeclaration","scope":268,"src":"1511:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:4","nodeType":"VariableDeclaration","scope":268,"src":"1528:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":263,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"needed","nameLocation":"1555:6:4","nodeType":"VariableDeclaration","scope":268,"src":"1547:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:4"},"src":"1478:85:4"},{"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"1569:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":273,"name":"ERC20InvalidApprover","nameLocation":"1754:20:4","nodeType":"ErrorDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"approver","nameLocation":"1783:8:4","nodeType":"VariableDeclaration","scope":273,"src":"1775:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:4"},"src":"1748:45:4"},{"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"1799:195:4","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":278,"name":"ERC20InvalidSpender","nameLocation":"2005:19:4","nodeType":"ErrorDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"spender","nameLocation":"2033:7:4","nodeType":"VariableDeclaration","scope":278,"src":"2025:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:4"},"src":"1999:43:4"}],"scope":375,"src":"280:1764:4","usedErrors":[249,254,259,268,273,278],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"2046:143:4","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":327,"linearizedBaseContracts":[327],"name":"IERC721Errors","nameLocation":"2200:13:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":281,"nodeType":"StructuredDocumentation","src":"2220:219:4","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":285,"name":"ERC721InvalidOwner","nameLocation":"2450:18:4","nodeType":"ErrorDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":283,"mutability":"mutable","name":"owner","nameLocation":"2477:5:4","nodeType":"VariableDeclaration","scope":285,"src":"2469:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":282,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:4"},"src":"2444:40:4"},{"documentation":{"id":286,"nodeType":"StructuredDocumentation","src":"2490:132:4","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":290,"name":"ERC721NonexistentToken","nameLocation":"2633:22:4","nodeType":"ErrorDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:4","nodeType":"VariableDeclaration","scope":290,"src":"2656:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:4"},"src":"2627:46:4"},{"documentation":{"id":291,"nodeType":"StructuredDocumentation","src":"2679:289:4","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":299,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:4","nodeType":"ErrorDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":293,"mutability":"mutable","name":"sender","nameLocation":"3008:6:4","nodeType":"VariableDeclaration","scope":299,"src":"3000:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:4","nodeType":"VariableDeclaration","scope":299,"src":"3016:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"owner","nameLocation":"3041:5:4","nodeType":"VariableDeclaration","scope":299,"src":"3033:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":296,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:4"},"src":"2973:75:4"},{"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"3054:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":304,"name":"ERC721InvalidSender","nameLocation":"3217:19:4","nodeType":"ErrorDefinition","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"sender","nameLocation":"3245:6:4","nodeType":"VariableDeclaration","scope":304,"src":"3237:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:4"},"src":"3211:42:4"},{"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"3259:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":309,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:4","nodeType":"ErrorDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:4","nodeType":"VariableDeclaration","scope":309,"src":"3451:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:4"},"src":"3423:46:4"},{"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"3475:247:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":316,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:4","nodeType":"ErrorDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"operator","nameLocation":"3768:8:4","nodeType":"VariableDeclaration","scope":316,"src":"3760:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:4","nodeType":"VariableDeclaration","scope":316,"src":"3778:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":313,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:4"},"src":"3727:68:4"},{"documentation":{"id":317,"nodeType":"StructuredDocumentation","src":"3801:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":321,"name":"ERC721InvalidApprover","nameLocation":"3986:21:4","nodeType":"ErrorDefinition","parameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"approver","nameLocation":"4016:8:4","nodeType":"VariableDeclaration","scope":321,"src":"4008:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:4"},"src":"3980:46:4"},{"documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"4032:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":326,"name":"ERC721InvalidOperator","nameLocation":"4240:21:4","nodeType":"ErrorDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":324,"mutability":"mutable","name":"operator","nameLocation":"4270:8:4","nodeType":"VariableDeclaration","scope":326,"src":"4262:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:4"},"src":"4234:46:4"}],"scope":375,"src":"2190:2092:4","usedErrors":[285,290,299,304,309,316,321,326],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"4284:145:4","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":374,"linearizedBaseContracts":[374],"name":"IERC1155Errors","nameLocation":"4440:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":329,"nodeType":"StructuredDocumentation","src":"4461:361:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":339,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:4","nodeType":"ErrorDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"sender","nameLocation":"4868:6:4","nodeType":"VariableDeclaration","scope":339,"src":"4860:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"mutability":"mutable","name":"balance","nameLocation":"4884:7:4","nodeType":"VariableDeclaration","scope":339,"src":"4876:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":335,"mutability":"mutable","name":"needed","nameLocation":"4901:6:4","nodeType":"VariableDeclaration","scope":339,"src":"4893:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":337,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:4","nodeType":"VariableDeclaration","scope":339,"src":"4909:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:4"},"src":"4827:99:4"},{"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"4932:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":344,"name":"ERC1155InvalidSender","nameLocation":"5095:20:4","nodeType":"ErrorDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"sender","nameLocation":"5124:6:4","nodeType":"VariableDeclaration","scope":344,"src":"5116:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:4"},"src":"5089:43:4"},{"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"5138:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":349,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:4","nodeType":"ErrorDefinition","parameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:4","nodeType":"VariableDeclaration","scope":349,"src":"5331:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:4"},"src":"5302:47:4"},{"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"5355:256:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":356,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:4","nodeType":"ErrorDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"operator","nameLocation":"5659:8:4","nodeType":"VariableDeclaration","scope":356,"src":"5651:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":354,"mutability":"mutable","name":"owner","nameLocation":"5677:5:4","nodeType":"VariableDeclaration","scope":356,"src":"5669:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:4"},"src":"5616:68:4"},{"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"5690:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":361,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:4","nodeType":"ErrorDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"approver","nameLocation":"5906:8:4","nodeType":"VariableDeclaration","scope":361,"src":"5898:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:4"},"src":"5869:47:4"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"5922:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":366,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:4","nodeType":"ErrorDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"operator","nameLocation":"6161:8:4","nodeType":"VariableDeclaration","scope":366,"src":"6153:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":363,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:4"},"src":"6124:47:4"},{"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"6177:280:4","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":373,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:4","nodeType":"ErrorDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:4","nodeType":"VariableDeclaration","scope":373,"src":"6494:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":368,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:4","nodeType":"VariableDeclaration","scope":373,"src":"6513:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":370,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:4"},"src":"6462:73:4"}],"scope":375,"src":"4430:2107:4","usedErrors":[339,344,349,356,361,366,373],"usedEvents":[]}],"src":"112:6426:4"},"id":4},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2684],"ERC20":[889],"IERC20":[967],"IERC20Errors":[279],"IERC20Metadata":[993]},"id":890,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":376,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":378,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":890,"sourceUnit":968,"src":"131:36:5","symbolAliases":[{"foreign":{"id":377,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"139:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":380,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":890,"sourceUnit":994,"src":"168:63:5","symbolAliases":[{"foreign":{"id":379,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"176:14:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":890,"sourceUnit":2685,"src":"232:48:5","symbolAliases":[{"foreign":{"id":381,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"240:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":384,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":890,"sourceUnit":375,"src":"281:65:5","symbolAliases":[{"foreign":{"id":383,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"289:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":386,"name":"Context","nameLocations":["1133:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":2684,"src":"1133:7:5"},"id":387,"nodeType":"InheritanceSpecifier","src":"1133:7:5"},{"baseName":{"id":388,"name":"IERC20","nameLocations":["1142:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"1142:6:5"},"id":389,"nodeType":"InheritanceSpecifier","src":"1142:6:5"},{"baseName":{"id":390,"name":"IERC20Metadata","nameLocations":["1150:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":993,"src":"1150:14:5"},"id":391,"nodeType":"InheritanceSpecifier","src":"1150:14:5"},{"baseName":{"id":392,"name":"IERC20Errors","nameLocations":["1166:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":279,"src":"1166:12:5"},"id":393,"nodeType":"InheritanceSpecifier","src":"1166:12:5"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"348:757:5","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":889,"linearizedBaseContracts":[889,279,993,967,2684],"name":"ERC20","nameLocation":"1124:5:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":397,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:5","nodeType":"VariableDeclaration","scope":889,"src":"1185:53:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":396,"keyName":"account","keyNameLocation":"1201:7:5","keyType":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":395,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":403,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:5","nodeType":"VariableDeclaration","scope":889,"src":"1245:83:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":402,"keyName":"account","keyNameLocation":"1261:7:5","keyType":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":401,"keyName":"spender","keyNameLocation":"1288:7:5","keyType":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":400,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":405,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:5","nodeType":"VariableDeclaration","scope":889,"src":"1335:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":404,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":407,"mutability":"mutable","name":"_name","nameLocation":"1385:5:5","nodeType":"VariableDeclaration","scope":889,"src":"1370:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":406,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":409,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:5","nodeType":"VariableDeclaration","scope":889,"src":"1396:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":408,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":425,"nodeType":"Block","src":"1638:57:5","statements":[{"expression":{"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":417,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1648:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":418,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"1656:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":420,"nodeType":"ExpressionStatement","src":"1648:13:5"},{"expression":{"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":421,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"1671:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":422,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"1681:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":424,"nodeType":"ExpressionStatement","src":"1671:17:5"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"1425:152:5","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":426,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"name_","nameLocation":"1608:5:5","nodeType":"VariableDeclaration","scope":426,"src":"1594:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":411,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:5","nodeType":"VariableDeclaration","scope":426,"src":"1615:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":413,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:5"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[],"src":"1638:0:5"},"scope":889,"src":"1582:113:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[980],"body":{"id":434,"nodeType":"Block","src":"1820:29:5","statements":[{"expression":{"id":432,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1837:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":431,"id":433,"nodeType":"Return","src":"1830:12:5"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"1701:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":435,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:5","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[],"src":"1773:2:5"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"1805:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":429,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:5"},"scope":889,"src":"1760:89:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[986],"body":{"id":443,"nodeType":"Block","src":"2024:31:5","statements":[{"expression":{"id":441,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"2041:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":440,"id":442,"nodeType":"Return","src":"2034:14:5"}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"1855:102:5","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":444,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:5","nodeType":"FunctionDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[],"src":"1977:2:5"},"returnParameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":444,"src":"2009:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":438,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:5"},"scope":889,"src":"1962:93:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[992],"body":{"id":452,"nodeType":"Block","src":"2744:26:5","statements":[{"expression":{"hexValue":"3138","id":450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:5","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":449,"id":451,"nodeType":"Return","src":"2754:9:5"}]},"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"2061:622:5","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":453,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:5","nodeType":"FunctionDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[],"src":"2705:2:5"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":453,"src":"2737:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":447,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:5"},"scope":889,"src":"2688:82:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[916],"body":{"id":461,"nodeType":"Block","src":"2864:36:5","statements":[{"expression":{"id":459,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"2881:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":458,"id":460,"nodeType":"Return","src":"2874:19:5"}]},"documentation":{"id":454,"nodeType":"StructuredDocumentation","src":"2776:22:5","text":"@inheritdoc IERC20"},"functionSelector":"18160ddd","id":462,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2812:11:5","nodeType":"FunctionDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"2823:2:5"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":462,"src":"2855:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:9:5"},"scope":889,"src":"2803:97:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[924],"body":{"id":474,"nodeType":"Block","src":"3007:42:5","statements":[{"expression":{"baseExpression":{"id":470,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"3024:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":472,"indexExpression":{"id":471,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"3034:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3024:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":469,"id":473,"nodeType":"Return","src":"3017:25:5"}]},"documentation":{"id":463,"nodeType":"StructuredDocumentation","src":"2906:22:5","text":"@inheritdoc IERC20"},"functionSelector":"70a08231","id":475,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2942:9:5","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"account","nameLocation":"2960:7:5","nodeType":"VariableDeclaration","scope":475,"src":"2952:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"2952:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2951:17:5"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"2998:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"2998:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2997:9:5"},"scope":889,"src":"2933:116:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[934],"body":{"id":498,"nodeType":"Block","src":"3319:103:5","statements":[{"assignments":[486],"declarations":[{"constant":false,"id":486,"mutability":"mutable","name":"owner","nameLocation":"3337:5:5","nodeType":"VariableDeclaration","scope":498,"src":"3329:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":485,"name":"address","nodeType":"ElementaryTypeName","src":"3329:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":489,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":487,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"3345:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3345:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3329:28:5"},{"expression":{"arguments":[{"id":491,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"3377:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":492,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"3384:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"3388:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":490,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"3367:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3367:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":495,"nodeType":"ExpressionStatement","src":"3367:27:5"},{"expression":{"hexValue":"74727565","id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3411:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":484,"id":497,"nodeType":"Return","src":"3404:11:5"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"3055:184:5","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":499,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3253:8:5","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"to","nameLocation":"3270:2:5","nodeType":"VariableDeclaration","scope":499,"src":"3262:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"3262:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"value","nameLocation":"3282:5:5","nodeType":"VariableDeclaration","scope":499,"src":"3274:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":479,"name":"uint256","nodeType":"ElementaryTypeName","src":"3274:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3261:27:5"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":499,"src":"3313:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":482,"name":"bool","nodeType":"ElementaryTypeName","src":"3313:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3312:6:5"},"scope":889,"src":"3244:178:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[944],"body":{"id":515,"nodeType":"Block","src":"3544:51:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":509,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3561:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":511,"indexExpression":{"id":510,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"3573:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":513,"indexExpression":{"id":512,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"3580:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":508,"id":514,"nodeType":"Return","src":"3554:34:5"}]},"documentation":{"id":500,"nodeType":"StructuredDocumentation","src":"3428:22:5","text":"@inheritdoc IERC20"},"functionSelector":"dd62ed3e","id":516,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3464:9:5","nodeType":"FunctionDefinition","parameters":{"id":505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"owner","nameLocation":"3482:5:5","nodeType":"VariableDeclaration","scope":516,"src":"3474:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":501,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":504,"mutability":"mutable","name":"spender","nameLocation":"3497:7:5","nodeType":"VariableDeclaration","scope":516,"src":"3489:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":503,"name":"address","nodeType":"ElementaryTypeName","src":"3489:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3473:32:5"},"returnParameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":516,"src":"3535:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":506,"name":"uint256","nodeType":"ElementaryTypeName","src":"3535:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3534:9:5"},"scope":889,"src":"3455:140:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[954],"body":{"id":539,"nodeType":"Block","src":"3981:107:5","statements":[{"assignments":[527],"declarations":[{"constant":false,"id":527,"mutability":"mutable","name":"owner","nameLocation":"3999:5:5","nodeType":"VariableDeclaration","scope":539,"src":"3991:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"3991:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":530,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":528,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"4007:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3991:28:5"},{"expression":{"arguments":[{"id":532,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"4038:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":533,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"4045:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"4054:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":531,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[780,840],"referencedDeclaration":780,"src":"4029:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4029:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":536,"nodeType":"ExpressionStatement","src":"4029:31:5"},{"expression":{"hexValue":"74727565","id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4077:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":525,"id":538,"nodeType":"Return","src":"4070:11:5"}]},"documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"3601:296:5","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":540,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3911:7:5","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"spender","nameLocation":"3927:7:5","nodeType":"VariableDeclaration","scope":540,"src":"3919:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"3919:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"value","nameLocation":"3944:5:5","nodeType":"VariableDeclaration","scope":540,"src":"3936:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"3936:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3918:32:5"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":540,"src":"3975:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":523,"name":"bool","nodeType":"ElementaryTypeName","src":"3975:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3974:6:5"},"scope":889,"src":"3902:186:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[966],"body":{"id":571,"nodeType":"Block","src":"4773:151:5","statements":[{"assignments":[553],"declarations":[{"constant":false,"id":553,"mutability":"mutable","name":"spender","nameLocation":"4791:7:5","nodeType":"VariableDeclaration","scope":571,"src":"4783:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"4783:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":556,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":554,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"4801:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4801:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4783:30:5"},{"expression":{"arguments":[{"id":558,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"4839:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":559,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"4845:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"4854:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":557,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"4823:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":562,"nodeType":"ExpressionStatement","src":"4823:37:5"},{"expression":{"arguments":[{"id":564,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"4880:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":565,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"4886:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"4890:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":563,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"4870:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4870:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":568,"nodeType":"ExpressionStatement","src":"4870:26:5"},{"expression":{"hexValue":"74727565","id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4913:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":551,"id":570,"nodeType":"Return","src":"4906:11:5"}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"4094:581:5","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":572,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4689:12:5","nodeType":"FunctionDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"from","nameLocation":"4710:4:5","nodeType":"VariableDeclaration","scope":572,"src":"4702:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"4702:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":545,"mutability":"mutable","name":"to","nameLocation":"4724:2:5","nodeType":"VariableDeclaration","scope":572,"src":"4716:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"4716:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"value","nameLocation":"4736:5:5","nodeType":"VariableDeclaration","scope":572,"src":"4728:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"4728:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:41:5"},"returnParameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":572,"src":"4767:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":549,"name":"bool","nodeType":"ElementaryTypeName","src":"4767:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4766:6:5"},"scope":889,"src":"4680:244:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":618,"nodeType":"Block","src":"5366:231:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":582,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"5380:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5396:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5388:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:5","typeDescriptions":{}}},"id":586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5388:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5380:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":596,"nodeType":"IfStatement","src":"5376:86:5","trueBody":{"id":595,"nodeType":"Block","src":"5400:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5448:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5440:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"5440:7:5","typeDescriptions":{}}},"id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5440:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":588,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"5421:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":594,"nodeType":"RevertStatement","src":"5414:37:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":597,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"5475:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5489:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5481:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"5481:7:5","typeDescriptions":{}}},"id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5481:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5475:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":611,"nodeType":"IfStatement","src":"5471:86:5","trueBody":{"id":610,"nodeType":"Block","src":"5493:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5543:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5535:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"5535:7:5","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":603,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"5514:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5514:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":609,"nodeType":"RevertStatement","src":"5507:39:5"}]}},{"expression":{"arguments":[{"id":613,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"5574:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"5580:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"5584:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":612,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"5566:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5566:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"ExpressionStatement","src":"5566:24:5"}]},"documentation":{"id":573,"nodeType":"StructuredDocumentation","src":"4930:362:5","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":619,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5306:9:5","nodeType":"FunctionDefinition","parameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"from","nameLocation":"5324:4:5","nodeType":"VariableDeclaration","scope":619,"src":"5316:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"to","nameLocation":"5338:2:5","nodeType":"VariableDeclaration","scope":619,"src":"5330:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"5330:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"value","nameLocation":"5350:5:5","nodeType":"VariableDeclaration","scope":619,"src":"5342:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":578,"name":"uint256","nodeType":"ElementaryTypeName","src":"5342:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5315:41:5"},"returnParameters":{"id":581,"nodeType":"ParameterList","parameters":[],"src":"5366:0:5"},"scope":889,"src":"5297:300:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":695,"nodeType":"Block","src":"5987:1032:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":629,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6001:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6017:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6009:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"6009:7:5","typeDescriptions":{}}},"id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6009:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6001:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":666,"nodeType":"Block","src":"6175:362:5","statements":[{"assignments":[641],"declarations":[{"constant":false,"id":641,"mutability":"mutable","name":"fromBalance","nameLocation":"6197:11:5","nodeType":"VariableDeclaration","scope":666,"src":"6189:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":640,"name":"uint256","nodeType":"ElementaryTypeName","src":"6189:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":645,"initialValue":{"baseExpression":{"id":642,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"6211:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":644,"indexExpression":{"id":643,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6221:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6211:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6189:37:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":646,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"6244:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6258:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6244:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":656,"nodeType":"IfStatement","src":"6240:115:5","trueBody":{"id":655,"nodeType":"Block","src":"6265:90:5","statements":[{"errorCall":{"arguments":[{"id":650,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6315:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":651,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"6321:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6334:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":649,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"6290:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6290:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":654,"nodeType":"RevertStatement","src":"6283:57:5"}]}},{"id":665,"nodeType":"UncheckedBlock","src":"6368:159:5","statements":[{"expression":{"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":657,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"6475:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":659,"indexExpression":{"id":658,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6485:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6475:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":660,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"6493:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6507:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6493:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":664,"nodeType":"ExpressionStatement","src":"6475:37:5"}]}]},"id":667,"nodeType":"IfStatement","src":"5997:540:5","trueBody":{"id":639,"nodeType":"Block","src":"6021:148:5","statements":[{"expression":{"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":635,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"6137:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6153:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6137:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":638,"nodeType":"ExpressionStatement","src":"6137:21:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":668,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"6551:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6565:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6557:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"6557:7:5","typeDescriptions":{}}},"id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6557:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6551:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":687,"nodeType":"Block","src":"6766:206:5","statements":[{"id":686,"nodeType":"UncheckedBlock","src":"6780:182:5","statements":[{"expression":{"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":680,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"6925:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":682,"indexExpression":{"id":681,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"6935:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6925:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6942:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6925:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":685,"nodeType":"ExpressionStatement","src":"6925:22:5"}]}]},"id":688,"nodeType":"IfStatement","src":"6547:425:5","trueBody":{"id":679,"nodeType":"Block","src":"6569:191:5","statements":[{"id":678,"nodeType":"UncheckedBlock","src":"6583:167:5","statements":[{"expression":{"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":674,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"6714:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6730:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6714:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":677,"nodeType":"ExpressionStatement","src":"6714:21:5"}]}]}},{"eventCall":{"arguments":[{"id":690,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6996:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":691,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"7002:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"7006:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":689,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"6987:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6987:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":694,"nodeType":"EmitStatement","src":"6982:30:5"}]},"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"5603:304:5","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":696,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5921:7:5","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"from","nameLocation":"5937:4:5","nodeType":"VariableDeclaration","scope":696,"src":"5929:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"5929:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"to","nameLocation":"5951:2:5","nodeType":"VariableDeclaration","scope":696,"src":"5943:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"5943:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"value","nameLocation":"5963:5:5","nodeType":"VariableDeclaration","scope":696,"src":"5955:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"5955:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5928:41:5"},"returnParameters":{"id":628,"nodeType":"ParameterList","parameters":[],"src":"5987:0:5"},"scope":889,"src":"5912:1107:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":728,"nodeType":"Block","src":"7418:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":704,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"7432:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7451:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7443:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"7443:7:5","typeDescriptions":{}}},"id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7443:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7432:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":718,"nodeType":"IfStatement","src":"7428:91:5","trueBody":{"id":717,"nodeType":"Block","src":"7455:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7505:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7497:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":711,"name":"address","nodeType":"ElementaryTypeName","src":"7497:7:5","typeDescriptions":{}}},"id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7497:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":710,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"7476:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7476:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":716,"nodeType":"RevertStatement","src":"7469:39:5"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7544:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7536:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"7536:7:5","typeDescriptions":{}}},"id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7536:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":724,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"7548:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"7557:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":719,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"7528:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7528:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":727,"nodeType":"ExpressionStatement","src":"7528:35:5"}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"7025:332:5","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":729,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7371:5:5","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"account","nameLocation":"7385:7:5","nodeType":"VariableDeclaration","scope":729,"src":"7377:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"7377:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"value","nameLocation":"7402:5:5","nodeType":"VariableDeclaration","scope":729,"src":"7394:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":700,"name":"uint256","nodeType":"ElementaryTypeName","src":"7394:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7376:32:5"},"returnParameters":{"id":703,"nodeType":"ParameterList","parameters":[],"src":"7418:0:5"},"scope":889,"src":"7362:208:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":761,"nodeType":"Block","src":"7944:150:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":737,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"7958:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7977:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7969:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"7969:7:5","typeDescriptions":{}}},"id":741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7969:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7958:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":751,"nodeType":"IfStatement","src":"7954:89:5","trueBody":{"id":750,"nodeType":"Block","src":"7981:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8029:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8021:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"8021:7:5","typeDescriptions":{}}},"id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":743,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"8002:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8002:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":749,"nodeType":"RevertStatement","src":"7995:37:5"}]}},{"expression":{"arguments":[{"id":753,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"8060:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8077:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8069:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"8069:7:5","typeDescriptions":{}}},"id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"8081:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":752,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"8052:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":760,"nodeType":"ExpressionStatement","src":"8052:35:5"}]},"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"7576:307:5","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":762,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7897:5:5","nodeType":"FunctionDefinition","parameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"account","nameLocation":"7911:7:5","nodeType":"VariableDeclaration","scope":762,"src":"7903:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"7903:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":734,"mutability":"mutable","name":"value","nameLocation":"7928:5:5","nodeType":"VariableDeclaration","scope":762,"src":"7920:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":733,"name":"uint256","nodeType":"ElementaryTypeName","src":"7920:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7902:32:5"},"returnParameters":{"id":736,"nodeType":"ParameterList","parameters":[],"src":"7944:0:5"},"scope":889,"src":"7888:206:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":779,"nodeType":"Block","src":"8704:54:5","statements":[{"expression":{"arguments":[{"id":773,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8723:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":774,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"8730:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"8739:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8746:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":772,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[780,840],"referencedDeclaration":840,"src":"8714:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8714:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":778,"nodeType":"ExpressionStatement","src":"8714:37:5"}]},"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"8100:525:5","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":780,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8639:8:5","nodeType":"FunctionDefinition","parameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"owner","nameLocation":"8656:5:5","nodeType":"VariableDeclaration","scope":780,"src":"8648:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"8648:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":767,"mutability":"mutable","name":"spender","nameLocation":"8671:7:5","nodeType":"VariableDeclaration","scope":780,"src":"8663:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"value","nameLocation":"8688:5:5","nodeType":"VariableDeclaration","scope":780,"src":"8680:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"8680:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8647:47:5"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[],"src":"8704:0:5"},"scope":889,"src":"8630:128:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":839,"nodeType":"Block","src":"9703:334:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"9717:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9726:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"9726:7:5","typeDescriptions":{}}},"id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9726:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9717:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":806,"nodeType":"IfStatement","src":"9713:89:5","trueBody":{"id":805,"nodeType":"Block","src":"9738:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9788:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"9780:7:5","typeDescriptions":{}}},"id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":798,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"9759:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9759:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":804,"nodeType":"RevertStatement","src":"9752:39:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":807,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"9815:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9834:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9826:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"9826:7:5","typeDescriptions":{}}},"id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9826:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9815:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":821,"nodeType":"IfStatement","src":"9811:90:5","trueBody":{"id":820,"nodeType":"Block","src":"9838:63:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9887:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9879:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":814,"name":"address","nodeType":"ElementaryTypeName","src":"9879:7:5","typeDescriptions":{}}},"id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9879:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":813,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"9859:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9859:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":819,"nodeType":"RevertStatement","src":"9852:38:5"}]}},{"expression":{"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":822,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"9910:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":825,"indexExpression":{"id":823,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"9922:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9910:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":826,"indexExpression":{"id":824,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"9929:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9910:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"9940:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9910:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":829,"nodeType":"ExpressionStatement","src":"9910:35:5"},{"condition":{"id":830,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"9959:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":838,"nodeType":"IfStatement","src":"9955:76:5","trueBody":{"id":837,"nodeType":"Block","src":"9970:61:5","statements":[{"eventCall":{"arguments":[{"id":832,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"9998:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":833,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"10005:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"10014:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":831,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"9989:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9989:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":836,"nodeType":"EmitStatement","src":"9984:36:5"}]}}]},"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"8764:836:5","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":840,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9614:8:5","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"owner","nameLocation":"9631:5:5","nodeType":"VariableDeclaration","scope":840,"src":"9623:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"9623:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":785,"mutability":"mutable","name":"spender","nameLocation":"9646:7:5","nodeType":"VariableDeclaration","scope":840,"src":"9638:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"9638:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"value","nameLocation":"9663:5:5","nodeType":"VariableDeclaration","scope":840,"src":"9655:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":786,"name":"uint256","nodeType":"ElementaryTypeName","src":"9655:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"emitEvent","nameLocation":"9675:9:5","nodeType":"VariableDeclaration","scope":840,"src":"9670:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":788,"name":"bool","nodeType":"ElementaryTypeName","src":"9670:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9622:63:5"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[],"src":"9703:0:5"},"scope":889,"src":"9605:432:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":887,"nodeType":"Block","src":"10408:387:5","statements":[{"assignments":[851],"declarations":[{"constant":false,"id":851,"mutability":"mutable","name":"currentAllowance","nameLocation":"10426:16:5","nodeType":"VariableDeclaration","scope":887,"src":"10418:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"10418:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":856,"initialValue":{"arguments":[{"id":853,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"10455:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":854,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10462:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":852,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"10445:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10445:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10418:52:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":857,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10484:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10508:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"10508:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":858,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10503:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10503:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10517:3:5","memberName":"max","nodeType":"MemberAccess","src":"10503:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10484:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":886,"nodeType":"IfStatement","src":"10480:309:5","trueBody":{"id":885,"nodeType":"Block","src":"10522:267:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":864,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10540:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"10559:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10540:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":874,"nodeType":"IfStatement","src":"10536:130:5","trueBody":{"id":873,"nodeType":"Block","src":"10566:100:5","statements":[{"errorCall":{"arguments":[{"id":868,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10618:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":869,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10627:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"10645:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":867,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"10591:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10591:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":872,"nodeType":"RevertStatement","src":"10584:67:5"}]}},{"id":884,"nodeType":"UncheckedBlock","src":"10679:100:5","statements":[{"expression":{"arguments":[{"id":876,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"10716:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":877,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10723:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":878,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10732:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"10751:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10732:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10758:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":875,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[780,840],"referencedDeclaration":840,"src":"10707:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10707:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"ExpressionStatement","src":"10707:57:5"}]}]}}]},"documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"10043:271:5","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":888,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10328:15:5","nodeType":"FunctionDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"owner","nameLocation":"10352:5:5","nodeType":"VariableDeclaration","scope":888,"src":"10344:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"10344:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"spender","nameLocation":"10367:7:5","nodeType":"VariableDeclaration","scope":888,"src":"10359:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"10359:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"value","nameLocation":"10384:5:5","nodeType":"VariableDeclaration","scope":888,"src":"10376:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"10376:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10343:47:5"},"returnParameters":{"id":849,"nodeType":"ParameterList","parameters":[],"src":"10408:0:5"},"scope":889,"src":"10319:476:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":890,"src":"1106:9691:5","usedErrors":[249,254,259,268,273,278],"usedEvents":[901,910]}],"src":"105:10693:5"},"id":5},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[967]},"id":968,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":891,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"133:71:6","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":967,"linearizedBaseContracts":[967],"name":"IERC20","nameLocation":"215:6:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":893,"nodeType":"StructuredDocumentation","src":"228:158:6","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":901,"name":"Transfer","nameLocation":"397:8:6","nodeType":"EventDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:6","nodeType":"VariableDeclaration","scope":901,"src":"406:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":897,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:6","nodeType":"VariableDeclaration","scope":901,"src":"428:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":899,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:6","nodeType":"VariableDeclaration","scope":901,"src":"448:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":898,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:6"},"src":"391:72:6"},{"anonymous":false,"documentation":{"id":902,"nodeType":"StructuredDocumentation","src":"469:148:6","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":910,"name":"Approval","nameLocation":"628:8:6","nodeType":"EventDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:6","nodeType":"VariableDeclaration","scope":910,"src":"637:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":906,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:6","nodeType":"VariableDeclaration","scope":910,"src":"660:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":908,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:6","nodeType":"VariableDeclaration","scope":910,"src":"685:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":907,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:6"},"src":"622:78:6"},{"documentation":{"id":911,"nodeType":"StructuredDocumentation","src":"706:65:6","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":916,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:6","nodeType":"FunctionDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"796:2:6"},"returnParameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":916,"src":"822:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:6"},"scope":967,"src":"776:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":917,"nodeType":"StructuredDocumentation","src":"837:71:6","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":924,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:6","nodeType":"FunctionDefinition","parameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"account","nameLocation":"940:7:6","nodeType":"VariableDeclaration","scope":924,"src":"932:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:6"},"returnParameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":924,"src":"972:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:6"},"scope":967,"src":"913:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":925,"nodeType":"StructuredDocumentation","src":"987:213:6","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":934,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:6","nodeType":"FunctionDefinition","parameters":{"id":930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"to","nameLocation":"1231:2:6","nodeType":"VariableDeclaration","scope":934,"src":"1223:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"value","nameLocation":"1243:5:6","nodeType":"VariableDeclaration","scope":934,"src":"1235:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":928,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:6"},"returnParameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":934,"src":"1268:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":931,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:6"},"scope":967,"src":"1205:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":935,"nodeType":"StructuredDocumentation","src":"1280:264:6","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":944,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:6","nodeType":"FunctionDefinition","parameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"owner","nameLocation":"1576:5:6","nodeType":"VariableDeclaration","scope":944,"src":"1568:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"spender","nameLocation":"1591:7:6","nodeType":"VariableDeclaration","scope":944,"src":"1583:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:6"},"returnParameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":944,"src":"1623:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":941,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:6"},"scope":967,"src":"1549:83:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"1638:667:6","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":954,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:6","nodeType":"FunctionDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"spender","nameLocation":"2335:7:6","nodeType":"VariableDeclaration","scope":954,"src":"2327:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"value","nameLocation":"2352:5:6","nodeType":"VariableDeclaration","scope":954,"src":"2344:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":948,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:6"},"returnParameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":954,"src":"2377:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":951,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:6"},"scope":967,"src":"2310:73:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"2389:297:6","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":966,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:6","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"from","nameLocation":"2721:4:6","nodeType":"VariableDeclaration","scope":966,"src":"2713:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"to","nameLocation":"2735:2:6","nodeType":"VariableDeclaration","scope":966,"src":"2727:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"value","nameLocation":"2747:5:6","nodeType":"VariableDeclaration","scope":966,"src":"2739:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:6"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":966,"src":"2772:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":963,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:6"},"scope":967,"src":"2691:87:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":968,"src":"205:2575:6","usedErrors":[],"usedEvents":[901,910]}],"src":"106:2675:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[967],"IERC20Metadata":[993]},"id":994,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":969,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"125:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":971,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":994,"sourceUnit":968,"src":"151:37:7","symbolAliases":[{"foreign":{"id":970,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"159:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":973,"name":"IERC20","nameLocations":["306:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"306:6:7"},"id":974,"nodeType":"InheritanceSpecifier","src":"306:6:7"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"190:87:7","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":993,"linearizedBaseContracts":[993,967],"name":"IERC20Metadata","nameLocation":"288:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"319:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":980,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:7","nodeType":"FunctionDefinition","parameters":{"id":976,"nodeType":"ParameterList","parameters":[],"src":"391:2:7"},"returnParameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":980,"src":"417:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":977,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:7"},"scope":993,"src":"378:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":981,"nodeType":"StructuredDocumentation","src":"438:56:7","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":986,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:7","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[],"src":"514:2:7"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":986,"src":"540:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":983,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:7"},"scope":993,"src":"499:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":987,"nodeType":"StructuredDocumentation","src":"561:65:7","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":992,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:7","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[],"src":"648:2:7"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":992,"src":"674:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":989,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:7"},"scope":993,"src":"631:50:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":994,"src":"278:405:7","usedErrors":[],"usedEvents":[901,910]}],"src":"125:559:7"},"id":7},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[229],"IERC20":[967],"SafeERC20":[1457]},"id":1458,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":995,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":997,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1458,"sourceUnit":968,"src":"141:37:8","symbolAliases":[{"foreign":{"id":996,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"149:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":999,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1458,"sourceUnit":230,"src":"179:58:8","symbolAliases":[{"foreign":{"id":998,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"187:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"239:458:8","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1457,"linearizedBaseContracts":[1457],"name":"SafeERC20","nameLocation":"706:9:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1001,"nodeType":"StructuredDocumentation","src":"722:65:8","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":1005,"name":"SafeERC20FailedOperation","nameLocation":"798:24:8","nodeType":"ErrorDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"token","nameLocation":"831:5:8","nodeType":"VariableDeclaration","scope":1005,"src":"823:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:8"},"src":"792:46:8"},{"documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"844:71:8","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1014,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:8","nodeType":"ErrorDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"spender","nameLocation":"967:7:8","nodeType":"VariableDeclaration","scope":1014,"src":"959:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:8","nodeType":"VariableDeclaration","scope":1014,"src":"976:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:8","nodeType":"VariableDeclaration","scope":1014,"src":"1002:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1011,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:8"},"src":"920:109:8"},{"body":{"id":1037,"nodeType":"Block","src":"1291:88:8","statements":[{"expression":{"arguments":[{"id":1026,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"1321:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1029,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"1343:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":934,"src":"1343:14:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1031,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"1360:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"1364:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1033,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1027,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1025,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"1301:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1036,"nodeType":"ExpressionStatement","src":"1301:71:8"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"1035:179:8","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1038,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:8","nodeType":"FunctionDefinition","parameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"token","nameLocation":"1248:5:8","nodeType":"VariableDeclaration","scope":1038,"src":"1241:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1017,"nodeType":"UserDefinedTypeName","pathNode":{"id":1016,"name":"IERC20","nameLocations":["1241:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"1241:6:8"},"referencedDeclaration":967,"src":"1241:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"to","nameLocation":"1263:2:8","nodeType":"VariableDeclaration","scope":1038,"src":"1255:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1022,"mutability":"mutable","name":"value","nameLocation":"1275:5:8","nodeType":"VariableDeclaration","scope":1038,"src":"1267:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:8"},"returnParameters":{"id":1024,"nodeType":"ParameterList","parameters":[],"src":"1291:0:8"},"scope":1457,"src":"1219:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1064,"nodeType":"Block","src":"1708:98:8","statements":[{"expression":{"arguments":[{"id":1052,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"1738:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1055,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"1760:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:8","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":966,"src":"1760:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1057,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"1781:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1058,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"1787:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"1791:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1060,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1053,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1051,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"1718:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1063,"nodeType":"ExpressionStatement","src":"1718:81:8"}]},"documentation":{"id":1039,"nodeType":"StructuredDocumentation","src":"1385:228:8","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1065,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:8","nodeType":"FunctionDefinition","parameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"token","nameLocation":"1651:5:8","nodeType":"VariableDeclaration","scope":1065,"src":"1644:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1041,"nodeType":"UserDefinedTypeName","pathNode":{"id":1040,"name":"IERC20","nameLocations":["1644:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"1644:6:8"},"referencedDeclaration":967,"src":"1644:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"from","nameLocation":"1666:4:8","nodeType":"VariableDeclaration","scope":1065,"src":"1658:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"to","nameLocation":"1680:2:8","nodeType":"VariableDeclaration","scope":1065,"src":"1672:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"value","nameLocation":"1692:5:8","nodeType":"VariableDeclaration","scope":1065,"src":"1684:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1047,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:8"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[],"src":"1708:0:8"},"scope":1457,"src":"1618:188:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1090,"nodeType":"Block","src":"2033:99:8","statements":[{"expression":{"arguments":[{"id":1079,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"2074:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1082,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"2096:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":934,"src":"2096:14:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1084,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"2113:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"2117:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2112:11:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1080,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2081:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2085:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"2081:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1078,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"2050:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:75:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1077,"id":1089,"nodeType":"Return","src":"2043:82:8"}]},"documentation":{"id":1066,"nodeType":"StructuredDocumentation","src":"1812:126:8","text":" @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."},"id":1091,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransfer","nameLocation":"1952:15:8","nodeType":"FunctionDefinition","parameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"token","nameLocation":"1975:5:8","nodeType":"VariableDeclaration","scope":1091,"src":"1968:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1068,"nodeType":"UserDefinedTypeName","pathNode":{"id":1067,"name":"IERC20","nameLocations":["1968:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"1968:6:8"},"referencedDeclaration":967,"src":"1968:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"to","nameLocation":"1990:2:8","nodeType":"VariableDeclaration","scope":1091,"src":"1982:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1073,"mutability":"mutable","name":"value","nameLocation":"2002:5:8","nodeType":"VariableDeclaration","scope":1091,"src":"1994:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1072,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1967:41:8"},"returnParameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1091,"src":"2027:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1075,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:8"},"scope":1457,"src":"1943:189:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1119,"nodeType":"Block","src":"2381:109:8","statements":[{"expression":{"arguments":[{"id":1107,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"2422:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1110,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"2444:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:8","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":966,"src":"2444:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1112,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"2465:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1113,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"2471:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"2475:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2464:17:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2429:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"2429:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1106,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"2398:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:85:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1105,"id":1118,"nodeType":"Return","src":"2391:92:8"}]},"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"2138:130:8","text":" @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."},"id":1120,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransferFrom","nameLocation":"2282:19:8","nodeType":"FunctionDefinition","parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"token","nameLocation":"2309:5:8","nodeType":"VariableDeclaration","scope":1120,"src":"2302:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1094,"nodeType":"UserDefinedTypeName","pathNode":{"id":1093,"name":"IERC20","nameLocations":["2302:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"2302:6:8"},"referencedDeclaration":967,"src":"2302:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"from","nameLocation":"2324:4:8","nodeType":"VariableDeclaration","scope":1120,"src":"2316:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"to","nameLocation":"2338:2:8","nodeType":"VariableDeclaration","scope":1120,"src":"2330:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"value","nameLocation":"2350:5:8","nodeType":"VariableDeclaration","scope":1120,"src":"2342:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:55:8"},"returnParameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1120,"src":"2375:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1103,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:8"},"scope":1457,"src":"2273:217:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1150,"nodeType":"Block","src":"3232:139:8","statements":[{"assignments":[1132],"declarations":[{"constant":false,"id":1132,"mutability":"mutable","name":"oldAllowance","nameLocation":"3250:12:8","nodeType":"VariableDeclaration","scope":1150,"src":"3242:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1131,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1141,"initialValue":{"arguments":[{"arguments":[{"id":1137,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3289:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1457","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1457","typeString":"library SafeERC20"}],"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:8","typeDescriptions":{}}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1139,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3296:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1133,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"3265:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:9:8","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":944,"src":"3265:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3242:62:8"},{"expression":{"arguments":[{"id":1143,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"3327:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"id":1144,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3334:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1145,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"3343:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"3358:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1142,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"3314:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1149,"nodeType":"ExpressionStatement","src":"3314:50:8"}]},"documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"2496:645:8","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1151,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"3155:21:8","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"token","nameLocation":"3184:5:8","nodeType":"VariableDeclaration","scope":1151,"src":"3177:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1123,"nodeType":"UserDefinedTypeName","pathNode":{"id":1122,"name":"IERC20","nameLocations":["3177:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"3177:6:8"},"referencedDeclaration":967,"src":"3177:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"spender","nameLocation":"3199:7:8","nodeType":"VariableDeclaration","scope":1151,"src":"3191:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1125,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"value","nameLocation":"3216:5:8","nodeType":"VariableDeclaration","scope":1151,"src":"3208:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3176:46:8"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"3232:0:8"},"scope":1457,"src":"3146:225:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1193,"nodeType":"Block","src":"4137:370:8","statements":[{"id":1192,"nodeType":"UncheckedBlock","src":"4147:354:8","statements":[{"assignments":[1163],"declarations":[{"constant":false,"id":1163,"mutability":"mutable","name":"currentAllowance","nameLocation":"4179:16:8","nodeType":"VariableDeclaration","scope":1192,"src":"4171:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1172,"initialValue":{"arguments":[{"arguments":[{"id":1168,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4222:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1457","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1457","typeString":"library SafeERC20"}],"id":1167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:8","typeDescriptions":{}}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1170,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"4229:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1164,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"4198:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:9:8","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":944,"src":"4198:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4171:66:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1173,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4255:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1174,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"4274:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4255:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1183,"nodeType":"IfStatement","src":"4251:160:8","trueBody":{"id":1182,"nodeType":"Block","src":"4293:118:8","statements":[{"errorCall":{"arguments":[{"id":1177,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"4351:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1178,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4360:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1179,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"4378:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1176,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"4318:32:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1181,"nodeType":"RevertStatement","src":"4311:85:8"}]}},{"expression":{"arguments":[{"id":1185,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"4437:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"id":1186,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"4444:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1187,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4453:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1188,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"4472:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1184,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"4424:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1191,"nodeType":"ExpressionStatement","src":"4424:66:8"}]}]},"documentation":{"id":1152,"nodeType":"StructuredDocumentation","src":"3377:657:8","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1194,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"4048:21:8","nodeType":"FunctionDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"token","nameLocation":"4077:5:8","nodeType":"VariableDeclaration","scope":1194,"src":"4070:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1154,"nodeType":"UserDefinedTypeName","pathNode":{"id":1153,"name":"IERC20","nameLocations":["4070:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"4070:6:8"},"referencedDeclaration":967,"src":"4070:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"spender","nameLocation":"4092:7:8","nodeType":"VariableDeclaration","scope":1194,"src":"4084:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"requestedDecrease","nameLocation":"4109:17:8","nodeType":"VariableDeclaration","scope":1194,"src":"4101:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:58:8"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[],"src":"4137:0:8"},"scope":1457,"src":"4039:468:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1240,"nodeType":"Block","src":"5161:303:8","statements":[{"assignments":[1206],"declarations":[{"constant":false,"id":1206,"mutability":"mutable","name":"approvalCall","nameLocation":"5184:12:8","nodeType":"VariableDeclaration","scope":1240,"src":"5171:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1205,"name":"bytes","nodeType":"ElementaryTypeName","src":"5171:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1215,"initialValue":{"arguments":[{"expression":{"id":1209,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5214:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:7:8","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":954,"src":"5214:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1211,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5230:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"5239:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5229:16:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1207,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5171:75:8"},{"condition":{"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5261:45:8","subExpression":{"arguments":[{"id":1217,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5286:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"id":1218,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"5293:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1216,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"5262:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1239,"nodeType":"IfStatement","src":"5257:201:8","trueBody":{"id":1238,"nodeType":"Block","src":"5308:150:8","statements":[{"expression":{"arguments":[{"id":1222,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5342:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1225,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5364:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5370:7:8","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":954,"src":"5364:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1227,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5380:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1229,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:12:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1223,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5349:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5353:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"5349:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1221,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"5322:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1232,"nodeType":"ExpressionStatement","src":"5322:71:8"},{"expression":{"arguments":[{"id":1234,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5427:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"id":1235,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"5434:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1233,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"5407:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1237,"nodeType":"ExpressionStatement","src":"5407:40:8"}]}}]},"documentation":{"id":1195,"nodeType":"StructuredDocumentation","src":"4513:566:8","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":1241,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"5093:12:8","nodeType":"FunctionDefinition","parameters":{"id":1203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"token","nameLocation":"5113:5:8","nodeType":"VariableDeclaration","scope":1241,"src":"5106:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1197,"nodeType":"UserDefinedTypeName","pathNode":{"id":1196,"name":"IERC20","nameLocations":["5106:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"5106:6:8"},"referencedDeclaration":967,"src":"5106:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"spender","nameLocation":"5128:7:8","nodeType":"VariableDeclaration","scope":1241,"src":"5120:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1202,"mutability":"mutable","name":"value","nameLocation":"5145:5:8","nodeType":"VariableDeclaration","scope":1241,"src":"5137:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1201,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:46:8"},"returnParameters":{"id":1204,"nodeType":"ParameterList","parameters":[],"src":"5161:0:8"},"scope":1457,"src":"5084:380:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1283,"nodeType":"Block","src":"5911:219:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"5925:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5928:4:8","memberName":"code","nodeType":"MemberAccess","src":"5925:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:6:8","memberName":"length","nodeType":"MemberAccess","src":"5925:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5943:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5925:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:39:8","subExpression":{"arguments":[{"id":1268,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"6034:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"6038:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1270,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"6045:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1266,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"6012:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:15:8","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":180,"src":"6012:21:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1281,"nodeType":"IfStatement","src":"6007:117:8","trueBody":{"id":1280,"nodeType":"Block","src":"6052:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1276,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"6106:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:8","typeDescriptions":{}}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1273,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6073:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6073:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1279,"nodeType":"RevertStatement","src":"6066:47:8"}]}},"id":1282,"nodeType":"IfStatement","src":"5921:203:8","trueBody":{"id":1265,"nodeType":"Block","src":"5946:55:8","statements":[{"expression":{"arguments":[{"id":1260,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"5973:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1261,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"5980:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"5984:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1259,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5960:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1264,"nodeType":"ExpressionStatement","src":"5960:30:8"}]}}]},"documentation":{"id":1242,"nodeType":"StructuredDocumentation","src":"5470:333:8","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5817:22:8","nodeType":"FunctionDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"token","nameLocation":"5849:5:8","nodeType":"VariableDeclaration","scope":1284,"src":"5840:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1244,"nodeType":"UserDefinedTypeName","pathNode":{"id":1243,"name":"IERC1363","nameLocations":["5840:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"5840:8:8"},"referencedDeclaration":229,"src":"5840:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"to","nameLocation":"5864:2:8","nodeType":"VariableDeclaration","scope":1284,"src":"5856:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"value","nameLocation":"5876:5:8","nodeType":"VariableDeclaration","scope":1284,"src":"5868:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"data","nameLocation":"5896:4:8","nodeType":"VariableDeclaration","scope":1284,"src":"5883:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1250,"name":"bytes","nodeType":"ElementaryTypeName","src":"5883:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5839:62:8"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[],"src":"5911:0:8"},"scope":1457,"src":"5808:322:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1330,"nodeType":"Block","src":"6649:239:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1299,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"6663:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6666:4:8","memberName":"code","nodeType":"MemberAccess","src":"6663:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:6:8","memberName":"length","nodeType":"MemberAccess","src":"6663:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6663:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6759:49:8","subExpression":{"arguments":[{"id":1314,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"6786:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1315,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"6792:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"6796:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1317,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"6803:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1312,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"6760:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:19:8","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":206,"src":"6760:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1328,"nodeType":"IfStatement","src":"6755:127:8","trueBody":{"id":1327,"nodeType":"Block","src":"6810:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1323,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"6864:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6856:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1321,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:8","typeDescriptions":{}}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6856:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1320,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6831:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1326,"nodeType":"RevertStatement","src":"6824:47:8"}]}},"id":1329,"nodeType":"IfStatement","src":"6659:223:8","trueBody":{"id":1311,"nodeType":"Block","src":"6684:65:8","statements":[{"expression":{"arguments":[{"id":1305,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"6715:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1306,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"6722:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1307,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"6728:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"6732:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1304,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"6698:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1310,"nodeType":"ExpressionStatement","src":"6698:40:8"}]}}]},"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"6136:341:8","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1331,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"6491:26:8","nodeType":"FunctionDefinition","parameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"token","nameLocation":"6536:5:8","nodeType":"VariableDeclaration","scope":1331,"src":"6527:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1287,"nodeType":"UserDefinedTypeName","pathNode":{"id":1286,"name":"IERC1363","nameLocations":["6527:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"6527:8:8"},"referencedDeclaration":229,"src":"6527:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1290,"mutability":"mutable","name":"from","nameLocation":"6559:4:8","nodeType":"VariableDeclaration","scope":1331,"src":"6551:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1292,"mutability":"mutable","name":"to","nameLocation":"6581:2:8","nodeType":"VariableDeclaration","scope":1331,"src":"6573:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1291,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"value","nameLocation":"6601:5:8","nodeType":"VariableDeclaration","scope":1331,"src":"6593:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"data","nameLocation":"6629:4:8","nodeType":"VariableDeclaration","scope":1331,"src":"6616:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1295,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6517:122:8"},"returnParameters":{"id":1298,"nodeType":"ParameterList","parameters":[],"src":"6649:0:8"},"scope":1457,"src":"6482:406:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1373,"nodeType":"Block","src":"7655:218:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1344,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"7669:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:4:8","memberName":"code","nodeType":"MemberAccess","src":"7669:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7677:6:8","memberName":"length","nodeType":"MemberAccess","src":"7669:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7669:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7755:38:8","subExpression":{"arguments":[{"id":1358,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"7777:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"7781:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1360,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"7788:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1356,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7756:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7762:14:8","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":228,"src":"7756:20:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1371,"nodeType":"IfStatement","src":"7751:116:8","trueBody":{"id":1370,"nodeType":"Block","src":"7795:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1366,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7849:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:8","typeDescriptions":{}}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1363,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"7816:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1369,"nodeType":"RevertStatement","src":"7809:47:8"}]}},"id":1372,"nodeType":"IfStatement","src":"7665:202:8","trueBody":{"id":1355,"nodeType":"Block","src":"7690:55:8","statements":[{"expression":{"arguments":[{"id":1350,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7717:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1351,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"7724:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"7728:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1349,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"7704:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1354,"nodeType":"ExpressionStatement","src":"7704:30:8"}]}}]},"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"6894:654:8","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":1374,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"7562:21:8","nodeType":"FunctionDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"token","nameLocation":"7593:5:8","nodeType":"VariableDeclaration","scope":1374,"src":"7584:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1334,"nodeType":"UserDefinedTypeName","pathNode":{"id":1333,"name":"IERC1363","nameLocations":["7584:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"7584:8:8"},"referencedDeclaration":229,"src":"7584:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1337,"mutability":"mutable","name":"to","nameLocation":"7608:2:8","nodeType":"VariableDeclaration","scope":1374,"src":"7600:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"7600:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"value","nameLocation":"7620:5:8","nodeType":"VariableDeclaration","scope":1374,"src":"7612:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1338,"name":"uint256","nodeType":"ElementaryTypeName","src":"7612:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"data","nameLocation":"7640:4:8","nodeType":"VariableDeclaration","scope":1374,"src":"7627:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1340,"name":"bytes","nodeType":"ElementaryTypeName","src":"7627:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:62:8"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[],"src":"7655:0:8"},"scope":1457,"src":"7553:320:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1414,"nodeType":"Block","src":"8440:650:8","statements":[{"assignments":[1384],"declarations":[{"constant":false,"id":1384,"mutability":"mutable","name":"returnSize","nameLocation":"8458:10:8","nodeType":"VariableDeclaration","scope":1414,"src":"8450:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1385,"nodeType":"VariableDeclarationStatement","src":"8450:18:8"},{"assignments":[1387],"declarations":[{"constant":false,"id":1387,"mutability":"mutable","name":"returnValue","nameLocation":"8486:11:8","nodeType":"VariableDeclaration","scope":1414,"src":"8478:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"8478:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1388,"nodeType":"VariableDeclarationStatement","src":"8478:19:8"},{"AST":{"nodeType":"YulBlock","src":"8532:396:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8546:75:8","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"8566:3:8"},"nodeType":"YulFunctionCall","src":"8566:5:8"},{"name":"token","nodeType":"YulIdentifier","src":"8573:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"8580:1:8","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8587:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"8593:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8583:3:8"},"nodeType":"YulFunctionCall","src":"8583:15:8"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8606:4:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8600:5:8"},"nodeType":"YulFunctionCall","src":"8600:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"8613:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8616:4:8","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"8561:4:8"},"nodeType":"YulFunctionCall","src":"8561:60:8"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"8550:7:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"8682:157:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8700:22:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8717:4:8","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8711:5:8"},"nodeType":"YulFunctionCall","src":"8711:11:8"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8704:3:8","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8754:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"8759:1:8","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8762:14:8"},"nodeType":"YulFunctionCall","src":"8762:16:8"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"8739:14:8"},"nodeType":"YulFunctionCall","src":"8739:40:8"},"nodeType":"YulExpressionStatement","src":"8739:40:8"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8803:3:8"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8808:14:8"},"nodeType":"YulFunctionCall","src":"8808:16:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8796:6:8"},"nodeType":"YulFunctionCall","src":"8796:29:8"},"nodeType":"YulExpressionStatement","src":"8796:29:8"}]},"condition":{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"8673:7:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8666:6:8"},"nodeType":"YulFunctionCall","src":"8666:15:8"},"nodeType":"YulIf","src":"8663:176:8"},{"nodeType":"YulAssignment","src":"8852:30:8","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8866:14:8"},"nodeType":"YulFunctionCall","src":"8866:16:8"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"8852:10:8"}]},{"nodeType":"YulAssignment","src":"8895:23:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8916:1:8","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8910:5:8"},"nodeType":"YulFunctionCall","src":"8910:8:8"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"8895:11:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1380,"isOffset":false,"isSlot":false,"src":"8587:4:8","valueSize":1},{"declaration":1380,"isOffset":false,"isSlot":false,"src":"8606:4:8","valueSize":1},{"declaration":1384,"isOffset":false,"isSlot":false,"src":"8852:10:8","valueSize":1},{"declaration":1387,"isOffset":false,"isSlot":false,"src":"8895:11:8","valueSize":1},{"declaration":1378,"isOffset":false,"isSlot":false,"src":"8573:5:8","valueSize":1}],"flags":["memory-safe"],"id":1389,"nodeType":"InlineAssembly","src":"8507:421:8"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1390,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"8942:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8942:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1401,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"8994:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8994:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8942:68:8","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1395,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"8968:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}],"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8960:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:8","typeDescriptions":{}}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:8","memberName":"code","nodeType":"MemberAccess","src":"8960:19:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8980:6:8","memberName":"length","nodeType":"MemberAccess","src":"8960:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1413,"nodeType":"IfStatement","src":"8938:146:8","trueBody":{"id":1412,"nodeType":"Block","src":"9012:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1408,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"9066:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}],"id":1407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9058:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1406,"name":"address","nodeType":"ElementaryTypeName","src":"9058:7:8","typeDescriptions":{}}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9058:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1405,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"9033:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1411,"nodeType":"RevertStatement","src":"9026:47:8"}]}}]},"documentation":{"id":1375,"nodeType":"StructuredDocumentation","src":"7879:486:8","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":1415,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"8379:19:8","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"token","nameLocation":"8406:5:8","nodeType":"VariableDeclaration","scope":1415,"src":"8399:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1377,"nodeType":"UserDefinedTypeName","pathNode":{"id":1376,"name":"IERC20","nameLocations":["8399:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"8399:6:8"},"referencedDeclaration":967,"src":"8399:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"data","nameLocation":"8426:4:8","nodeType":"VariableDeclaration","scope":1415,"src":"8413:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1379,"name":"bytes","nodeType":"ElementaryTypeName","src":"8413:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8398:33:8"},"returnParameters":{"id":1382,"nodeType":"ParameterList","parameters":[],"src":"8440:0:8"},"scope":1457,"src":"8370:720:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1455,"nodeType":"Block","src":"9681:391:8","statements":[{"assignments":[1427],"declarations":[{"constant":false,"id":1427,"mutability":"mutable","name":"success","nameLocation":"9696:7:8","nodeType":"VariableDeclaration","scope":1455,"src":"9691:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1426,"name":"bool","nodeType":"ElementaryTypeName","src":"9691:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1428,"nodeType":"VariableDeclarationStatement","src":"9691:12:8"},{"assignments":[1430],"declarations":[{"constant":false,"id":1430,"mutability":"mutable","name":"returnSize","nameLocation":"9721:10:8","nodeType":"VariableDeclaration","scope":1455,"src":"9713:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"9713:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1431,"nodeType":"VariableDeclarationStatement","src":"9713:18:8"},{"assignments":[1433],"declarations":[{"constant":false,"id":1433,"mutability":"mutable","name":"returnValue","nameLocation":"9749:11:8","nodeType":"VariableDeclaration","scope":1455,"src":"9741:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1434,"nodeType":"VariableDeclarationStatement","src":"9741:19:8"},{"AST":{"nodeType":"YulBlock","src":"9795:174:8","statements":[{"nodeType":"YulAssignment","src":"9809:71:8","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"9825:3:8"},"nodeType":"YulFunctionCall","src":"9825:5:8"},{"name":"token","nodeType":"YulIdentifier","src":"9832:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"9839:1:8","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9846:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"9852:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9842:3:8"},"nodeType":"YulFunctionCall","src":"9842:15:8"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9865:4:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9859:5:8"},"nodeType":"YulFunctionCall","src":"9859:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"9872:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9875:4:8","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"9820:4:8"},"nodeType":"YulFunctionCall","src":"9820:60:8"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"9809:7:8"}]},{"nodeType":"YulAssignment","src":"9893:30:8","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"9907:14:8"},"nodeType":"YulFunctionCall","src":"9907:16:8"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"9893:10:8"}]},{"nodeType":"YulAssignment","src":"9936:23:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9957:1:8","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9951:5:8"},"nodeType":"YulFunctionCall","src":"9951:8:8"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"9936:11:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1421,"isOffset":false,"isSlot":false,"src":"9846:4:8","valueSize":1},{"declaration":1421,"isOffset":false,"isSlot":false,"src":"9865:4:8","valueSize":1},{"declaration":1430,"isOffset":false,"isSlot":false,"src":"9893:10:8","valueSize":1},{"declaration":1433,"isOffset":false,"isSlot":false,"src":"9936:11:8","valueSize":1},{"declaration":1427,"isOffset":false,"isSlot":false,"src":"9809:7:8","valueSize":1},{"declaration":1419,"isOffset":false,"isSlot":false,"src":"9832:5:8","valueSize":1}],"flags":["memory-safe"],"id":1435,"nodeType":"InlineAssembly","src":"9770:199:8"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1436,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"9985:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1437,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"9997:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9997:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1448,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"10048:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10048:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9997:67:8","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1442,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"10023:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}],"id":1441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10015:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:8","typeDescriptions":{}}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10015:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:4:8","memberName":"code","nodeType":"MemberAccess","src":"10015:19:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10035:6:8","memberName":"length","nodeType":"MemberAccess","src":"10015:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10044:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10015:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9996:69:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:80:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1425,"id":1454,"nodeType":"Return","src":"9978:87:8"}]},"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"9096:491:8","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":1456,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"9601:23:8","nodeType":"FunctionDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"token","nameLocation":"9632:5:8","nodeType":"VariableDeclaration","scope":1456,"src":"9625:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1418,"nodeType":"UserDefinedTypeName","pathNode":{"id":1417,"name":"IERC20","nameLocations":["9625:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"9625:6:8"},"referencedDeclaration":967,"src":"9625:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"data","nameLocation":"9652:4:8","nodeType":"VariableDeclaration","scope":1456,"src":"9639:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1420,"name":"bytes","nodeType":"ElementaryTypeName","src":"9639:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9624:33:8"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1456,"src":"9675:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1423,"name":"bool","nodeType":"ElementaryTypeName","src":"9675:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9674:6:8"},"scope":1457,"src":"9592:480:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1458,"src":"698:9376:8","usedErrors":[1005,1014],"usedEvents":[]}],"src":"115:9960:8"},"id":8},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[2684],"ERC165":[4231],"ERC721":[2414],"ERC721Utils":[2654],"IERC165":[4243],"IERC721":[2531],"IERC721Errors":[327],"IERC721Metadata":[2577],"Strings":[4207]},"id":2415,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1459,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":1461,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":2532,"src":"133:38:9","symbolAliases":[{"foreign":{"id":1460,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"141:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":1463,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":2578,"src":"172:65:9","symbolAliases":[{"foreign":{"id":1462,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"180:15:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":1465,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":2655,"src":"238:52:9","symbolAliases":[{"foreign":{"id":1464,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"246:11:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1467,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":2685,"src":"291:48:9","symbolAliases":[{"foreign":{"id":1466,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"299:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":1469,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":4208,"src":"340:48:9","symbolAliases":[{"foreign":{"id":1468,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"348:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1472,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":4232,"src":"389:69:9","symbolAliases":[{"foreign":{"id":1470,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"397:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1471,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"406:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1474,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":375,"src":"459:66:9","symbolAliases":[{"foreign":{"id":1473,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"467:13:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1476,"name":"Context","nameLocations":["803:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":2684,"src":"803:7:9"},"id":1477,"nodeType":"InheritanceSpecifier","src":"803:7:9"},{"baseName":{"id":1478,"name":"ERC165","nameLocations":["812:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":4231,"src":"812:6:9"},"id":1479,"nodeType":"InheritanceSpecifier","src":"812:6:9"},{"baseName":{"id":1480,"name":"IERC721","nameLocations":["820:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":2531,"src":"820:7:9"},"id":1481,"nodeType":"InheritanceSpecifier","src":"820:7:9"},{"baseName":{"id":1482,"name":"IERC721Metadata","nameLocations":["829:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":2577,"src":"829:15:9"},"id":1483,"nodeType":"InheritanceSpecifier","src":"829:15:9"},{"baseName":{"id":1484,"name":"IERC721Errors","nameLocations":["846:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":327,"src":"846:13:9"},"id":1485,"nodeType":"InheritanceSpecifier","src":"846:13:9"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":1475,"nodeType":"StructuredDocumentation","src":"527:247:9","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2414,"linearizedBaseContracts":[2414,327,2577,2531,4231,4243,2684],"name":"ERC721","nameLocation":"793:6:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1488,"libraryName":{"id":1486,"name":"Strings","nameLocations":["872:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"872:7:9"},"nodeType":"UsingForDirective","src":"866:26:9","typeName":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1490,"mutability":"mutable","name":"_name","nameLocation":"931:5:9","nodeType":"VariableDeclaration","scope":2414,"src":"916:20:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1489,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1492,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:9","nodeType":"VariableDeclaration","scope":2414,"src":"963:22:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1491,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1496,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:9","nodeType":"VariableDeclaration","scope":2414,"src":"992:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1495,"keyName":"tokenId","keyNameLocation":"1008:7:9","keyType":{"id":1493,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1494,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1500,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:9","nodeType":"VariableDeclaration","scope":2414,"src":"1050:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1499,"keyName":"owner","keyNameLocation":"1066:5:9","keyType":{"id":1497,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1504,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:9","nodeType":"VariableDeclaration","scope":2414,"src":"1108:59:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1503,"keyName":"tokenId","keyNameLocation":"1124:7:9","keyType":{"id":1501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1502,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1510,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:9","nodeType":"VariableDeclaration","scope":2414,"src":"1174:86:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1509,"keyName":"owner","keyNameLocation":"1190:5:9","keyType":{"id":1505,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1508,"keyName":"operator","keyNameLocation":"1215:8:9","keyType":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1507,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1526,"nodeType":"Block","src":"1436:57:9","statements":[{"expression":{"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1518,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"1446:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1519,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"1454:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1521,"nodeType":"ExpressionStatement","src":"1446:13:9"},{"expression":{"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1522,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"1469:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1523,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"1479:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1525,"nodeType":"ExpressionStatement","src":"1469:17:9"}]},"documentation":{"id":1511,"nodeType":"StructuredDocumentation","src":"1267:108:9","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1527,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"name_","nameLocation":"1406:5:9","nodeType":"VariableDeclaration","scope":1527,"src":"1392:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1512,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1515,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:9","nodeType":"VariableDeclaration","scope":1527,"src":"1413:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1514,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:9"},"returnParameters":{"id":1517,"nodeType":"ParameterList","parameters":[],"src":"1436:0:9"},"scope":2414,"src":"1380:113:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4230,4242],"body":{"id":1557,"nodeType":"Block","src":"1635:192:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1538,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"1664:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1540,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"1684:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2531_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2531_$","typeString":"type(contract IERC721)"}],"id":1539,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1679:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1679:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2531","typeString":"type(contract IERC721)"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1693:11:9","memberName":"interfaceId","nodeType":"MemberAccess","src":"1679:25:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1664:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1544,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"1720:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1546,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"1740:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2577_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2577_$","typeString":"type(contract IERC721Metadata)"}],"id":1545,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1735:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1735:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2577","typeString":"type(contract IERC721Metadata)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1757:11:9","memberName":"interfaceId","nodeType":"MemberAccess","src":"1735:33:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1720:48:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:104:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1553,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"1808:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1551,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1784:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$2414_$","typeString":"type(contract super ERC721)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1790:17:9","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4230,"src":"1784:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1784:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:156:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1537,"id":1556,"nodeType":"Return","src":"1645:175:9"}]},"documentation":{"id":1528,"nodeType":"StructuredDocumentation","src":"1499:23:9","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":1558,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1536:17:9","nodeType":"FunctionDefinition","overrides":{"id":1534,"nodeType":"OverrideSpecifier","overrides":[{"id":1532,"name":"ERC165","nameLocations":["1603:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":4231,"src":"1603:6:9"},{"id":1533,"name":"IERC165","nameLocations":["1611:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":4243,"src":"1611:7:9"}],"src":"1594:25:9"},"parameters":{"id":1531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"mutability":"mutable","name":"interfaceId","nameLocation":"1561:11:9","nodeType":"VariableDeclaration","scope":1558,"src":"1554:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1529,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1554:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1553:20:9"},"returnParameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1558,"src":"1629:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1535,"name":"bool","nodeType":"ElementaryTypeName","src":"1629:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1628:6:9"},"scope":2414,"src":"1527:300:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2456],"body":{"id":1585,"nodeType":"Block","src":"1933:136:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1566,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"1947:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1964:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1956:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1567,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:9","typeDescriptions":{}}},"id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1956:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1947:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1580,"nodeType":"IfStatement","src":"1943:87:9","trueBody":{"id":1579,"nodeType":"Block","src":"1968:62:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2008:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1573,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:9","typeDescriptions":{}}},"id":1576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1572,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"1989:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1578,"nodeType":"RevertStatement","src":"1982:37:9"}]}},{"expression":{"baseExpression":{"id":1581,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"2046:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1583,"indexExpression":{"id":1582,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"2056:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2046:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1565,"id":1584,"nodeType":"Return","src":"2039:23:9"}]},"documentation":{"id":1559,"nodeType":"StructuredDocumentation","src":"1833:23:9","text":"@inheritdoc IERC721"},"functionSelector":"70a08231","id":1586,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1870:9:9","nodeType":"FunctionDefinition","parameters":{"id":1562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1561,"mutability":"mutable","name":"owner","nameLocation":"1888:5:9","nodeType":"VariableDeclaration","scope":1586,"src":"1880:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1560,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1879:15:9"},"returnParameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1586,"src":"1924:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1563,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1923:9:9"},"scope":2414,"src":"1861:208:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2464],"body":{"id":1598,"nodeType":"Block","src":"2175:46:9","statements":[{"expression":{"arguments":[{"id":1595,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"2206:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1594,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"2192:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1593,"id":1597,"nodeType":"Return","src":"2185:29:9"}]},"documentation":{"id":1587,"nodeType":"StructuredDocumentation","src":"2075:23:9","text":"@inheritdoc IERC721"},"functionSelector":"6352211e","id":1599,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2112:7:9","nodeType":"FunctionDefinition","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1589,"mutability":"mutable","name":"tokenId","nameLocation":"2128:7:9","nodeType":"VariableDeclaration","scope":1599,"src":"2120:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1588,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2119:17:9"},"returnParameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1599,"src":"2166:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1591,"name":"address","nodeType":"ElementaryTypeName","src":"2166:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2165:9:9"},"scope":2414,"src":"2103:118:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2562],"body":{"id":1607,"nodeType":"Block","src":"2323:29:9","statements":[{"expression":{"id":1605,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"2340:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1604,"id":1606,"nodeType":"Return","src":"2333:12:9"}]},"documentation":{"id":1600,"nodeType":"StructuredDocumentation","src":"2227:31:9","text":"@inheritdoc IERC721Metadata"},"functionSelector":"06fdde03","id":1608,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2272:4:9","nodeType":"FunctionDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[],"src":"2276:2:9"},"returnParameters":{"id":1604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1608,"src":"2308:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1602,"name":"string","nodeType":"ElementaryTypeName","src":"2308:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2307:15:9"},"scope":2414,"src":"2263:89:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2568],"body":{"id":1616,"nodeType":"Block","src":"2456:31:9","statements":[{"expression":{"id":1614,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"2473:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1613,"id":1615,"nodeType":"Return","src":"2466:14:9"}]},"documentation":{"id":1609,"nodeType":"StructuredDocumentation","src":"2358:31:9","text":"@inheritdoc IERC721Metadata"},"functionSelector":"95d89b41","id":1617,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2403:6:9","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[],"src":"2409:2:9"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1617,"src":"2441:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1611,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2440:15:9"},"scope":2414,"src":"2394:93:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2576],"body":{"id":1652,"nodeType":"Block","src":"2608:176:9","statements":[{"expression":{"arguments":[{"id":1626,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"2632:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1625,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"2618:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2618:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1628,"nodeType":"ExpressionStatement","src":"2618:22:9"},{"assignments":[1630],"declarations":[{"constant":false,"id":1630,"mutability":"mutable","name":"baseURI","nameLocation":"2665:7:9","nodeType":"VariableDeclaration","scope":1652,"src":"2651:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1629,"name":"string","nodeType":"ElementaryTypeName","src":"2651:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1633,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1631,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2675:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2651:34:9"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1636,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"2708:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2702:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1634,"name":"bytes","nodeType":"ElementaryTypeName","src":"2702:5:9","typeDescriptions":{}}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2717:6:9","memberName":"length","nodeType":"MemberAccess","src":"2702:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2726:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2702:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2775:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2702:75:9","trueExpression":{"arguments":[{"id":1644,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"2744:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1645,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"2753:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:8:9","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2919,"src":"2753:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2753:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1641,"name":"string","nodeType":"ElementaryTypeName","src":"2730:6:9","typeDescriptions":{}}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:9","memberName":"concat","nodeType":"MemberAccess","src":"2730:13:9","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1624,"id":1651,"nodeType":"Return","src":"2695:82:9"}]},"documentation":{"id":1618,"nodeType":"StructuredDocumentation","src":"2493:31:9","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":1653,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2538:8:9","nodeType":"FunctionDefinition","parameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1620,"mutability":"mutable","name":"tokenId","nameLocation":"2555:7:9","nodeType":"VariableDeclaration","scope":1653,"src":"2547:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1619,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:17:9"},"returnParameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1653,"src":"2593:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1622,"name":"string","nodeType":"ElementaryTypeName","src":"2593:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2592:15:9"},"scope":2414,"src":"2529:255:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1661,"nodeType":"Block","src":"3092:26:9","statements":[{"expression":{"hexValue":"","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3109:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1658,"id":1660,"nodeType":"Return","src":"3102:9:9"}]},"documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"2790:231:9","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1662,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3035:8:9","nodeType":"FunctionDefinition","parameters":{"id":1655,"nodeType":"ParameterList","parameters":[],"src":"3043:2:9"},"returnParameters":{"id":1658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1662,"src":"3077:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1656,"name":"string","nodeType":"ElementaryTypeName","src":"3077:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3076:15:9"},"scope":2414,"src":"3026:92:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2504],"body":{"id":1677,"nodeType":"Block","src":"3213:52:9","statements":[{"expression":{"arguments":[{"id":1671,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"3232:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1672,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"3236:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1673,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"3245:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3245:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1670,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2281,2347],"referencedDeclaration":2281,"src":"3223:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3223:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1676,"nodeType":"ExpressionStatement","src":"3223:35:9"}]},"documentation":{"id":1663,"nodeType":"StructuredDocumentation","src":"3124:23:9","text":"@inheritdoc IERC721"},"functionSelector":"095ea7b3","id":1678,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3161:7:9","nodeType":"FunctionDefinition","parameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"to","nameLocation":"3177:2:9","nodeType":"VariableDeclaration","scope":1678,"src":"3169:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1664,"name":"address","nodeType":"ElementaryTypeName","src":"3169:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1667,"mutability":"mutable","name":"tokenId","nameLocation":"3189:7:9","nodeType":"VariableDeclaration","scope":1678,"src":"3181:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1666,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3168:29:9"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[],"src":"3213:0:9"},"scope":2414,"src":"3152:113:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2520],"body":{"id":1694,"nodeType":"Block","src":"3375:78:9","statements":[{"expression":{"arguments":[{"id":1687,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"3399:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1686,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"3385:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1689,"nodeType":"ExpressionStatement","src":"3385:22:9"},{"expression":{"arguments":[{"id":1691,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"3438:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1690,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"3425:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1685,"id":1693,"nodeType":"Return","src":"3418:28:9"}]},"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"3271:23:9","text":"@inheritdoc IERC721"},"functionSelector":"081812fc","id":1695,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3308:11:9","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"tokenId","nameLocation":"3328:7:9","nodeType":"VariableDeclaration","scope":1695,"src":"3320:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3319:17:9"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1695,"src":"3366:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1683,"name":"address","nodeType":"ElementaryTypeName","src":"3366:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3365:9:9"},"scope":2414,"src":"3299:154:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2512],"body":{"id":1710,"nodeType":"Block","src":"3562:69:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1704,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"3591:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1706,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"3605:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1707,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"3615:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1703,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"3572:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1709,"nodeType":"ExpressionStatement","src":"3572:52:9"}]},"documentation":{"id":1696,"nodeType":"StructuredDocumentation","src":"3459:23:9","text":"@inheritdoc IERC721"},"functionSelector":"a22cb465","id":1711,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3496:17:9","nodeType":"FunctionDefinition","parameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1698,"mutability":"mutable","name":"operator","nameLocation":"3522:8:9","nodeType":"VariableDeclaration","scope":1711,"src":"3514:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1697,"name":"address","nodeType":"ElementaryTypeName","src":"3514:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1700,"mutability":"mutable","name":"approved","nameLocation":"3537:8:9","nodeType":"VariableDeclaration","scope":1711,"src":"3532:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1699,"name":"bool","nodeType":"ElementaryTypeName","src":"3532:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3513:33:9"},"returnParameters":{"id":1702,"nodeType":"ParameterList","parameters":[],"src":"3562:0:9"},"scope":2414,"src":"3487:144:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2530],"body":{"id":1727,"nodeType":"Block","src":"3759:59:9","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1721,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"3776:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1723,"indexExpression":{"id":1722,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"3795:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1725,"indexExpression":{"id":1724,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"3802:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1720,"id":1726,"nodeType":"Return","src":"3769:42:9"}]},"documentation":{"id":1712,"nodeType":"StructuredDocumentation","src":"3637:23:9","text":"@inheritdoc IERC721"},"functionSelector":"e985e9c5","id":1728,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3674:16:9","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"owner","nameLocation":"3699:5:9","nodeType":"VariableDeclaration","scope":1728,"src":"3691:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"operator","nameLocation":"3714:8:9","nodeType":"VariableDeclaration","scope":1728,"src":"3706:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"3706:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3690:33:9"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1728,"src":"3753:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1718,"name":"bool","nodeType":"ElementaryTypeName","src":"3753:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3752:6:9"},"scope":2414,"src":"3665:153:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2496],"body":{"id":1773,"nodeType":"Block","src":"3932:498:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1738,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"3946:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3960:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3952:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1739,"name":"address","nodeType":"ElementaryTypeName","src":"3952:7:9","typeDescriptions":{}}},"id":1742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3952:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3946:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1752,"nodeType":"IfStatement","src":"3942:87:9","trueBody":{"id":1751,"nodeType":"Block","src":"3964:65:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4015:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4007:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1745,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:9","typeDescriptions":{}}},"id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1744,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"3985:21:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3985:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1750,"nodeType":"RevertStatement","src":"3978:40:9"}]}},{"assignments":[1754],"declarations":[{"constant":false,"id":1754,"mutability":"mutable","name":"previousOwner","nameLocation":"4255:13:9","nodeType":"VariableDeclaration","scope":1773,"src":"4247:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1753,"name":"address","nodeType":"ElementaryTypeName","src":"4247:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1761,"initialValue":{"arguments":[{"id":1756,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"4279:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1757,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"4283:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1758,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"4292:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1755,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"4271:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4271:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4247:58:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1762,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"4319:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1763,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"4336:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4319:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1772,"nodeType":"IfStatement","src":"4315:109:9","trueBody":{"id":1771,"nodeType":"Block","src":"4342:82:9","statements":[{"errorCall":{"arguments":[{"id":1766,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"4384:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1767,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"4390:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1768,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"4399:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1765,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"4363:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4363:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1770,"nodeType":"RevertStatement","src":"4356:57:9"}]}}]},"documentation":{"id":1729,"nodeType":"StructuredDocumentation","src":"3824:23:9","text":"@inheritdoc IERC721"},"functionSelector":"23b872dd","id":1774,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3861:12:9","nodeType":"FunctionDefinition","parameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1731,"mutability":"mutable","name":"from","nameLocation":"3882:4:9","nodeType":"VariableDeclaration","scope":1774,"src":"3874:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1730,"name":"address","nodeType":"ElementaryTypeName","src":"3874:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1733,"mutability":"mutable","name":"to","nameLocation":"3896:2:9","nodeType":"VariableDeclaration","scope":1774,"src":"3888:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1732,"name":"address","nodeType":"ElementaryTypeName","src":"3888:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1735,"mutability":"mutable","name":"tokenId","nameLocation":"3908:7:9","nodeType":"VariableDeclaration","scope":1774,"src":"3900:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"3900:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3873:43:9"},"returnParameters":{"id":1737,"nodeType":"ParameterList","parameters":[],"src":"3932:0:9"},"scope":2414,"src":"3852:578:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2486],"body":{"id":1791,"nodeType":"Block","src":"4540:56:9","statements":[{"expression":{"arguments":[{"id":1785,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"4567:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1786,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"4573:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1787,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"4577:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4586:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1784,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1792,1822],"referencedDeclaration":1822,"src":"4550:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1790,"nodeType":"ExpressionStatement","src":"4550:39:9"}]},"documentation":{"id":1775,"nodeType":"StructuredDocumentation","src":"4436:23:9","text":"@inheritdoc IERC721"},"functionSelector":"42842e0e","id":1792,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4473:16:9","nodeType":"FunctionDefinition","parameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"from","nameLocation":"4498:4:9","nodeType":"VariableDeclaration","scope":1792,"src":"4490:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1776,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1779,"mutability":"mutable","name":"to","nameLocation":"4512:2:9","nodeType":"VariableDeclaration","scope":1792,"src":"4504:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1778,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"tokenId","nameLocation":"4524:7:9","nodeType":"VariableDeclaration","scope":1792,"src":"4516:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4489:43:9"},"returnParameters":{"id":1783,"nodeType":"ParameterList","parameters":[],"src":"4540:0:9"},"scope":2414,"src":"4464:132:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2476],"body":{"id":1821,"nodeType":"Block","src":"4733:130:9","statements":[{"expression":{"arguments":[{"id":1805,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"4756:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1806,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"4762:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1807,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"4766:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1804,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"4743:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4743:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1809,"nodeType":"ExpressionStatement","src":"4743:31:9"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1813,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"4818:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4818:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1815,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"4832:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1816,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"4838:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1817,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"4842:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1818,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"4851:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1810,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"4784:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2654_$","typeString":"type(library ERC721Utils)"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4796:21:9","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2653,"src":"4784:33:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1820,"nodeType":"ExpressionStatement","src":"4784:72:9"}]},"documentation":{"id":1793,"nodeType":"StructuredDocumentation","src":"4602:23:9","text":"@inheritdoc IERC721"},"functionSelector":"b88d4fde","id":1822,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4639:16:9","nodeType":"FunctionDefinition","parameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"mutability":"mutable","name":"from","nameLocation":"4664:4:9","nodeType":"VariableDeclaration","scope":1822,"src":"4656:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1794,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1797,"mutability":"mutable","name":"to","nameLocation":"4678:2:9","nodeType":"VariableDeclaration","scope":1822,"src":"4670:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1796,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1799,"mutability":"mutable","name":"tokenId","nameLocation":"4690:7:9","nodeType":"VariableDeclaration","scope":1822,"src":"4682:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1798,"name":"uint256","nodeType":"ElementaryTypeName","src":"4682:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1801,"mutability":"mutable","name":"data","nameLocation":"4712:4:9","nodeType":"VariableDeclaration","scope":1822,"src":"4699:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1800,"name":"bytes","nodeType":"ElementaryTypeName","src":"4699:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4655:62:9"},"returnParameters":{"id":1803,"nodeType":"ParameterList","parameters":[],"src":"4733:0:9"},"scope":2414,"src":"4630:233:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1834,"nodeType":"Block","src":"5453:40:9","statements":[{"expression":{"baseExpression":{"id":1830,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"5470:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1832,"indexExpression":{"id":1831,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"5478:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5470:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1829,"id":1833,"nodeType":"Return","src":"5463:23:9"}]},"documentation":{"id":1823,"nodeType":"StructuredDocumentation","src":"4869:504:9","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":1835,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5387:8:9","nodeType":"FunctionDefinition","parameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"mutability":"mutable","name":"tokenId","nameLocation":"5404:7:9","nodeType":"VariableDeclaration","scope":1835,"src":"5396:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"5396:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5395:17:9"},"returnParameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1835,"src":"5444:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1827,"name":"address","nodeType":"ElementaryTypeName","src":"5444:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5443:9:9"},"scope":2414,"src":"5378:115:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1847,"nodeType":"Block","src":"5688:48:9","statements":[{"expression":{"baseExpression":{"id":1843,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"5705:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1845,"indexExpression":{"id":1844,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"5721:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5705:24:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1842,"id":1846,"nodeType":"Return","src":"5698:31:9"}]},"documentation":{"id":1836,"nodeType":"StructuredDocumentation","src":"5499:105:9","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":1848,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5618:12:9","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"tokenId","nameLocation":"5639:7:9","nodeType":"VariableDeclaration","scope":1848,"src":"5631:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"5631:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5630:17:9"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1848,"src":"5679:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1840,"name":"address","nodeType":"ElementaryTypeName","src":"5679:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5678:9:9"},"scope":2414,"src":"5609:127:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1883,"nodeType":"Block","src":"6156:163:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1860,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"6185:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6204:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6196:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1861,"name":"address","nodeType":"ElementaryTypeName","src":"6196:7:9","typeDescriptions":{}}},"id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6185:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1866,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"6223:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1867,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"6232:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6223:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1870,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"6260:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1871,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"6267:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1869,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"6243:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6243:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:52:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1875,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"6292:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1874,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"6279:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1877,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"6304:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6279:32:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:88:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1880,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6222:90:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6185:127:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1859,"id":1882,"nodeType":"Return","src":"6166:146:9"}]},"documentation":{"id":1849,"nodeType":"StructuredDocumentation","src":"5742:300:9","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1884,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6056:13:9","nodeType":"FunctionDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"owner","nameLocation":"6078:5:9","nodeType":"VariableDeclaration","scope":1884,"src":"6070:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"6070:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1853,"mutability":"mutable","name":"spender","nameLocation":"6093:7:9","nodeType":"VariableDeclaration","scope":1884,"src":"6085:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1852,"name":"address","nodeType":"ElementaryTypeName","src":"6085:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1855,"mutability":"mutable","name":"tokenId","nameLocation":"6110:7:9","nodeType":"VariableDeclaration","scope":1884,"src":"6102:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1854,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6069:49:9"},"returnParameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1884,"src":"6150:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1857,"name":"bool","nodeType":"ElementaryTypeName","src":"6150:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6149:6:9"},"scope":2414,"src":"6047:272:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1920,"nodeType":"Block","src":"6848:271:9","statements":[{"condition":{"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6862:39:9","subExpression":{"arguments":[{"id":1895,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"6877:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1896,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"6884:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1897,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"6893:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1894,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"6863:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6863:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1919,"nodeType":"IfStatement","src":"6858:255:9","trueBody":{"id":1918,"nodeType":"Block","src":"6903:210:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1900,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"6921:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6938:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6930:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1901,"name":"address","nodeType":"ElementaryTypeName","src":"6930:7:9","typeDescriptions":{}}},"id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6930:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6921:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1916,"nodeType":"Block","src":"7019:84:9","statements":[{"errorCall":{"arguments":[{"id":1912,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"7071:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1913,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"7080:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1911,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"7044:26:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7044:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1915,"nodeType":"RevertStatement","src":"7037:51:9"}]},"id":1917,"nodeType":"IfStatement","src":"6917:186:9","trueBody":{"id":1910,"nodeType":"Block","src":"6942:71:9","statements":[{"errorCall":{"arguments":[{"id":1907,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"6990:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1906,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"6967:22:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1909,"nodeType":"RevertStatement","src":"6960:38:9"}]}}]}}]},"documentation":{"id":1885,"nodeType":"StructuredDocumentation","src":"6325:421:9","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1921,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"6760:16:9","nodeType":"FunctionDefinition","parameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"mutability":"mutable","name":"owner","nameLocation":"6785:5:9","nodeType":"VariableDeclaration","scope":1921,"src":"6777:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1886,"name":"address","nodeType":"ElementaryTypeName","src":"6777:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1889,"mutability":"mutable","name":"spender","nameLocation":"6800:7:9","nodeType":"VariableDeclaration","scope":1921,"src":"6792:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1888,"name":"address","nodeType":"ElementaryTypeName","src":"6792:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1891,"mutability":"mutable","name":"tokenId","nameLocation":"6817:7:9","nodeType":"VariableDeclaration","scope":1921,"src":"6809:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1890,"name":"uint256","nodeType":"ElementaryTypeName","src":"6809:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6776:49:9"},"returnParameters":{"id":1893,"nodeType":"ParameterList","parameters":[],"src":"6848:0:9"},"scope":2414,"src":"6751:368:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1936,"nodeType":"Block","src":"7836:78:9","statements":[{"id":1935,"nodeType":"UncheckedBlock","src":"7846:62:9","statements":[{"expression":{"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1929,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"7870:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1931,"indexExpression":{"id":1930,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"7880:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7870:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"7892:5:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"7870:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1934,"nodeType":"ExpressionStatement","src":"7870:27:9"}]}]},"documentation":{"id":1922,"nodeType":"StructuredDocumentation","src":"7125:631:9","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":1937,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7770:16:9","nodeType":"FunctionDefinition","parameters":{"id":1927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"mutability":"mutable","name":"account","nameLocation":"7795:7:9","nodeType":"VariableDeclaration","scope":1937,"src":"7787:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1923,"name":"address","nodeType":"ElementaryTypeName","src":"7787:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1926,"mutability":"mutable","name":"value","nameLocation":"7812:5:9","nodeType":"VariableDeclaration","scope":1937,"src":"7804:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1925,"name":"uint128","nodeType":"ElementaryTypeName","src":"7804:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7786:32:9"},"returnParameters":{"id":1928,"nodeType":"ParameterList","parameters":[],"src":"7836:0:9"},"scope":2414,"src":"7761:153:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2026,"nodeType":"Block","src":"8602:700:9","statements":[{"assignments":[1950],"declarations":[{"constant":false,"id":1950,"mutability":"mutable","name":"from","nameLocation":"8620:4:9","nodeType":"VariableDeclaration","scope":2026,"src":"8612:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1949,"name":"address","nodeType":"ElementaryTypeName","src":"8612:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1954,"initialValue":{"arguments":[{"id":1952,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"8636:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1951,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"8627:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8627:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8612:32:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1955,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"8704:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8720:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8712:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1956,"name":"address","nodeType":"ElementaryTypeName","src":"8712:7:9","typeDescriptions":{}}},"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8712:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8704:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1968,"nodeType":"IfStatement","src":"8700:86:9","trueBody":{"id":1967,"nodeType":"Block","src":"8724:62:9","statements":[{"expression":{"arguments":[{"id":1962,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"8755:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1963,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"8761:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1964,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"8767:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1961,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"8738:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1966,"nodeType":"ExpressionStatement","src":"8738:37:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1969,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"8830:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8846:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8838:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1970,"name":"address","nodeType":"ElementaryTypeName","src":"8838:7:9","typeDescriptions":{}}},"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8830:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1996,"nodeType":"IfStatement","src":"8826:256:9","trueBody":{"id":1995,"nodeType":"Block","src":"8850:232:9","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8963:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8955:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1976,"name":"address","nodeType":"ElementaryTypeName","src":"8955:7:9","typeDescriptions":{}}},"id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8955:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1980,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"8967:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8984:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8976:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1981,"name":"address","nodeType":"ElementaryTypeName","src":"8976:7:9","typeDescriptions":{}}},"id":1984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8988:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1975,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2281,2347],"referencedDeclaration":2347,"src":"8946:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8946:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1987,"nodeType":"ExpressionStatement","src":"8946:48:9"},{"id":1994,"nodeType":"UncheckedBlock","src":"9009:63:9","statements":[{"expression":{"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1988,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"9037:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1990,"indexExpression":{"id":1989,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"9047:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9037:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9037:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1993,"nodeType":"ExpressionStatement","src":"9037:20:9"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1997,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"9096:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9102:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1998,"name":"address","nodeType":"ElementaryTypeName","src":"9102:7:9","typeDescriptions":{}}},"id":2001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9102:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9096:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2011,"nodeType":"IfStatement","src":"9092:107:9","trueBody":{"id":2010,"nodeType":"Block","src":"9114:85:9","statements":[{"id":2009,"nodeType":"UncheckedBlock","src":"9128:61:9","statements":[{"expression":{"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2003,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"9156:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2005,"indexExpression":{"id":2004,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"9166:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9156:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9173:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9156:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2008,"nodeType":"ExpressionStatement","src":"9156:18:9"}]}]}},{"expression":{"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2012,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"9209:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2014,"indexExpression":{"id":2013,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"9217:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9209:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2015,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"9228:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9209:21:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2017,"nodeType":"ExpressionStatement","src":"9209:21:9"},{"eventCall":{"arguments":[{"id":2019,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"9255:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2020,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"9261:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2021,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"9265:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2018,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"9246:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9246:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2023,"nodeType":"EmitStatement","src":"9241:32:9"},{"expression":{"id":2024,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"9291:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1948,"id":2025,"nodeType":"Return","src":"9284:11:9"}]},"documentation":{"id":1938,"nodeType":"StructuredDocumentation","src":"7920:582:9","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":2027,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8516:7:9","nodeType":"FunctionDefinition","parameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"to","nameLocation":"8532:2:9","nodeType":"VariableDeclaration","scope":2027,"src":"8524:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1939,"name":"address","nodeType":"ElementaryTypeName","src":"8524:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1942,"mutability":"mutable","name":"tokenId","nameLocation":"8544:7:9","nodeType":"VariableDeclaration","scope":2027,"src":"8536:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1941,"name":"uint256","nodeType":"ElementaryTypeName","src":"8536:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1944,"mutability":"mutable","name":"auth","nameLocation":"8561:4:9","nodeType":"VariableDeclaration","scope":2027,"src":"8553:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1943,"name":"address","nodeType":"ElementaryTypeName","src":"8553:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8523:43:9"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2027,"src":"8593:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1946,"name":"address","nodeType":"ElementaryTypeName","src":"8593:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8592:9:9"},"scope":2414,"src":"8507:795:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2076,"nodeType":"Block","src":"9677:274:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2035,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"9691:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9705:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9697:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2036,"name":"address","nodeType":"ElementaryTypeName","src":"9697:7:9","typeDescriptions":{}}},"id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9697:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9691:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2049,"nodeType":"IfStatement","src":"9687:87:9","trueBody":{"id":2048,"nodeType":"Block","src":"9709:65:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9760:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9752:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2042,"name":"address","nodeType":"ElementaryTypeName","src":"9752:7:9","typeDescriptions":{}}},"id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9752:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2041,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"9730:21:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9730:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2047,"nodeType":"RevertStatement","src":"9723:40:9"}]}},{"assignments":[2051],"declarations":[{"constant":false,"id":2051,"mutability":"mutable","name":"previousOwner","nameLocation":"9791:13:9","nodeType":"VariableDeclaration","scope":2076,"src":"9783:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2050,"name":"address","nodeType":"ElementaryTypeName","src":"9783:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2060,"initialValue":{"arguments":[{"id":2053,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"9815:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2054,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"9819:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9828:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2055,"name":"address","nodeType":"ElementaryTypeName","src":"9828:7:9","typeDescriptions":{}}},"id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9828:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2052,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"9807:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9807:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9783:56:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2061,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"9853:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9878:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9870:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2062,"name":"address","nodeType":"ElementaryTypeName","src":"9870:7:9","typeDescriptions":{}}},"id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9870:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9853:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2075,"nodeType":"IfStatement","src":"9849:96:9","trueBody":{"id":2074,"nodeType":"Block","src":"9882:63:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9931:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9923:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2068,"name":"address","nodeType":"ElementaryTypeName","src":"9923:7:9","typeDescriptions":{}}},"id":2071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2067,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"9903:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2073,"nodeType":"RevertStatement","src":"9896:38:9"}]}}]},"documentation":{"id":2028,"nodeType":"StructuredDocumentation","src":"9308:311:9","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":2077,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9633:5:9","nodeType":"FunctionDefinition","parameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"to","nameLocation":"9647:2:9","nodeType":"VariableDeclaration","scope":2077,"src":"9639:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2029,"name":"address","nodeType":"ElementaryTypeName","src":"9639:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2032,"mutability":"mutable","name":"tokenId","nameLocation":"9659:7:9","nodeType":"VariableDeclaration","scope":2077,"src":"9651:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"9651:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9638:29:9"},"returnParameters":{"id":2034,"nodeType":"ParameterList","parameters":[],"src":"9677:0:9"},"scope":2414,"src":"9624:327:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2091,"nodeType":"Block","src":"10359:43:9","statements":[{"expression":{"arguments":[{"id":2086,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"10379:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2087,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"10383:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10392:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2085,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2092,2122],"referencedDeclaration":2122,"src":"10369:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10369:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2090,"nodeType":"ExpressionStatement","src":"10369:26:9"}]},"documentation":{"id":2078,"nodeType":"StructuredDocumentation","src":"9957:340:9","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2092,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10311:9:9","nodeType":"FunctionDefinition","parameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2080,"mutability":"mutable","name":"to","nameLocation":"10329:2:9","nodeType":"VariableDeclaration","scope":2092,"src":"10321:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2079,"name":"address","nodeType":"ElementaryTypeName","src":"10321:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2082,"mutability":"mutable","name":"tokenId","nameLocation":"10341:7:9","nodeType":"VariableDeclaration","scope":2092,"src":"10333:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2081,"name":"uint256","nodeType":"ElementaryTypeName","src":"10333:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10320:29:9"},"returnParameters":{"id":2084,"nodeType":"ParameterList","parameters":[],"src":"10359:0:9"},"scope":2414,"src":"10302:100:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2121,"nodeType":"Block","src":"10707:123:9","statements":[{"expression":{"arguments":[{"id":2103,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"10723:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2104,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"10727:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2102,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"10717:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10717:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2106,"nodeType":"ExpressionStatement","src":"10717:18:9"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2110,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"10779:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10779:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10801:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10793:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2112,"name":"address","nodeType":"ElementaryTypeName","src":"10793:7:9","typeDescriptions":{}}},"id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10793:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2116,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"10805:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2117,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"10809:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2118,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"10818:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2107,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"10745:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2654_$","typeString":"type(library ERC721Utils)"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10757:21:9","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2653,"src":"10745:33:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10745:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2120,"nodeType":"ExpressionStatement","src":"10745:78:9"}]},"documentation":{"id":2093,"nodeType":"StructuredDocumentation","src":"10408:210:9","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2122,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10632:9:9","nodeType":"FunctionDefinition","parameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"to","nameLocation":"10650:2:9","nodeType":"VariableDeclaration","scope":2122,"src":"10642:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2094,"name":"address","nodeType":"ElementaryTypeName","src":"10642:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2097,"mutability":"mutable","name":"tokenId","nameLocation":"10662:7:9","nodeType":"VariableDeclaration","scope":2122,"src":"10654:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2096,"name":"uint256","nodeType":"ElementaryTypeName","src":"10654:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2099,"mutability":"mutable","name":"data","nameLocation":"10684:4:9","nodeType":"VariableDeclaration","scope":2122,"src":"10671:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2098,"name":"bytes","nodeType":"ElementaryTypeName","src":"10671:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10641:48:9"},"returnParameters":{"id":2101,"nodeType":"ParameterList","parameters":[],"src":"10707:0:9"},"scope":2414,"src":"10623:207:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2154,"nodeType":"Block","src":"11197:186:9","statements":[{"assignments":[2129],"declarations":[{"constant":false,"id":2129,"mutability":"mutable","name":"previousOwner","nameLocation":"11215:13:9","nodeType":"VariableDeclaration","scope":2154,"src":"11207:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2128,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2141,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11247:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11239:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2131,"name":"address","nodeType":"ElementaryTypeName","src":"11239:7:9","typeDescriptions":{}}},"id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11239:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2135,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"11251:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11268:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11260:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2136,"name":"address","nodeType":"ElementaryTypeName","src":"11260:7:9","typeDescriptions":{}}},"id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11260:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2130,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"11231:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11231:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11207:64:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2142,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"11285:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11310:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11302:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2143,"name":"address","nodeType":"ElementaryTypeName","src":"11302:7:9","typeDescriptions":{}}},"id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11302:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11285:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2153,"nodeType":"IfStatement","src":"11281:96:9","trueBody":{"id":2152,"nodeType":"Block","src":"11314:63:9","statements":[{"errorCall":{"arguments":[{"id":2149,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"11358:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2148,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"11335:22:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2151,"nodeType":"RevertStatement","src":"11328:38:9"}]}}]},"documentation":{"id":2123,"nodeType":"StructuredDocumentation","src":"10836:315:9","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":2155,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11165:5:9","nodeType":"FunctionDefinition","parameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2125,"mutability":"mutable","name":"tokenId","nameLocation":"11179:7:9","nodeType":"VariableDeclaration","scope":2155,"src":"11171:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2124,"name":"uint256","nodeType":"ElementaryTypeName","src":"11171:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11170:17:9"},"returnParameters":{"id":2127,"nodeType":"ParameterList","parameters":[],"src":"11197:0:9"},"scope":2414,"src":"11156:227:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2214,"nodeType":"Block","src":"11778:389:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2165,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"11792:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11806:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11798:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2166,"name":"address","nodeType":"ElementaryTypeName","src":"11798:7:9","typeDescriptions":{}}},"id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11798:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11792:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2179,"nodeType":"IfStatement","src":"11788:87:9","trueBody":{"id":2178,"nodeType":"Block","src":"11810:65:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11861:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11853:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2172,"name":"address","nodeType":"ElementaryTypeName","src":"11853:7:9","typeDescriptions":{}}},"id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11853:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2171,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"11831:21:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11831:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2177,"nodeType":"RevertStatement","src":"11824:40:9"}]}},{"assignments":[2181],"declarations":[{"constant":false,"id":2181,"mutability":"mutable","name":"previousOwner","nameLocation":"11892:13:9","nodeType":"VariableDeclaration","scope":2214,"src":"11884:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2180,"name":"address","nodeType":"ElementaryTypeName","src":"11884:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2190,"initialValue":{"arguments":[{"id":2183,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"11916:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2184,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"11920:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11937:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11929:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2185,"name":"address","nodeType":"ElementaryTypeName","src":"11929:7:9","typeDescriptions":{}}},"id":2188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11929:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2182,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"11908:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11908:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11884:56:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2191,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"11954:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11979:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11971:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2192,"name":"address","nodeType":"ElementaryTypeName","src":"11971:7:9","typeDescriptions":{}}},"id":2195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11971:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11954:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2202,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"12056:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2203,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"12073:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12056:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2212,"nodeType":"IfStatement","src":"12052:109:9","trueBody":{"id":2211,"nodeType":"Block","src":"12079:82:9","statements":[{"errorCall":{"arguments":[{"id":2206,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"12121:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2207,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"12127:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2208,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"12136:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2205,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"12100:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12100:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2210,"nodeType":"RevertStatement","src":"12093:57:9"}]}},"id":2213,"nodeType":"IfStatement","src":"11950:211:9","trueBody":{"id":2201,"nodeType":"Block","src":"11983:63:9","statements":[{"errorCall":{"arguments":[{"id":2198,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"12027:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2197,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"12004:22:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2200,"nodeType":"RevertStatement","src":"11997:38:9"}]}}]},"documentation":{"id":2156,"nodeType":"StructuredDocumentation","src":"11389:313:9","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":2215,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11716:9:9","nodeType":"FunctionDefinition","parameters":{"id":2163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"from","nameLocation":"11734:4:9","nodeType":"VariableDeclaration","scope":2215,"src":"11726:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2157,"name":"address","nodeType":"ElementaryTypeName","src":"11726:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2160,"mutability":"mutable","name":"to","nameLocation":"11748:2:9","nodeType":"VariableDeclaration","scope":2215,"src":"11740:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2159,"name":"address","nodeType":"ElementaryTypeName","src":"11740:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2162,"mutability":"mutable","name":"tokenId","nameLocation":"11760:7:9","nodeType":"VariableDeclaration","scope":2215,"src":"11752:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2161,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11725:43:9"},"returnParameters":{"id":2164,"nodeType":"ParameterList","parameters":[],"src":"11778:0:9"},"scope":2414,"src":"11707:460:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2232,"nodeType":"Block","src":"13176:53:9","statements":[{"expression":{"arguments":[{"id":2226,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"13200:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2227,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"13206:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2228,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"13210:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13219:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2225,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[2233,2263],"referencedDeclaration":2263,"src":"13186:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13186:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2231,"nodeType":"ExpressionStatement","src":"13186:36:9"}]},"documentation":{"id":2216,"nodeType":"StructuredDocumentation","src":"12173:923:9","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2233,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13110:13:9","nodeType":"FunctionDefinition","parameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2218,"mutability":"mutable","name":"from","nameLocation":"13132:4:9","nodeType":"VariableDeclaration","scope":2233,"src":"13124:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2217,"name":"address","nodeType":"ElementaryTypeName","src":"13124:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2220,"mutability":"mutable","name":"to","nameLocation":"13146:2:9","nodeType":"VariableDeclaration","scope":2233,"src":"13138:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2219,"name":"address","nodeType":"ElementaryTypeName","src":"13138:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2222,"mutability":"mutable","name":"tokenId","nameLocation":"13158:7:9","nodeType":"VariableDeclaration","scope":2233,"src":"13150:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2221,"name":"uint256","nodeType":"ElementaryTypeName","src":"13150:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13123:43:9"},"returnParameters":{"id":2224,"nodeType":"ParameterList","parameters":[],"src":"13176:0:9"},"scope":2414,"src":"13101:128:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2262,"nodeType":"Block","src":"13568:127:9","statements":[{"expression":{"arguments":[{"id":2246,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"13588:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2247,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"13594:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2248,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"13598:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2245,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"13578:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13578:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2250,"nodeType":"ExpressionStatement","src":"13578:28:9"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2254,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"13650:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13650:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2256,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"13664:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2257,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"13670:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2258,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"13674:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2259,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"13683:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2251,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"13616:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2654_$","typeString":"type(library ERC721Utils)"}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13628:21:9","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2653,"src":"13616:33:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13616:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2261,"nodeType":"ExpressionStatement","src":"13616:72:9"}]},"documentation":{"id":2234,"nodeType":"StructuredDocumentation","src":"13235:226:9","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2263,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13475:13:9","nodeType":"FunctionDefinition","parameters":{"id":2243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2236,"mutability":"mutable","name":"from","nameLocation":"13497:4:9","nodeType":"VariableDeclaration","scope":2263,"src":"13489:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2235,"name":"address","nodeType":"ElementaryTypeName","src":"13489:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2238,"mutability":"mutable","name":"to","nameLocation":"13511:2:9","nodeType":"VariableDeclaration","scope":2263,"src":"13503:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2237,"name":"address","nodeType":"ElementaryTypeName","src":"13503:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2240,"mutability":"mutable","name":"tokenId","nameLocation":"13523:7:9","nodeType":"VariableDeclaration","scope":2263,"src":"13515:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2239,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2242,"mutability":"mutable","name":"data","nameLocation":"13545:4:9","nodeType":"VariableDeclaration","scope":2263,"src":"13532:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2241,"name":"bytes","nodeType":"ElementaryTypeName","src":"13532:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13488:62:9"},"returnParameters":{"id":2244,"nodeType":"ParameterList","parameters":[],"src":"13568:0:9"},"scope":2414,"src":"13466:229:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2280,"nodeType":"Block","src":"14208:50:9","statements":[{"expression":{"arguments":[{"id":2274,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"14227:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2275,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"14231:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2276,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"14240:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14246:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2273,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2281,2347],"referencedDeclaration":2347,"src":"14218:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14218:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2279,"nodeType":"ExpressionStatement","src":"14218:33:9"}]},"documentation":{"id":2264,"nodeType":"StructuredDocumentation","src":"13701:432:9","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2281,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14147:8:9","nodeType":"FunctionDefinition","parameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"to","nameLocation":"14164:2:9","nodeType":"VariableDeclaration","scope":2281,"src":"14156:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2265,"name":"address","nodeType":"ElementaryTypeName","src":"14156:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2268,"mutability":"mutable","name":"tokenId","nameLocation":"14176:7:9","nodeType":"VariableDeclaration","scope":2281,"src":"14168:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2267,"name":"uint256","nodeType":"ElementaryTypeName","src":"14168:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2270,"mutability":"mutable","name":"auth","nameLocation":"14193:4:9","nodeType":"VariableDeclaration","scope":2281,"src":"14185:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2269,"name":"address","nodeType":"ElementaryTypeName","src":"14185:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14155:43:9"},"returnParameters":{"id":2272,"nodeType":"ParameterList","parameters":[],"src":"14208:0:9"},"scope":2414,"src":"14138:120:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2346,"nodeType":"Block","src":"14534:568:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2293,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"14600:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2294,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"14613:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14629:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14621:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2295,"name":"address","nodeType":"ElementaryTypeName","src":"14621:7:9","typeDescriptions":{}}},"id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14621:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14613:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14600:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2339,"nodeType":"IfStatement","src":"14596:460:9","trueBody":{"id":2338,"nodeType":"Block","src":"14633:423:9","statements":[{"assignments":[2302],"declarations":[{"constant":false,"id":2302,"mutability":"mutable","name":"owner","nameLocation":"14655:5:9","nodeType":"VariableDeclaration","scope":2338,"src":"14647:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2301,"name":"address","nodeType":"ElementaryTypeName","src":"14647:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2306,"initialValue":{"arguments":[{"id":2304,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"14677:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2303,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"14663:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14663:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14647:38:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2307,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"14813:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14829:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14821:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2308,"name":"address","nodeType":"ElementaryTypeName","src":"14821:7:9","typeDescriptions":{}}},"id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14821:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14813:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2313,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"14835:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2314,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"14844:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14835:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14852:30:9","subExpression":{"arguments":[{"id":2318,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"14870:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2319,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"14877:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2317,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"14853:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14853:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:69:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2328,"nodeType":"IfStatement","src":"14809:142:9","trueBody":{"id":2327,"nodeType":"Block","src":"14884:67:9","statements":[{"errorCall":{"arguments":[{"id":2324,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"14931:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2323,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"14909:21:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14909:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2326,"nodeType":"RevertStatement","src":"14902:34:9"}]}},{"condition":{"id":2329,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"14969:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2337,"nodeType":"IfStatement","src":"14965:81:9","trueBody":{"id":2336,"nodeType":"Block","src":"14980:66:9","statements":[{"eventCall":{"arguments":[{"id":2331,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"15012:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2332,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"15019:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2333,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"15023:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2330,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"15003:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15003:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2335,"nodeType":"EmitStatement","src":"14998:33:9"}]}}]}},{"expression":{"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2340,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"15066:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2342,"indexExpression":{"id":2341,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"15082:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15066:24:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2343,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"15093:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15066:29:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2345,"nodeType":"ExpressionStatement","src":"15066:29:9"}]},"documentation":{"id":2282,"nodeType":"StructuredDocumentation","src":"14264:171:9","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":2347,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14449:8:9","nodeType":"FunctionDefinition","parameters":{"id":2291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"to","nameLocation":"14466:2:9","nodeType":"VariableDeclaration","scope":2347,"src":"14458:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2283,"name":"address","nodeType":"ElementaryTypeName","src":"14458:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2286,"mutability":"mutable","name":"tokenId","nameLocation":"14478:7:9","nodeType":"VariableDeclaration","scope":2347,"src":"14470:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2285,"name":"uint256","nodeType":"ElementaryTypeName","src":"14470:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2288,"mutability":"mutable","name":"auth","nameLocation":"14495:4:9","nodeType":"VariableDeclaration","scope":2347,"src":"14487:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"14487:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2290,"mutability":"mutable","name":"emitEvent","nameLocation":"14506:9:9","nodeType":"VariableDeclaration","scope":2347,"src":"14501:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2289,"name":"bool","nodeType":"ElementaryTypeName","src":"14501:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14457:59:9"},"returnParameters":{"id":2292,"nodeType":"ParameterList","parameters":[],"src":"14534:0:9"},"scope":2414,"src":"14440:662:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2383,"nodeType":"Block","src":"15404:219:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2357,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"15418:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15438:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15430:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2358,"name":"address","nodeType":"ElementaryTypeName","src":"15430:7:9","typeDescriptions":{}}},"id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15430:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15418:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2368,"nodeType":"IfStatement","src":"15414:91:9","trueBody":{"id":2367,"nodeType":"Block","src":"15442:63:9","statements":[{"errorCall":{"arguments":[{"id":2364,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"15485:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2363,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"15463:21:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15463:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2366,"nodeType":"RevertStatement","src":"15456:38:9"}]}},{"expression":{"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2369,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"15514:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2372,"indexExpression":{"id":2370,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"15533:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15514:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2373,"indexExpression":{"id":2371,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"15540:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15514:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2374,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"15552:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15514:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2376,"nodeType":"ExpressionStatement","src":"15514:46:9"},{"eventCall":{"arguments":[{"id":2378,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"15590:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2379,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"15597:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2380,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"15607:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2377,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"15575:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15575:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2382,"nodeType":"EmitStatement","src":"15570:46:9"}]},"documentation":{"id":2348,"nodeType":"StructuredDocumentation","src":"15108:198:9","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":2384,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15320:18:9","nodeType":"FunctionDefinition","parameters":{"id":2355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2350,"mutability":"mutable","name":"owner","nameLocation":"15347:5:9","nodeType":"VariableDeclaration","scope":2384,"src":"15339:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2349,"name":"address","nodeType":"ElementaryTypeName","src":"15339:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2352,"mutability":"mutable","name":"operator","nameLocation":"15362:8:9","nodeType":"VariableDeclaration","scope":2384,"src":"15354:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2351,"name":"address","nodeType":"ElementaryTypeName","src":"15354:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2354,"mutability":"mutable","name":"approved","nameLocation":"15377:8:9","nodeType":"VariableDeclaration","scope":2384,"src":"15372:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2353,"name":"bool","nodeType":"ElementaryTypeName","src":"15372:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15338:48:9"},"returnParameters":{"id":2356,"nodeType":"ParameterList","parameters":[],"src":"15404:0:9"},"scope":2414,"src":"15311:312:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2412,"nodeType":"Block","src":"15930:169:9","statements":[{"assignments":[2393],"declarations":[{"constant":false,"id":2393,"mutability":"mutable","name":"owner","nameLocation":"15948:5:9","nodeType":"VariableDeclaration","scope":2412,"src":"15940:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2392,"name":"address","nodeType":"ElementaryTypeName","src":"15940:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2397,"initialValue":{"arguments":[{"id":2395,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"15965:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2394,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"15956:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15956:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15940:33:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2398,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"15987:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16004:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15996:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2399,"name":"address","nodeType":"ElementaryTypeName","src":"15996:7:9","typeDescriptions":{}}},"id":2402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15996:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15987:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2409,"nodeType":"IfStatement","src":"15983:88:9","trueBody":{"id":2408,"nodeType":"Block","src":"16008:63:9","statements":[{"errorCall":{"arguments":[{"id":2405,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"16052:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2404,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"16029:22:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16029:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2407,"nodeType":"RevertStatement","src":"16022:38:9"}]}},{"expression":{"id":2410,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"16087:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2391,"id":2411,"nodeType":"Return","src":"16080:12:9"}]},"documentation":{"id":2385,"nodeType":"StructuredDocumentation","src":"15629:224:9","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":2413,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"15867:13:9","nodeType":"FunctionDefinition","parameters":{"id":2388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2387,"mutability":"mutable","name":"tokenId","nameLocation":"15889:7:9","nodeType":"VariableDeclaration","scope":2413,"src":"15881:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2386,"name":"uint256","nodeType":"ElementaryTypeName","src":"15881:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15880:17:9"},"returnParameters":{"id":2391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2413,"src":"15921:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2389,"name":"address","nodeType":"ElementaryTypeName","src":"15921:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15920:9:9"},"scope":2414,"src":"15858:241:9","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2415,"src":"775:15326:9","usedErrors":[285,290,299,304,309,316,321,326],"usedEvents":[2430,2439,2448]}],"src":"107:15995:9"},"id":9},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[4243],"IERC721":[2531]},"id":2532,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2416,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2418,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2532,"sourceUnit":4244,"src":"134:62:10","symbolAliases":[{"foreign":{"id":2417,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"142:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2420,"name":"IERC165","nameLocations":["288:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":4243,"src":"288:7:10"},"id":2421,"nodeType":"InheritanceSpecifier","src":"288:7:10"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2419,"nodeType":"StructuredDocumentation","src":"198:68:10","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":2531,"linearizedBaseContracts":[2531,4243],"name":"IERC721","nameLocation":"277:7:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2422,"nodeType":"StructuredDocumentation","src":"302:88:10","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2430,"name":"Transfer","nameLocation":"401:8:10","nodeType":"EventDefinition","parameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:10","nodeType":"VariableDeclaration","scope":2430,"src":"410:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2423,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2426,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:10","nodeType":"VariableDeclaration","scope":2430,"src":"432:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2425,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2428,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:10","nodeType":"VariableDeclaration","scope":2430,"src":"452:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:10"},"src":"395:82:10"},{"anonymous":false,"documentation":{"id":2431,"nodeType":"StructuredDocumentation","src":"483:94:10","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2439,"name":"Approval","nameLocation":"588:8:10","nodeType":"EventDefinition","parameters":{"id":2438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:10","nodeType":"VariableDeclaration","scope":2439,"src":"597:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2432,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2435,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:10","nodeType":"VariableDeclaration","scope":2439,"src":"620:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2434,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2437,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:10","nodeType":"VariableDeclaration","scope":2439,"src":"646:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2436,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:10"},"src":"582:89:10"},{"anonymous":false,"documentation":{"id":2440,"nodeType":"StructuredDocumentation","src":"677:117:10","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":2448,"name":"ApprovalForAll","nameLocation":"805:14:10","nodeType":"EventDefinition","parameters":{"id":2447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2442,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:10","nodeType":"VariableDeclaration","scope":2448,"src":"820:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2441,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2444,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:10","nodeType":"VariableDeclaration","scope":2448,"src":"843:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2443,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2446,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:10","nodeType":"VariableDeclaration","scope":2448,"src":"869:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2445,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:10"},"src":"799:85:10"},{"documentation":{"id":2449,"nodeType":"StructuredDocumentation","src":"890:76:10","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2456,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:10","nodeType":"FunctionDefinition","parameters":{"id":2452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2451,"mutability":"mutable","name":"owner","nameLocation":"998:5:10","nodeType":"VariableDeclaration","scope":2456,"src":"990:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2450,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:10"},"returnParameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"mutability":"mutable","name":"balance","nameLocation":"1036:7:10","nodeType":"VariableDeclaration","scope":2456,"src":"1028:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2453,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:10"},"scope":2531,"src":"971:74:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2457,"nodeType":"StructuredDocumentation","src":"1051:131:10","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2464,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:10","nodeType":"FunctionDefinition","parameters":{"id":2460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2459,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:10","nodeType":"VariableDeclaration","scope":2464,"src":"1204:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2458,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:10"},"returnParameters":{"id":2463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2462,"mutability":"mutable","name":"owner","nameLocation":"1252:5:10","nodeType":"VariableDeclaration","scope":2464,"src":"1244:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2461,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:10"},"scope":2531,"src":"1187:72:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2465,"nodeType":"StructuredDocumentation","src":"1265:565:10","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2476,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:10","nodeType":"FunctionDefinition","parameters":{"id":2474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2467,"mutability":"mutable","name":"from","nameLocation":"1869:4:10","nodeType":"VariableDeclaration","scope":2476,"src":"1861:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2466,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2469,"mutability":"mutable","name":"to","nameLocation":"1883:2:10","nodeType":"VariableDeclaration","scope":2476,"src":"1875:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2468,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2471,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:10","nodeType":"VariableDeclaration","scope":2476,"src":"1887:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2470,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2473,"mutability":"mutable","name":"data","nameLocation":"1919:4:10","nodeType":"VariableDeclaration","scope":2476,"src":"1904:19:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2472,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:10"},"returnParameters":{"id":2475,"nodeType":"ParameterList","parameters":[],"src":"1933:0:10"},"scope":2531,"src":"1835:99:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2477,"nodeType":"StructuredDocumentation","src":"1940:706:10","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2486,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:10","nodeType":"FunctionDefinition","parameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2479,"mutability":"mutable","name":"from","nameLocation":"2685:4:10","nodeType":"VariableDeclaration","scope":2486,"src":"2677:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2478,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2481,"mutability":"mutable","name":"to","nameLocation":"2699:2:10","nodeType":"VariableDeclaration","scope":2486,"src":"2691:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2480,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2483,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:10","nodeType":"VariableDeclaration","scope":2486,"src":"2703:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2482,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:10"},"returnParameters":{"id":2485,"nodeType":"ParameterList","parameters":[],"src":"2728:0:10"},"scope":2531,"src":"2651:78:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2487,"nodeType":"StructuredDocumentation","src":"2735:733:10","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2496,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:10","nodeType":"FunctionDefinition","parameters":{"id":2494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2489,"mutability":"mutable","name":"from","nameLocation":"3503:4:10","nodeType":"VariableDeclaration","scope":2496,"src":"3495:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2488,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2491,"mutability":"mutable","name":"to","nameLocation":"3517:2:10","nodeType":"VariableDeclaration","scope":2496,"src":"3509:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2490,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2493,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:10","nodeType":"VariableDeclaration","scope":2496,"src":"3521:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2492,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:10"},"returnParameters":{"id":2495,"nodeType":"ParameterList","parameters":[],"src":"3546:0:10"},"scope":2531,"src":"3473:74:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2497,"nodeType":"StructuredDocumentation","src":"3553:452:10","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2504,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:10","nodeType":"FunctionDefinition","parameters":{"id":2502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2499,"mutability":"mutable","name":"to","nameLocation":"4035:2:10","nodeType":"VariableDeclaration","scope":2504,"src":"4027:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2498,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2501,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:10","nodeType":"VariableDeclaration","scope":2504,"src":"4039:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2500,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:10"},"returnParameters":{"id":2503,"nodeType":"ParameterList","parameters":[],"src":"4064:0:10"},"scope":2531,"src":"4010:55:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2505,"nodeType":"StructuredDocumentation","src":"4071:315:10","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2512,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:10","nodeType":"FunctionDefinition","parameters":{"id":2510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"operator","nameLocation":"4426:8:10","nodeType":"VariableDeclaration","scope":2512,"src":"4418:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2506,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2509,"mutability":"mutable","name":"approved","nameLocation":"4441:8:10","nodeType":"VariableDeclaration","scope":2512,"src":"4436:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2508,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:10"},"returnParameters":{"id":2511,"nodeType":"ParameterList","parameters":[],"src":"4459:0:10"},"scope":2531,"src":"4391:69:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2513,"nodeType":"StructuredDocumentation","src":"4466:139:10","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2520,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:10","nodeType":"FunctionDefinition","parameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:10","nodeType":"VariableDeclaration","scope":2520,"src":"4631:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2514,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:10"},"returnParameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"operator","nameLocation":"4679:8:10","nodeType":"VariableDeclaration","scope":2520,"src":"4671:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2517,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:10"},"scope":2531,"src":"4610:79:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2521,"nodeType":"StructuredDocumentation","src":"4695:138:10","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2530,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:10","nodeType":"FunctionDefinition","parameters":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2523,"mutability":"mutable","name":"owner","nameLocation":"4872:5:10","nodeType":"VariableDeclaration","scope":2530,"src":"4864:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2522,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"operator","nameLocation":"4887:8:10","nodeType":"VariableDeclaration","scope":2530,"src":"4879:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2524,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:10"},"returnParameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2530,"src":"4920:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2527,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:10"},"scope":2531,"src":"4838:88:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2532,"src":"267:4661:10","usedErrors":[],"usedEvents":[2430,2439,2448]}],"src":"108:4821:10"},"id":10},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2549]},"id":2550,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2533,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"116:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2534,"nodeType":"StructuredDocumentation","src":"142:154:11","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":2549,"linearizedBaseContracts":[2549],"name":"IERC721Receiver","nameLocation":"307:15:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2535,"nodeType":"StructuredDocumentation","src":"329:500:11","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2548,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:11","nodeType":"FunctionDefinition","parameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2537,"mutability":"mutable","name":"operator","nameLocation":"877:8:11","nodeType":"VariableDeclaration","scope":2548,"src":"869:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2536,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2539,"mutability":"mutable","name":"from","nameLocation":"903:4:11","nodeType":"VariableDeclaration","scope":2548,"src":"895:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2538,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2541,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:11","nodeType":"VariableDeclaration","scope":2548,"src":"917:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2540,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2543,"mutability":"mutable","name":"data","nameLocation":"957:4:11","nodeType":"VariableDeclaration","scope":2548,"src":"942:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2542,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:11"},"returnParameters":{"id":2547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2548,"src":"986:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2545,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:11"},"scope":2549,"src":"834:160:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2550,"src":"297:699:11","usedErrors":[],"usedEvents":[]}],"src":"116:881:11"},"id":11},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[2531],"IERC721Metadata":[2577]},"id":2578,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2551,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"127:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2553,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2578,"sourceUnit":2532,"src":"153:39:12","symbolAliases":[{"foreign":{"id":2552,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"161:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2555,"name":"IERC721","nameLocations":["357:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2531,"src":"357:7:12"},"id":2556,"nodeType":"InheritanceSpecifier","src":"357:7:12"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2554,"nodeType":"StructuredDocumentation","src":"194:133:12","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2577,"linearizedBaseContracts":[2577,2531,4243],"name":"IERC721Metadata","nameLocation":"338:15:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2557,"nodeType":"StructuredDocumentation","src":"371:58:12","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2562,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:12","nodeType":"FunctionDefinition","parameters":{"id":2558,"nodeType":"ParameterList","parameters":[],"src":"447:2:12"},"returnParameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2562,"src":"473:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2559,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:12"},"scope":2577,"src":"434:54:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2563,"nodeType":"StructuredDocumentation","src":"494:60:12","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2568,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:12","nodeType":"FunctionDefinition","parameters":{"id":2564,"nodeType":"ParameterList","parameters":[],"src":"574:2:12"},"returnParameters":{"id":2567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2568,"src":"600:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2565,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:12"},"scope":2577,"src":"559:56:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2569,"nodeType":"StructuredDocumentation","src":"621:90:12","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2576,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:12","nodeType":"FunctionDefinition","parameters":{"id":2572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2571,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:12","nodeType":"VariableDeclaration","scope":2576,"src":"734:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:12"},"returnParameters":{"id":2575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2576,"src":"774:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2573,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:12"},"scope":2577,"src":"716:73:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2578,"src":"328:463:12","usedErrors":[],"usedEvents":[2430,2439,2448]}],"src":"127:665:12"},"id":12},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[2654],"IERC721Errors":[327],"IERC721Receiver":[2549]},"id":2655,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2579,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":2581,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2655,"sourceUnit":2550,"src":"144:55:13","symbolAliases":[{"foreign":{"id":2580,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"152:15:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":2583,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2655,"sourceUnit":375,"src":"200:69:13","symbolAliases":[{"foreign":{"id":2582,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"208:13:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2584,"nodeType":"StructuredDocumentation","src":"271:159:13","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":2654,"linearizedBaseContracts":[2654],"name":"ERC721Utils","nameLocation":"439:11:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2652,"nodeType":"Block","src":"1159:760:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2598,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"1173:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:13","memberName":"code","nodeType":"MemberAccess","src":"1173:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:13","memberName":"length","nodeType":"MemberAccess","src":"1173:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2651,"nodeType":"IfStatement","src":"1169:744:13","trueBody":{"id":2650,"nodeType":"Block","src":"1193:720:13","statements":[{"clauses":[{"block":{"id":2628,"nodeType":"Block","src":"1303:214:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2615,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"1325:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2616,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"1335:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2549_$","typeString":"type(contract IERC721Receiver)"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:13","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2548,"src":"1335:32:13","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:13","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2627,"nodeType":"IfStatement","src":"1321:182:13","trueBody":{"id":2626,"nodeType":"Block","src":"1378:125:13","statements":[{"errorCall":{"arguments":[{"id":2623,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"1481:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2620,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"1445:13:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$327_$","typeString":"type(contract IERC721Errors)"}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:13","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":309,"src":"1445:35:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2625,"nodeType":"RevertStatement","src":"1438:46:13"}]}}]},"errorName":"","id":2629,"nodeType":"TryCatchClause","parameters":{"id":2614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2613,"mutability":"mutable","name":"retval","nameLocation":"1295:6:13","nodeType":"VariableDeclaration","scope":2629,"src":"1288:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2612,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:13"},"src":"1279:238:13"},{"block":{"id":2647,"nodeType":"Block","src":"1546:357:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2633,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"1568:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:13","memberName":"length","nodeType":"MemberAccess","src":"1568:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2645,"nodeType":"Block","src":"1736:153:13","statements":[{"AST":{"nodeType":"YulBlock","src":"1783:88:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1820:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1828:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1816:3:13"},"nodeType":"YulFunctionCall","src":"1816:17:13"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1841:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1835:5:13"},"nodeType":"YulFunctionCall","src":"1835:13:13"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1809:6:13"},"nodeType":"YulFunctionCall","src":"1809:40:13"},"nodeType":"YulExpressionStatement","src":"1809:40:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":2631,"isOffset":false,"isSlot":false,"src":"1820:6:13","valueSize":1},{"declaration":2631,"isOffset":false,"isSlot":false,"src":"1841:6:13","valueSize":1}],"flags":["memory-safe"],"id":2644,"nodeType":"InlineAssembly","src":"1758:113:13"}]},"id":2646,"nodeType":"IfStatement","src":"1564:325:13","trueBody":{"id":2643,"nodeType":"Block","src":"1588:142:13","statements":[{"errorCall":{"arguments":[{"id":2640,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"1708:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2637,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"1672:13:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$327_$","typeString":"type(contract IERC721Errors)"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:13","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":309,"src":"1672:35:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2642,"nodeType":"RevertStatement","src":"1665:46:13"}]}}]},"errorName":"","id":2648,"nodeType":"TryCatchClause","parameters":{"id":2632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2631,"mutability":"mutable","name":"reason","nameLocation":"1538:6:13","nodeType":"VariableDeclaration","scope":2648,"src":"1525:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2630,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:13"},"src":"1518:385:13"}],"externalCall":{"arguments":[{"id":2607,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"1248:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2608,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"1258:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2609,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"1264:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2610,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"1273:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2604,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"1227:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2603,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"1211:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2549_$","typeString":"type(contract IERC721Receiver)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2549","typeString":"contract IERC721Receiver"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:13","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2548,"src":"1211:36:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:13","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2649,"nodeType":"TryStatement","src":"1207:696:13"}]}}]},"documentation":{"id":2585,"nodeType":"StructuredDocumentation","src":"457:531:13","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":2653,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:13","nodeType":"FunctionDefinition","parameters":{"id":2596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"operator","nameLocation":"1041:8:13","nodeType":"VariableDeclaration","scope":2653,"src":"1033:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2586,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2589,"mutability":"mutable","name":"from","nameLocation":"1067:4:13","nodeType":"VariableDeclaration","scope":2653,"src":"1059:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2588,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2591,"mutability":"mutable","name":"to","nameLocation":"1089:2:13","nodeType":"VariableDeclaration","scope":2653,"src":"1081:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2590,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2593,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:13","nodeType":"VariableDeclaration","scope":2653,"src":"1101:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2592,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2595,"mutability":"mutable","name":"data","nameLocation":"1139:4:13","nodeType":"VariableDeclaration","scope":2653,"src":"1126:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2594,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:13"},"returnParameters":{"id":2597,"nodeType":"ParameterList","parameters":[],"src":"1159:0:13"},"scope":2654,"src":"993:926:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2655,"src":"431:1490:13","usedErrors":[],"usedEvents":[]}],"src":"118:1804:13"},"id":13},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2684]},"id":2685,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2656,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:14"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2657,"nodeType":"StructuredDocumentation","src":"127:496:14","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2684,"linearizedBaseContracts":[2684],"name":"Context","nameLocation":"642:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2665,"nodeType":"Block","src":"718:34:14","statements":[{"expression":{"expression":{"id":2662,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:14","memberName":"sender","nodeType":"MemberAccess","src":"735:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2661,"id":2664,"nodeType":"Return","src":"728:17:14"}]},"id":2666,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:14","nodeType":"FunctionDefinition","parameters":{"id":2658,"nodeType":"ParameterList","parameters":[],"src":"675:2:14"},"returnParameters":{"id":2661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2666,"src":"709:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2659,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:14"},"scope":2684,"src":"656:96:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2674,"nodeType":"Block","src":"825:32:14","statements":[{"expression":{"expression":{"id":2671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:14","memberName":"data","nodeType":"MemberAccess","src":"842:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2670,"id":2673,"nodeType":"Return","src":"835:15:14"}]},"id":2675,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:14","nodeType":"FunctionDefinition","parameters":{"id":2667,"nodeType":"ParameterList","parameters":[],"src":"775:2:14"},"returnParameters":{"id":2670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2675,"src":"809:14:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2668,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:14"},"scope":2684,"src":"758:99:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2682,"nodeType":"Block","src":"935:25:14","statements":[{"expression":{"hexValue":"30","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2679,"id":2681,"nodeType":"Return","src":"945:8:14"}]},"id":2683,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:14","nodeType":"FunctionDefinition","parameters":{"id":2676,"nodeType":"ParameterList","parameters":[],"src":"892:2:14"},"returnParameters":{"id":2679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2683,"src":"926:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2677,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:14"},"scope":2684,"src":"863:97:14","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2685,"src":"624:338:14","usedErrors":[],"usedEvents":[]}],"src":"101:862:14"},"id":14},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2736]},"id":2737,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2686,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2687,"nodeType":"StructuredDocumentation","src":"125:489:15","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2736,"linearizedBaseContracts":[2736],"name":"Panic","nameLocation":"665:5:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2688,"nodeType":"StructuredDocumentation","src":"677:36:15","text":"@dev generic / unspecified error"},"id":2691,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:15","nodeType":"VariableDeclaration","scope":2736,"src":"718:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2689,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2692,"nodeType":"StructuredDocumentation","src":"764:37:15","text":"@dev used by the assert() builtin"},"id":2695,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:15","nodeType":"VariableDeclaration","scope":2736,"src":"806:39:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2693,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2696,"nodeType":"StructuredDocumentation","src":"851:41:15","text":"@dev arithmetic underflow or overflow"},"id":2699,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:15","nodeType":"VariableDeclaration","scope":2736,"src":"897:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2697,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:15","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2700,"nodeType":"StructuredDocumentation","src":"950:35:15","text":"@dev division or modulo by zero"},"id":2703,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:15","nodeType":"VariableDeclaration","scope":2736,"src":"990:49:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2704,"nodeType":"StructuredDocumentation","src":"1045:30:15","text":"@dev enum conversion error"},"id":2707,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:15","nodeType":"VariableDeclaration","scope":2736,"src":"1080:54:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2705,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:15","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2708,"nodeType":"StructuredDocumentation","src":"1140:36:15","text":"@dev invalid encoding in storage"},"id":2711,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:15","nodeType":"VariableDeclaration","scope":2736,"src":"1181:55:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2709,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:15","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2712,"nodeType":"StructuredDocumentation","src":"1242:24:15","text":"@dev empty array pop"},"id":2715,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:15","nodeType":"VariableDeclaration","scope":2736,"src":"1271:48:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2713,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:15","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2716,"nodeType":"StructuredDocumentation","src":"1325:35:15","text":"@dev array out of bounds access"},"id":2719,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:15","nodeType":"VariableDeclaration","scope":2736,"src":"1365:52:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2717,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:15","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2720,"nodeType":"StructuredDocumentation","src":"1423:65:15","text":"@dev resource error (too large allocation or too large array)"},"id":2723,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:15","nodeType":"VariableDeclaration","scope":2736,"src":"1493:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2721,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:15","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2724,"nodeType":"StructuredDocumentation","src":"1546:42:15","text":"@dev calling invalid internal function"},"id":2727,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:15","nodeType":"VariableDeclaration","scope":2736,"src":"1593:58:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2725,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:15","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2734,"nodeType":"Block","src":"1819:151:15","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:15","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:15","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:15"},"nodeType":"YulFunctionCall","src":"1868:24:15"},"nodeType":"YulExpressionStatement","src":"1868:24:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:15","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:15"},"nodeType":"YulFunctionCall","src":"1905:18:15"},"nodeType":"YulExpressionStatement","src":"1905:18:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:15","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:15"},"nodeType":"YulFunctionCall","src":"1936:18:15"},"nodeType":"YulExpressionStatement","src":"1936:18:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":2730,"isOffset":false,"isSlot":false,"src":"1918:4:15","valueSize":1}],"flags":["memory-safe"],"id":2733,"nodeType":"InlineAssembly","src":"1829:135:15"}]},"documentation":{"id":2728,"nodeType":"StructuredDocumentation","src":"1658:113:15","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2735,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:15","nodeType":"FunctionDefinition","parameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"code","nameLocation":"1799:4:15","nodeType":"VariableDeclaration","scope":2735,"src":"1791:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2729,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:15"},"returnParameters":{"id":2732,"nodeType":"ParameterList","parameters":[],"src":"1819:0:15"},"scope":2736,"src":"1776:194:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2737,"src":"657:1315:15","usedErrors":[],"usedEvents":[]}],"src":"99:1874:15"},"id":15},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[2805]},"id":2806,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2738,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:16"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2739,"nodeType":"StructuredDocumentation","src":"135:894:16","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2805,"linearizedBaseContracts":[2805],"name":"ReentrancyGuard","nameLocation":"1048:15:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2742,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:16","nodeType":"VariableDeclaration","scope":2805,"src":"1818:40:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2745,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:16","nodeType":"VariableDeclaration","scope":2805,"src":"1864:36:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2743,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":2747,"mutability":"mutable","name":"_status","nameLocation":"1923:7:16","nodeType":"VariableDeclaration","scope":2805,"src":"1907:23:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":2748,"nodeType":"StructuredDocumentation","src":"1937:52:16","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":2750,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:16","nodeType":"ErrorDefinition","parameters":{"id":2749,"nodeType":"ParameterList","parameters":[],"src":"2028:2:16"},"src":"1994:37:16"},{"body":{"id":2757,"nodeType":"Block","src":"2051:38:16","statements":[{"expression":{"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2753,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"2061:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2754,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"2071:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2756,"nodeType":"ExpressionStatement","src":"2061:21:16"}]},"id":2758,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2751,"nodeType":"ParameterList","parameters":[],"src":"2048:2:16"},"returnParameters":{"id":2752,"nodeType":"ParameterList","parameters":[],"src":"2051:0:16"},"scope":2805,"src":"2037:52:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2768,"nodeType":"Block","src":"2490:79:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2761,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"2500:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2763,"nodeType":"ExpressionStatement","src":"2500:21:16"},{"id":2764,"nodeType":"PlaceholderStatement","src":"2531:1:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2765,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"2542:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2767,"nodeType":"ExpressionStatement","src":"2542:20:16"}]},"documentation":{"id":2759,"nodeType":"StructuredDocumentation","src":"2095:366:16","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":2769,"name":"nonReentrant","nameLocation":"2475:12:16","nodeType":"ModifierDefinition","parameters":{"id":2760,"nodeType":"ParameterList","parameters":[],"src":"2487:2:16"},"src":"2466:103:16","virtual":false,"visibility":"internal"},{"body":{"id":2784,"nodeType":"Block","src":"2614:268:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2772,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"2702:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2773,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"2713:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2779,"nodeType":"IfStatement","src":"2698:86:16","trueBody":{"id":2778,"nodeType":"Block","src":"2722:62:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2775,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"2743:28:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2777,"nodeType":"RevertStatement","src":"2736:37:16"}]}},{"expression":{"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2780,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"2858:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2781,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"2868:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2783,"nodeType":"ExpressionStatement","src":"2858:17:16"}]},"id":2785,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:16","nodeType":"FunctionDefinition","parameters":{"id":2770,"nodeType":"ParameterList","parameters":[],"src":"2603:2:16"},"returnParameters":{"id":2771,"nodeType":"ParameterList","parameters":[],"src":"2614:0:16"},"scope":2805,"src":"2575:307:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2792,"nodeType":"Block","src":"2926:170:16","statements":[{"expression":{"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2788,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"3068:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2789,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"3078:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2791,"nodeType":"ExpressionStatement","src":"3068:21:16"}]},"id":2793,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:16","nodeType":"FunctionDefinition","parameters":{"id":2786,"nodeType":"ParameterList","parameters":[],"src":"2915:2:16"},"returnParameters":{"id":2787,"nodeType":"ParameterList","parameters":[],"src":"2926:0:16"},"scope":2805,"src":"2888:208:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2803,"nodeType":"Block","src":"3339:42:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2799,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"3356:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2800,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"3367:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2798,"id":2802,"nodeType":"Return","src":"3349:25:16"}]},"documentation":{"id":2794,"nodeType":"StructuredDocumentation","src":"3102:168:16","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":2804,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:16","nodeType":"FunctionDefinition","parameters":{"id":2795,"nodeType":"ParameterList","parameters":[],"src":"3307:2:16"},"returnParameters":{"id":2798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2804,"src":"3333:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2796,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:16"},"scope":2805,"src":"3275:106:16","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2806,"src":"1030:2353:16","usedErrors":[2750],"usedEvents":[]}],"src":"109:3275:16"},"id":16},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5864],"SafeCast":[7629],"SignedMath":[7773],"Strings":[4207]},"id":4208,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2807,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2809,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4208,"sourceUnit":5865,"src":"127:37:17","symbolAliases":[{"foreign":{"id":2808,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"135:4:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2811,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4208,"sourceUnit":7630,"src":"165:45:17","symbolAliases":[{"foreign":{"id":2810,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"173:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2813,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4208,"sourceUnit":7774,"src":"211:49:17","symbolAliases":[{"foreign":{"id":2812,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7773,"src":"219:10:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2814,"nodeType":"StructuredDocumentation","src":"262:34:17","text":" @dev String operations."},"fullyImplemented":true,"id":4207,"linearizedBaseContracts":[4207],"name":"Strings","nameLocation":"305:7:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2816,"libraryName":{"id":2815,"name":"SafeCast","nameLocations":["325:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":7629,"src":"325:8:17"},"nodeType":"UsingForDirective","src":"319:21:17"},{"constant":true,"id":2819,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:17","nodeType":"VariableDeclaration","scope":4207,"src":"346:56:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2817,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2822,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:17","nodeType":"VariableDeclaration","scope":4207,"src":"408:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2820,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:17","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":2858,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:17","nodeType":"VariableDeclaration","scope":4207,"src":"456:302:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":2857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":2852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":2847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":2842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":2837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":2832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":2825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2827,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":2830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":2829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:17","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:17","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":2831,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:17","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:17","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":2835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":2834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:17","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":2836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:17","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:17","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":2840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:17","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":2841,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:17","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:17","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":2845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":2844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:17","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:17","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":2846,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:17","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:17","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":2850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":2849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:17","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:17","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":2851,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:17","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:17","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":2855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:17","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":2856,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:17","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:17","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":2859,"nodeType":"StructuredDocumentation","src":"778:81:17","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2865,"name":"StringsInsufficientHexLength","nameLocation":"870:28:17","nodeType":"ErrorDefinition","parameters":{"id":2864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"value","nameLocation":"907:5:17","nodeType":"VariableDeclaration","scope":2865,"src":"899:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2860,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2863,"mutability":"mutable","name":"length","nameLocation":"922:6:17","nodeType":"VariableDeclaration","scope":2865,"src":"914:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2862,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:17"},"src":"864:66:17"},{"documentation":{"id":2866,"nodeType":"StructuredDocumentation","src":"936:108:17","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2868,"name":"StringsInvalidChar","nameLocation":"1055:18:17","nodeType":"ErrorDefinition","parameters":{"id":2867,"nodeType":"ParameterList","parameters":[],"src":"1073:2:17"},"src":"1049:27:17"},{"documentation":{"id":2869,"nodeType":"StructuredDocumentation","src":"1082:84:17","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2871,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:17","nodeType":"ErrorDefinition","parameters":{"id":2870,"nodeType":"ParameterList","parameters":[],"src":"1204:2:17"},"src":"1171:36:17"},{"body":{"id":2918,"nodeType":"Block","src":"1379:563:17","statements":[{"id":2917,"nodeType":"UncheckedBlock","src":"1389:547:17","statements":[{"assignments":[2880],"declarations":[{"constant":false,"id":2880,"mutability":"mutable","name":"length","nameLocation":"1421:6:17","nodeType":"VariableDeclaration","scope":2917,"src":"1413:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2879,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2887,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"1441:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2881,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"1430:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5864_$","typeString":"type(library Math)"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:17","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5696,"src":"1430:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:17"},{"assignments":[2889],"declarations":[{"constant":false,"id":2889,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:17","nodeType":"VariableDeclaration","scope":2917,"src":"1465:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2888,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2894,"initialValue":{"arguments":[{"id":2892,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"1499:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2890,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:17"},{"assignments":[2896],"declarations":[{"constant":false,"id":2896,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:17","nodeType":"VariableDeclaration","scope":2917,"src":"1520:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2895,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2897,"nodeType":"VariableDeclarationStatement","src":"1520:11:17"},{"AST":{"nodeType":"YulBlock","src":"1570:69:17","statements":[{"nodeType":"YulAssignment","src":"1588:37:17","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1603:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1611:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:17"},"nodeType":"YulFunctionCall","src":"1599:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"1618:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:17"},"nodeType":"YulFunctionCall","src":"1595:30:17"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2889,"isOffset":false,"isSlot":false,"src":"1603:6:17","valueSize":1},{"declaration":2880,"isOffset":false,"isSlot":false,"src":"1618:6:17","valueSize":1},{"declaration":2896,"isOffset":false,"isSlot":false,"src":"1588:3:17","valueSize":1}],"flags":["memory-safe"],"id":2898,"nodeType":"InlineAssembly","src":"1545:94:17"},{"body":{"id":2913,"nodeType":"Block","src":"1665:234:17","statements":[{"expression":{"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:17","subExpression":{"id":2900,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"1683:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2902,"nodeType":"ExpressionStatement","src":"1683:5:17"},{"AST":{"nodeType":"YulBlock","src":"1731:86:17","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1761:3:17"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1775:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1782:2:17","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1771:3:17"},"nodeType":"YulFunctionCall","src":"1771:14:17"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1787:10:17"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1766:4:17"},"nodeType":"YulFunctionCall","src":"1766:32:17"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1753:7:17"},"nodeType":"YulFunctionCall","src":"1753:46:17"},"nodeType":"YulExpressionStatement","src":"1753:46:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":2819,"isOffset":false,"isSlot":false,"src":"1787:10:17","valueSize":1},{"declaration":2896,"isOffset":false,"isSlot":false,"src":"1761:3:17","valueSize":1},{"declaration":2874,"isOffset":false,"isSlot":false,"src":"1775:5:17","valueSize":1}],"flags":["memory-safe"],"id":2903,"nodeType":"InlineAssembly","src":"1706:111:17"},{"expression":{"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"1834:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2907,"nodeType":"ExpressionStatement","src":"1834:11:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"1867:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2912,"nodeType":"IfStatement","src":"1863:21:17","trueBody":{"id":2911,"nodeType":"Break","src":"1879:5:17"}}]},"condition":{"hexValue":"74727565","id":2899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2914,"nodeType":"WhileStatement","src":"1652:247:17"},{"expression":{"id":2915,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"1919:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2878,"id":2916,"nodeType":"Return","src":"1912:13:17"}]}]},"documentation":{"id":2872,"nodeType":"StructuredDocumentation","src":"1213:90:17","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2919,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:17","nodeType":"FunctionDefinition","parameters":{"id":2875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"value","nameLocation":"1334:5:17","nodeType":"VariableDeclaration","scope":2919,"src":"1326:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2873,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:17"},"returnParameters":{"id":2878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2919,"src":"1364:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2876,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:17"},"scope":4207,"src":"1308:634:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2944,"nodeType":"Block","src":"2118:92:17","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"2149:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:17","trueExpression":{"hexValue":"2d","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"2195:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2937,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7773,"src":"2180:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7773_$","typeString":"type(library SignedMath)"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:17","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7772,"src":"2180:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2936,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"2171:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2927,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:17","typeDescriptions":{}}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:17","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:17","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2926,"id":2943,"nodeType":"Return","src":"2128:75:17"}]},"documentation":{"id":2920,"nodeType":"StructuredDocumentation","src":"1948:89:17","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2945,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:17","nodeType":"FunctionDefinition","parameters":{"id":2923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2922,"mutability":"mutable","name":"value","nameLocation":"2073:5:17","nodeType":"VariableDeclaration","scope":2945,"src":"2066:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2921,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:17"},"returnParameters":{"id":2926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2945,"src":"2103:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2924,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:17"},"scope":4207,"src":"2042:168:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2964,"nodeType":"Block","src":"2389:100:17","statements":[{"id":2963,"nodeType":"UncheckedBlock","src":"2399:84:17","statements":[{"expression":{"arguments":[{"id":2954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"2442:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"2461:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2955,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"2449:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5864_$","typeString":"type(library Math)"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:17","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5807,"src":"2449:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2953,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2965,3048,3068],"referencedDeclaration":3048,"src":"2430:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2952,"id":2962,"nodeType":"Return","src":"2423:49:17"}]}]},"documentation":{"id":2946,"nodeType":"StructuredDocumentation","src":"2216:94:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2965,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:17","nodeType":"FunctionDefinition","parameters":{"id":2949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2948,"mutability":"mutable","name":"value","nameLocation":"2344:5:17","nodeType":"VariableDeclaration","scope":2965,"src":"2336:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2947,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:17"},"returnParameters":{"id":2952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2965,"src":"2374:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2950,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:17"},"scope":4207,"src":"2315:174:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3047,"nodeType":"Block","src":"2702:435:17","statements":[{"assignments":[2976],"declarations":[{"constant":false,"id":2976,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:17","nodeType":"VariableDeclaration","scope":3047,"src":"2712:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2978,"initialValue":{"id":2977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"2733:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:17"},{"assignments":[2980],"declarations":[{"constant":false,"id":2980,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:17","nodeType":"VariableDeclaration","scope":3047,"src":"2748:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2979,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2989,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2984,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"2784:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2981,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:17"},{"expression":{"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2990,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"2805:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2992,"indexExpression":{"hexValue":"30","id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2995,"nodeType":"ExpressionStatement","src":"2805:15:17"},{"expression":{"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2996,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"2830:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2998,"indexExpression":{"hexValue":"31","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3001,"nodeType":"ExpressionStatement","src":"2830:15:17"},{"body":{"id":3030,"nodeType":"Block","src":"2900:95:17","statements":[{"expression":{"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3016,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"2914:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3018,"indexExpression":{"id":3017,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"2921:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3019,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"2926:10:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3023,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3020,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"2937:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3025,"nodeType":"ExpressionStatement","src":"2914:40:17"},{"expression":{"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3026,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"2968:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3029,"nodeType":"ExpressionStatement","src":"2968:16:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3010,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"2888:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3031,"initializationExpression":{"assignments":[3003],"declarations":[{"constant":false,"id":3003,"mutability":"mutable","name":"i","nameLocation":"2868:1:17","nodeType":"VariableDeclaration","scope":3031,"src":"2860:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3002,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3009,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3005,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"2876:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:17"},"loopExpression":{"expression":{"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:17","subExpression":{"id":3013,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"2897:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3015,"nodeType":"ExpressionStatement","src":"2895:3:17"},"nodeType":"ForStatement","src":"2855:140:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3032,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"3008:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3041,"nodeType":"IfStatement","src":"3004:96:17","trueBody":{"id":3040,"nodeType":"Block","src":"3025:75:17","statements":[{"errorCall":{"arguments":[{"id":3036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"3075:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3037,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"3082:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3035,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"3046:28:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3039,"nodeType":"RevertStatement","src":"3039:50:17"}]}},{"expression":{"arguments":[{"id":3044,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"3123:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3042,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:17","typeDescriptions":{}}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2974,"id":3046,"nodeType":"Return","src":"3109:21:17"}]},"documentation":{"id":2966,"nodeType":"StructuredDocumentation","src":"2495:112:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3048,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:17","nodeType":"FunctionDefinition","parameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2968,"mutability":"mutable","name":"value","nameLocation":"2641:5:17","nodeType":"VariableDeclaration","scope":3048,"src":"2633:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2970,"mutability":"mutable","name":"length","nameLocation":"2656:6:17","nodeType":"VariableDeclaration","scope":3048,"src":"2648:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2969,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:17"},"returnParameters":{"id":2974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3048,"src":"2687:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2972,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:17"},"scope":4207,"src":"2612:525:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3067,"nodeType":"Block","src":"3369:75:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3061,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"3414:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3059,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:17","typeDescriptions":{}}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:17","typeDescriptions":{}}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3064,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"3422:14:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3056,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2965,3048,3068],"referencedDeclaration":3048,"src":"3386:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3055,"id":3066,"nodeType":"Return","src":"3379:58:17"}]},"documentation":{"id":3049,"nodeType":"StructuredDocumentation","src":"3143:148:17","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3068,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:17","nodeType":"FunctionDefinition","parameters":{"id":3052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3051,"mutability":"mutable","name":"addr","nameLocation":"3325:4:17","nodeType":"VariableDeclaration","scope":3068,"src":"3317:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3050,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:17"},"returnParameters":{"id":3055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3068,"src":"3354:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3053,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:17"},"scope":4207,"src":"3296:148:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3132,"nodeType":"Block","src":"3701:642:17","statements":[{"assignments":[3077],"declarations":[{"constant":false,"id":3077,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:17","nodeType":"VariableDeclaration","scope":3132,"src":"3711:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3076,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3084,"initialValue":{"arguments":[{"arguments":[{"id":3081,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"3751:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3080,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2965,3048,3068],"referencedDeclaration":3068,"src":"3739:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3078,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:17","typeDescriptions":{}}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:17"},{"assignments":[3086],"declarations":[{"constant":false,"id":3086,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:17","nodeType":"VariableDeclaration","scope":3132,"src":"3842:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3085,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3087,"nodeType":"VariableDeclarationStatement","src":"3842:17:17"},{"AST":{"nodeType":"YulBlock","src":"3894:78:17","statements":[{"nodeType":"YulAssignment","src":"3908:54:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3925:2:17","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3943:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3951:4:17","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:17"},"nodeType":"YulFunctionCall","src":"3939:17:17"},{"kind":"number","nodeType":"YulLiteral","src":"3958:2:17","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3929:9:17"},"nodeType":"YulFunctionCall","src":"3929:32:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3921:3:17"},"nodeType":"YulFunctionCall","src":"3921:41:17"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3908:9:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3077,"isOffset":false,"isSlot":false,"src":"3943:6:17","valueSize":1},{"declaration":3086,"isOffset":false,"isSlot":false,"src":"3908:9:17","valueSize":1}],"flags":["memory-safe"],"id":3088,"nodeType":"InlineAssembly","src":"3869:103:17"},{"body":{"id":3125,"nodeType":"Block","src":"4015:291:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3099,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"4121:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":3102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:17","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3106,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"4150:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3108,"indexExpression":{"id":3107,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"4157:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3104,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:17","typeDescriptions":{}}},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3120,"nodeType":"IfStatement","src":"4117:150:17","trueBody":{"id":3119,"nodeType":"Block","src":"4167:100:17","statements":[{"expression":{"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3113,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"4235:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3115,"indexExpression":{"id":3114,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"4242:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":3116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3118,"nodeType":"ExpressionStatement","src":"4235:17:17"}]}},{"expression":{"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3121,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"4280:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3124,"nodeType":"ExpressionStatement","src":"4280:15:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3093,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"4003:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3126,"initializationExpression":{"assignments":[3090],"declarations":[{"constant":false,"id":3090,"mutability":"mutable","name":"i","nameLocation":"3995:1:17","nodeType":"VariableDeclaration","scope":3126,"src":"3987:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3089,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3092,"initialValue":{"hexValue":"3431","id":3091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:17","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:17"},"loopExpression":{"expression":{"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:17","subExpression":{"id":3096,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"4012:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3098,"nodeType":"ExpressionStatement","src":"4010:3:17"},"nodeType":"ForStatement","src":"3982:324:17"},{"expression":{"arguments":[{"id":3129,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"4329:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3127,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:17","typeDescriptions":{}}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3075,"id":3131,"nodeType":"Return","src":"4315:21:17"}]},"documentation":{"id":3069,"nodeType":"StructuredDocumentation","src":"3450:165:17","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":3133,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:17","nodeType":"FunctionDefinition","parameters":{"id":3072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3071,"mutability":"mutable","name":"addr","nameLocation":"3657:4:17","nodeType":"VariableDeclaration","scope":3133,"src":"3649:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3070,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:17"},"returnParameters":{"id":3075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3133,"src":"3686:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3073,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:17"},"scope":4207,"src":"3620:723:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3169,"nodeType":"Block","src":"4498:104:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3145,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"4521:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3143,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:17","typeDescriptions":{}}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:17","memberName":"length","nodeType":"MemberAccess","src":"4515:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3150,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"4540:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3148,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:17","typeDescriptions":{}}},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:17","memberName":"length","nodeType":"MemberAccess","src":"4534:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3157,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"4569:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3155,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:17","typeDescriptions":{}}},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3154,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3163,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"4592:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3161,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:17","typeDescriptions":{}}},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3160,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3142,"id":3168,"nodeType":"Return","src":"4508:87:17"}]},"documentation":{"id":3134,"nodeType":"StructuredDocumentation","src":"4349:66:17","text":" @dev Returns true if the two strings are equal."},"id":3170,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:17","nodeType":"FunctionDefinition","parameters":{"id":3139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3136,"mutability":"mutable","name":"a","nameLocation":"4449:1:17","nodeType":"VariableDeclaration","scope":3170,"src":"4435:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3135,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3138,"mutability":"mutable","name":"b","nameLocation":"4466:1:17","nodeType":"VariableDeclaration","scope":3170,"src":"4452:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3137,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:17"},"returnParameters":{"id":3142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3170,"src":"4492:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3140,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:17"},"scope":4207,"src":"4420:182:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3188,"nodeType":"Block","src":"4899:64:17","statements":[{"expression":{"arguments":[{"id":3179,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"4926:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3183,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"4942:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3181,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:17","typeDescriptions":{}}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:17","memberName":"length","nodeType":"MemberAccess","src":"4936:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3178,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[3189,3220],"referencedDeclaration":3220,"src":"4916:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3177,"id":3187,"nodeType":"Return","src":"4909:47:17"}]},"documentation":{"id":3171,"nodeType":"StructuredDocumentation","src":"4608:214:17","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3189,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:17","nodeType":"FunctionDefinition","parameters":{"id":3174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3173,"mutability":"mutable","name":"input","nameLocation":"4860:5:17","nodeType":"VariableDeclaration","scope":3189,"src":"4846:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3172,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:17"},"returnParameters":{"id":3177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3189,"src":"4890:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3175,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:17"},"scope":4207,"src":"4827:136:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3219,"nodeType":"Block","src":"5368:153:17","statements":[{"assignments":[3202,3204],"declarations":[{"constant":false,"id":3202,"mutability":"mutable","name":"success","nameLocation":"5384:7:17","nodeType":"VariableDeclaration","scope":3219,"src":"5379:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3201,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3204,"mutability":"mutable","name":"value","nameLocation":"5401:5:17","nodeType":"VariableDeclaration","scope":3219,"src":"5393:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3203,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3210,"initialValue":{"arguments":[{"id":3206,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"5423:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3207,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"5430:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3208,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"5437:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3205,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3241,3278],"referencedDeclaration":3278,"src":"5410:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:17"},{"condition":{"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:17","subExpression":{"id":3211,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"5456:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3216,"nodeType":"IfStatement","src":"5451:41:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3213,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"5472:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3215,"nodeType":"RevertStatement","src":"5465:27:17"}},{"expression":{"id":3217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"5509:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3200,"id":3218,"nodeType":"Return","src":"5502:12:17"}]},"documentation":{"id":3190,"nodeType":"StructuredDocumentation","src":"4969:294:17","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3220,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:17","nodeType":"FunctionDefinition","parameters":{"id":3197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"input","nameLocation":"5301:5:17","nodeType":"VariableDeclaration","scope":3220,"src":"5287:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3191,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3194,"mutability":"mutable","name":"begin","nameLocation":"5316:5:17","nodeType":"VariableDeclaration","scope":3220,"src":"5308:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3196,"mutability":"mutable","name":"end","nameLocation":"5331:3:17","nodeType":"VariableDeclaration","scope":3220,"src":"5323:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3195,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:17"},"returnParameters":{"id":3200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3220,"src":"5359:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3198,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:17"},"scope":4207,"src":"5268:253:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3240,"nodeType":"Block","src":"5842:83:17","statements":[{"expression":{"arguments":[{"id":3231,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"5888:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3235,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"5904:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3233,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:17","typeDescriptions":{}}},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:17","memberName":"length","nodeType":"MemberAccess","src":"5898:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3230,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"5859:28:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3229,"id":3239,"nodeType":"Return","src":"5852:66:17"}]},"documentation":{"id":3221,"nodeType":"StructuredDocumentation","src":"5527:215:17","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3241,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:17","nodeType":"FunctionDefinition","parameters":{"id":3224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3223,"mutability":"mutable","name":"input","nameLocation":"5783:5:17","nodeType":"VariableDeclaration","scope":3241,"src":"5769:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3222,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:17"},"returnParameters":{"id":3229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3226,"mutability":"mutable","name":"success","nameLocation":"5818:7:17","nodeType":"VariableDeclaration","scope":3241,"src":"5813:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3225,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3228,"mutability":"mutable","name":"value","nameLocation":"5835:5:17","nodeType":"VariableDeclaration","scope":3241,"src":"5827:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3227,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:17"},"scope":4207,"src":"5747:178:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3277,"nodeType":"Block","src":"6327:144:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3255,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"6341:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3258,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"6353:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3256,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:17","typeDescriptions":{}}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:17","memberName":"length","nodeType":"MemberAccess","src":"6347:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3262,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"6370:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3263,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"6378:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3270,"nodeType":"IfStatement","src":"6337:63:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3268,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3254,"id":3269,"nodeType":"Return","src":"6383:17:17"}},{"expression":{"arguments":[{"id":3272,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"6446:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3273,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"6453:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3274,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"6460:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3271,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"6417:28:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3254,"id":3276,"nodeType":"Return","src":"6410:54:17"}]},"documentation":{"id":3242,"nodeType":"StructuredDocumentation","src":"5931:238:17","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3278,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:17","nodeType":"FunctionDefinition","parameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"input","nameLocation":"6219:5:17","nodeType":"VariableDeclaration","scope":3278,"src":"6205:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3243,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3246,"mutability":"mutable","name":"begin","nameLocation":"6242:5:17","nodeType":"VariableDeclaration","scope":3278,"src":"6234:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3245,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3248,"mutability":"mutable","name":"end","nameLocation":"6265:3:17","nodeType":"VariableDeclaration","scope":3278,"src":"6257:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3247,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:17"},"returnParameters":{"id":3254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3251,"mutability":"mutable","name":"success","nameLocation":"6303:7:17","nodeType":"VariableDeclaration","scope":3278,"src":"6298:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3250,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3253,"mutability":"mutable","name":"value","nameLocation":"6320:5:17","nodeType":"VariableDeclaration","scope":3278,"src":"6312:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3252,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:17"},"scope":4207,"src":"6174:297:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3347,"nodeType":"Block","src":"6874:347:17","statements":[{"assignments":[3293],"declarations":[{"constant":false,"id":3293,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:17","nodeType":"VariableDeclaration","scope":3347,"src":"6884:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3292,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3298,"initialValue":{"arguments":[{"id":3296,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"6912:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3294,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:17","typeDescriptions":{}}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:17"},{"assignments":[3300],"declarations":[{"constant":false,"id":3300,"mutability":"mutable","name":"result","nameLocation":"6937:6:17","nodeType":"VariableDeclaration","scope":3347,"src":"6929:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3302,"initialValue":{"hexValue":"30","id":3301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:17"},{"body":{"id":3341,"nodeType":"Block","src":"6995:189:17","statements":[{"assignments":[3314],"declarations":[{"constant":false,"id":3314,"mutability":"mutable","name":"chr","nameLocation":"7015:3:17","nodeType":"VariableDeclaration","scope":3341,"src":"7009:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3313,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3324,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3319,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"7064:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3320,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"7072:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3318,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"7041:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3316,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:17","typeDescriptions":{}}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3315,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"7021:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3325,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"7094:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":3326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:17","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3332,"nodeType":"IfStatement","src":"7090:30:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3330,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3291,"id":3331,"nodeType":"Return","src":"7103:17:17"}},{"expression":{"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3333,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"7134:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":3334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3336,"nodeType":"ExpressionStatement","src":"7134:12:17"},{"expression":{"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3337,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"7160:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3338,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"7170:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3340,"nodeType":"ExpressionStatement","src":"7160:13:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3307,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"6981:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3308,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"6985:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3342,"initializationExpression":{"assignments":[3304],"declarations":[{"constant":false,"id":3304,"mutability":"mutable","name":"i","nameLocation":"6970:1:17","nodeType":"VariableDeclaration","scope":3342,"src":"6962:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3303,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3306,"initialValue":{"id":3305,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"6974:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:17"},"loopExpression":{"expression":{"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:17","subExpression":{"id":3310,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"6992:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3312,"nodeType":"ExpressionStatement","src":"6990:3:17"},"nodeType":"ForStatement","src":"6957:227:17"},{"expression":{"components":[{"hexValue":"74727565","id":3343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3344,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"7207:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3345,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3291,"id":3346,"nodeType":"Return","src":"7193:21:17"}]},"documentation":{"id":3279,"nodeType":"StructuredDocumentation","src":"6477:224:17","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3348,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:17","nodeType":"FunctionDefinition","parameters":{"id":3286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3281,"mutability":"mutable","name":"input","nameLocation":"6767:5:17","nodeType":"VariableDeclaration","scope":3348,"src":"6753:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3280,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3283,"mutability":"mutable","name":"begin","nameLocation":"6790:5:17","nodeType":"VariableDeclaration","scope":3348,"src":"6782:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3282,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3285,"mutability":"mutable","name":"end","nameLocation":"6813:3:17","nodeType":"VariableDeclaration","scope":3348,"src":"6805:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3284,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:17"},"returnParameters":{"id":3291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3288,"mutability":"mutable","name":"success","nameLocation":"6850:7:17","nodeType":"VariableDeclaration","scope":3348,"src":"6845:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3287,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3290,"mutability":"mutable","name":"value","nameLocation":"6867:5:17","nodeType":"VariableDeclaration","scope":3348,"src":"6859:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3289,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:17"},"scope":4207,"src":"6706:515:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3366,"nodeType":"Block","src":"7518:63:17","statements":[{"expression":{"arguments":[{"id":3357,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"7544:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3361,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"7560:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3359,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:17","typeDescriptions":{}}},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:17","memberName":"length","nodeType":"MemberAccess","src":"7554:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3356,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[3367,3398],"referencedDeclaration":3398,"src":"7535:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3355,"id":3365,"nodeType":"Return","src":"7528:46:17"}]},"documentation":{"id":3349,"nodeType":"StructuredDocumentation","src":"7227:216:17","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3367,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:17","nodeType":"FunctionDefinition","parameters":{"id":3352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3351,"mutability":"mutable","name":"input","nameLocation":"7480:5:17","nodeType":"VariableDeclaration","scope":3367,"src":"7466:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3350,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:17"},"returnParameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3367,"src":"7510:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3353,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:17"},"scope":4207,"src":"7448:133:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3397,"nodeType":"Block","src":"7986:151:17","statements":[{"assignments":[3380,3382],"declarations":[{"constant":false,"id":3380,"mutability":"mutable","name":"success","nameLocation":"8002:7:17","nodeType":"VariableDeclaration","scope":3397,"src":"7997:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3379,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3382,"mutability":"mutable","name":"value","nameLocation":"8018:5:17","nodeType":"VariableDeclaration","scope":3397,"src":"8011:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3381,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3388,"initialValue":{"arguments":[{"id":3384,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"8039:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3385,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"8046:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3386,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"8053:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3383,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[3419,3461],"referencedDeclaration":3461,"src":"8027:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:17"},{"condition":{"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:17","subExpression":{"id":3389,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"8072:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3394,"nodeType":"IfStatement","src":"8067:41:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3391,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"8088:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3393,"nodeType":"RevertStatement","src":"8081:27:17"}},{"expression":{"id":3395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"8125:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3378,"id":3396,"nodeType":"Return","src":"8118:12:17"}]},"documentation":{"id":3368,"nodeType":"StructuredDocumentation","src":"7587:296:17","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3398,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:17","nodeType":"FunctionDefinition","parameters":{"id":3375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3370,"mutability":"mutable","name":"input","nameLocation":"7920:5:17","nodeType":"VariableDeclaration","scope":3398,"src":"7906:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3369,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3372,"mutability":"mutable","name":"begin","nameLocation":"7935:5:17","nodeType":"VariableDeclaration","scope":3398,"src":"7927:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3374,"mutability":"mutable","name":"end","nameLocation":"7950:3:17","nodeType":"VariableDeclaration","scope":3398,"src":"7942:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3373,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:17"},"returnParameters":{"id":3378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3398,"src":"7978:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3376,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:17"},"scope":4207,"src":"7888:249:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3418,"nodeType":"Block","src":"8528:82:17","statements":[{"expression":{"arguments":[{"id":3409,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"8573:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3413,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"8589:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3411,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:17","typeDescriptions":{}}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:17","memberName":"length","nodeType":"MemberAccess","src":"8583:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3408,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"8545:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3407,"id":3417,"nodeType":"Return","src":"8538:65:17"}]},"documentation":{"id":3399,"nodeType":"StructuredDocumentation","src":"8143:287:17","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3419,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:17","nodeType":"FunctionDefinition","parameters":{"id":3402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3401,"mutability":"mutable","name":"input","nameLocation":"8470:5:17","nodeType":"VariableDeclaration","scope":3419,"src":"8456:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3400,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:17"},"returnParameters":{"id":3407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3404,"mutability":"mutable","name":"success","nameLocation":"8505:7:17","nodeType":"VariableDeclaration","scope":3419,"src":"8500:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3403,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3406,"mutability":"mutable","name":"value","nameLocation":"8521:5:17","nodeType":"VariableDeclaration","scope":3419,"src":"8514:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3405,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:17"},"scope":4207,"src":"8435:175:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":3424,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:17","nodeType":"VariableDeclaration","scope":4207,"src":"8616:50:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":3423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":3422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:17","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":3460,"nodeType":"Block","src":"9132:143:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3438,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"9146:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3441,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"9158:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3439,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:17","typeDescriptions":{}}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:17","memberName":"length","nodeType":"MemberAccess","src":"9152:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3445,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"9175:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3446,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"9183:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3453,"nodeType":"IfStatement","src":"9142:63:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3451,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3437,"id":3452,"nodeType":"Return","src":"9188:17:17"}},{"expression":{"arguments":[{"id":3455,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"9250:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3456,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"9257:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3457,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"9264:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3454,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"9222:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3437,"id":3459,"nodeType":"Return","src":"9215:53:17"}]},"documentation":{"id":3425,"nodeType":"StructuredDocumentation","src":"8673:303:17","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3461,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:17","nodeType":"FunctionDefinition","parameters":{"id":3432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3427,"mutability":"mutable","name":"input","nameLocation":"9025:5:17","nodeType":"VariableDeclaration","scope":3461,"src":"9011:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3426,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3429,"mutability":"mutable","name":"begin","nameLocation":"9048:5:17","nodeType":"VariableDeclaration","scope":3461,"src":"9040:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3428,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3431,"mutability":"mutable","name":"end","nameLocation":"9071:3:17","nodeType":"VariableDeclaration","scope":3461,"src":"9063:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3430,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:17"},"returnParameters":{"id":3437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3434,"mutability":"mutable","name":"success","nameLocation":"9109:7:17","nodeType":"VariableDeclaration","scope":3461,"src":"9104:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3433,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3436,"mutability":"mutable","name":"value","nameLocation":"9125:5:17","nodeType":"VariableDeclaration","scope":3461,"src":"9118:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3435,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:17"},"scope":4207,"src":"8981:294:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3581,"nodeType":"Block","src":"9675:812:17","statements":[{"assignments":[3476],"declarations":[{"constant":false,"id":3476,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:17","nodeType":"VariableDeclaration","scope":3581,"src":"9685:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3475,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3481,"initialValue":{"arguments":[{"id":3479,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"9713:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3477,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:17","typeDescriptions":{}}},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:17"},{"assignments":[3483],"declarations":[{"constant":false,"id":3483,"mutability":"mutable","name":"sign","nameLocation":"9783:4:17","nodeType":"VariableDeclaration","scope":3581,"src":"9776:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3482,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3499,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3484,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"9790:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3485,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"9799:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":3494,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"9847:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3495,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"9855:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3493,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"9824:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3491,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:17","typeDescriptions":{}}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:17","trueExpression":{"arguments":[{"hexValue":"30","id":3489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3487,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:17","typeDescriptions":{}}},"id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:17"},{"assignments":[3501],"declarations":[{"constant":false,"id":3501,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:17","nodeType":"VariableDeclaration","scope":3581,"src":"9943:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3500,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3508,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3502,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"9963:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":3504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3503,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:17","typeDescriptions":{}}},"id":3506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:17"},{"assignments":[3510],"declarations":[{"constant":false,"id":3510,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:17","nodeType":"VariableDeclaration","scope":3581,"src":"9992:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3509,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3517,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3511,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"10012:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":3514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":3513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3512,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:17","typeDescriptions":{}}},"id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:17"},{"assignments":[3519],"declarations":[{"constant":false,"id":3519,"mutability":"mutable","name":"offset","nameLocation":"10049:6:17","nodeType":"VariableDeclaration","scope":3581,"src":"10041:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3518,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3526,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3520,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"10059:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3521,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"10075:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"10058:37:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:17"},{"assignments":[3528,3530],"declarations":[{"constant":false,"id":3528,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:17","nodeType":"VariableDeclaration","scope":3581,"src":"10109:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3527,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3530,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:17","nodeType":"VariableDeclaration","scope":3581,"src":"10126:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3529,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3538,"initialValue":{"arguments":[{"id":3532,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"10159:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3533,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"10166:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3534,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"10174:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3536,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"10182:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3531,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3241,3278],"referencedDeclaration":3278,"src":"10146:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3539,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"10201:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3540,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"10215:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3541,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"10226:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3559,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"10343:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3560,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"10357:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3562,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"10373:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3563,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"10385:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3474,"id":3578,"nodeType":"Return","src":"10463:17:17"},"id":3579,"nodeType":"IfStatement","src":"10339:141:17","trueBody":{"id":3574,"nodeType":"Block","src":"10401:56:17","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":3569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3568,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3567,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:17","memberName":"min","nodeType":"MemberAccess","src":"10429:16:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3572,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3474,"id":3573,"nodeType":"Return","src":"10415:31:17"}]}},"id":3580,"nodeType":"IfStatement","src":"10197:283:17","trueBody":{"id":3558,"nodeType":"Block","src":"10242:91:17","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":3545,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"10270:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3553,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"10312:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3551,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:17","typeDescriptions":{}}},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:17","trueExpression":{"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:17","subExpression":{"arguments":[{"id":3548,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"10293:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3546,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:17","typeDescriptions":{}}},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3556,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3474,"id":3557,"nodeType":"Return","src":"10256:66:17"}]}}]},"documentation":{"id":3462,"nodeType":"StructuredDocumentation","src":"9281:223:17","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3582,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:17","nodeType":"FunctionDefinition","parameters":{"id":3469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3464,"mutability":"mutable","name":"input","nameLocation":"9569:5:17","nodeType":"VariableDeclaration","scope":3582,"src":"9555:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3463,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3466,"mutability":"mutable","name":"begin","nameLocation":"9592:5:17","nodeType":"VariableDeclaration","scope":3582,"src":"9584:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3468,"mutability":"mutable","name":"end","nameLocation":"9615:3:17","nodeType":"VariableDeclaration","scope":3582,"src":"9607:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3467,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:17"},"returnParameters":{"id":3474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3471,"mutability":"mutable","name":"success","nameLocation":"9652:7:17","nodeType":"VariableDeclaration","scope":3582,"src":"9647:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3470,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3473,"mutability":"mutable","name":"value","nameLocation":"9668:5:17","nodeType":"VariableDeclaration","scope":3582,"src":"9661:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3472,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:17"},"scope":4207,"src":"9509:978:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3600,"nodeType":"Block","src":"10832:67:17","statements":[{"expression":{"arguments":[{"id":3591,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"10862:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3595,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"10878:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3593,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:17","typeDescriptions":{}}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:17","memberName":"length","nodeType":"MemberAccess","src":"10872:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3590,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[3601,3632],"referencedDeclaration":3632,"src":"10849:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3589,"id":3599,"nodeType":"Return","src":"10842:50:17"}]},"documentation":{"id":3583,"nodeType":"StructuredDocumentation","src":"10493:259:17","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3601,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:17","nodeType":"FunctionDefinition","parameters":{"id":3586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3585,"mutability":"mutable","name":"input","nameLocation":"10793:5:17","nodeType":"VariableDeclaration","scope":3601,"src":"10779:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3584,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:17"},"returnParameters":{"id":3589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3601,"src":"10823:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3587,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:17"},"scope":4207,"src":"10757:142:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3631,"nodeType":"Block","src":"11320:156:17","statements":[{"assignments":[3614,3616],"declarations":[{"constant":false,"id":3614,"mutability":"mutable","name":"success","nameLocation":"11336:7:17","nodeType":"VariableDeclaration","scope":3631,"src":"11331:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3613,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3616,"mutability":"mutable","name":"value","nameLocation":"11353:5:17","nodeType":"VariableDeclaration","scope":3631,"src":"11345:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3615,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3622,"initialValue":{"arguments":[{"id":3618,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"11378:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3619,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"11385:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3620,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"11392:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3617,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3653,3690],"referencedDeclaration":3690,"src":"11362:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:17"},{"condition":{"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:17","subExpression":{"id":3623,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"11411:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3628,"nodeType":"IfStatement","src":"11406:41:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3625,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"11427:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3627,"nodeType":"RevertStatement","src":"11420:27:17"}},{"expression":{"id":3629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"11464:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3612,"id":3630,"nodeType":"Return","src":"11457:12:17"}]},"documentation":{"id":3602,"nodeType":"StructuredDocumentation","src":"10905:307:17","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3632,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:17","nodeType":"FunctionDefinition","parameters":{"id":3609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"input","nameLocation":"11253:5:17","nodeType":"VariableDeclaration","scope":3632,"src":"11239:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3603,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3606,"mutability":"mutable","name":"begin","nameLocation":"11268:5:17","nodeType":"VariableDeclaration","scope":3632,"src":"11260:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3605,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3608,"mutability":"mutable","name":"end","nameLocation":"11283:3:17","nodeType":"VariableDeclaration","scope":3632,"src":"11275:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3607,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:17"},"returnParameters":{"id":3612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3632,"src":"11311:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3610,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:17"},"scope":4207,"src":"11217:259:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3652,"nodeType":"Block","src":"11803:86:17","statements":[{"expression":{"arguments":[{"id":3643,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"11852:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3647,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"11868:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3645,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:17","typeDescriptions":{}}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:17","memberName":"length","nodeType":"MemberAccess","src":"11862:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3642,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"11820:31:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3641,"id":3651,"nodeType":"Return","src":"11813:69:17"}]},"documentation":{"id":3633,"nodeType":"StructuredDocumentation","src":"11482:218:17","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3653,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:17","nodeType":"FunctionDefinition","parameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3635,"mutability":"mutable","name":"input","nameLocation":"11744:5:17","nodeType":"VariableDeclaration","scope":3653,"src":"11730:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3634,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:17"},"returnParameters":{"id":3641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3638,"mutability":"mutable","name":"success","nameLocation":"11779:7:17","nodeType":"VariableDeclaration","scope":3653,"src":"11774:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3637,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3640,"mutability":"mutable","name":"value","nameLocation":"11796:5:17","nodeType":"VariableDeclaration","scope":3653,"src":"11788:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3639,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:17"},"scope":4207,"src":"11705:184:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3689,"nodeType":"Block","src":"12297:147:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3667,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"12311:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3670,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"12323:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3668,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:17","typeDescriptions":{}}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:17","memberName":"length","nodeType":"MemberAccess","src":"12317:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3674,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"12340:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3675,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"12348:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3682,"nodeType":"IfStatement","src":"12307:63:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3680,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3666,"id":3681,"nodeType":"Return","src":"12353:17:17"}},{"expression":{"arguments":[{"id":3684,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"12419:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3685,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"12426:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3686,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"12433:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3683,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"12387:31:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3666,"id":3688,"nodeType":"Return","src":"12380:57:17"}]},"documentation":{"id":3654,"nodeType":"StructuredDocumentation","src":"11895:241:17","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3690,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:17","nodeType":"FunctionDefinition","parameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3656,"mutability":"mutable","name":"input","nameLocation":"12189:5:17","nodeType":"VariableDeclaration","scope":3690,"src":"12175:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3655,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3658,"mutability":"mutable","name":"begin","nameLocation":"12212:5:17","nodeType":"VariableDeclaration","scope":3690,"src":"12204:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3657,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3660,"mutability":"mutable","name":"end","nameLocation":"12235:3:17","nodeType":"VariableDeclaration","scope":3690,"src":"12227:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3659,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:17"},"returnParameters":{"id":3666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"mutability":"mutable","name":"success","nameLocation":"12273:7:17","nodeType":"VariableDeclaration","scope":3690,"src":"12268:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3662,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3665,"mutability":"mutable","name":"value","nameLocation":"12290:5:17","nodeType":"VariableDeclaration","scope":3690,"src":"12282:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3664,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:17"},"scope":4207,"src":"12141:303:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3792,"nodeType":"Block","src":"12853:881:17","statements":[{"assignments":[3705],"declarations":[{"constant":false,"id":3705,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:17","nodeType":"VariableDeclaration","scope":3792,"src":"12863:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3704,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3710,"initialValue":{"arguments":[{"id":3708,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"12891:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3706,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:17","typeDescriptions":{}}},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:17"},{"assignments":[3712],"declarations":[{"constant":false,"id":3712,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:17","nodeType":"VariableDeclaration","scope":3792,"src":"12945:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3711,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3732,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3713,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"12963:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3714,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"12969:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3718,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3722,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"13013:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3723,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"13021:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3721,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"12990:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3719,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:17","typeDescriptions":{}}},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3726,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:17","typeDescriptions":{}}},"id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:17"},{"assignments":[3734],"declarations":[{"constant":false,"id":3734,"mutability":"mutable","name":"offset","nameLocation":"13133:6:17","nodeType":"VariableDeclaration","scope":3792,"src":"13125:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3733,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3740,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3735,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"13142:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"13142:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:17"},{"assignments":[3742],"declarations":[{"constant":false,"id":3742,"mutability":"mutable","name":"result","nameLocation":"13183:6:17","nodeType":"VariableDeclaration","scope":3792,"src":"13175:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3741,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3744,"initialValue":{"hexValue":"30","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:17"},{"body":{"id":3786,"nodeType":"Block","src":"13250:447:17","statements":[{"assignments":[3758],"declarations":[{"constant":false,"id":3758,"mutability":"mutable","name":"chr","nameLocation":"13270:3:17","nodeType":"VariableDeclaration","scope":3786,"src":"13264:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3757,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3768,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3763,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"13319:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3764,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"13327:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3762,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"13296:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3760,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:17","typeDescriptions":{}}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3759,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"13276:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3769,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"13349:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3776,"nodeType":"IfStatement","src":"13345:31:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3774,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3703,"id":3775,"nodeType":"Return","src":"13359:17:17"}},{"expression":{"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3777,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"13390:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3780,"nodeType":"ExpressionStatement","src":"13390:12:17"},{"id":3785,"nodeType":"UncheckedBlock","src":"13416:271:17","statements":[{"expression":{"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3781,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"13659:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3782,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"13669:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3784,"nodeType":"ExpressionStatement","src":"13659:13:17"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3751,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"13236:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3752,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"13240:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3787,"initializationExpression":{"assignments":[3746],"declarations":[{"constant":false,"id":3746,"mutability":"mutable","name":"i","nameLocation":"13216:1:17","nodeType":"VariableDeclaration","scope":3787,"src":"13208:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3745,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3750,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3747,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"13220:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3748,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"13228:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:17"},"loopExpression":{"expression":{"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:17","subExpression":{"id":3754,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"13247:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3756,"nodeType":"ExpressionStatement","src":"13245:3:17"},"nodeType":"ForStatement","src":"13203:494:17"},{"expression":{"components":[{"hexValue":"74727565","id":3788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3789,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"13720:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3703,"id":3791,"nodeType":"Return","src":"13706:21:17"}]},"documentation":{"id":3691,"nodeType":"StructuredDocumentation","src":"12450:227:17","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3793,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:17","nodeType":"FunctionDefinition","parameters":{"id":3698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"mutability":"mutable","name":"input","nameLocation":"12746:5:17","nodeType":"VariableDeclaration","scope":3793,"src":"12732:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3692,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3695,"mutability":"mutable","name":"begin","nameLocation":"12769:5:17","nodeType":"VariableDeclaration","scope":3793,"src":"12761:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3694,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3697,"mutability":"mutable","name":"end","nameLocation":"12792:3:17","nodeType":"VariableDeclaration","scope":3793,"src":"12784:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3696,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:17"},"returnParameters":{"id":3703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3700,"mutability":"mutable","name":"success","nameLocation":"12829:7:17","nodeType":"VariableDeclaration","scope":3793,"src":"12824:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3699,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3702,"mutability":"mutable","name":"value","nameLocation":"12846:5:17","nodeType":"VariableDeclaration","scope":3793,"src":"12838:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:17"},"scope":4207,"src":"12682:1052:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3811,"nodeType":"Block","src":"14032:67:17","statements":[{"expression":{"arguments":[{"id":3802,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"14062:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3806,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"14078:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3804,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:17","typeDescriptions":{}}},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:17","memberName":"length","nodeType":"MemberAccess","src":"14072:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3801,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3812,3843],"referencedDeclaration":3843,"src":"14049:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3800,"id":3810,"nodeType":"Return","src":"14042:50:17"}]},"documentation":{"id":3794,"nodeType":"StructuredDocumentation","src":"13740:212:17","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3812,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:17","nodeType":"FunctionDefinition","parameters":{"id":3797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3796,"mutability":"mutable","name":"input","nameLocation":"13993:5:17","nodeType":"VariableDeclaration","scope":3812,"src":"13979:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3795,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:17"},"returnParameters":{"id":3800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3812,"src":"14023:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3798,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:17"},"scope":4207,"src":"13957:142:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3842,"nodeType":"Block","src":"14472:165:17","statements":[{"assignments":[3825,3827],"declarations":[{"constant":false,"id":3825,"mutability":"mutable","name":"success","nameLocation":"14488:7:17","nodeType":"VariableDeclaration","scope":3842,"src":"14483:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3824,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3827,"mutability":"mutable","name":"value","nameLocation":"14505:5:17","nodeType":"VariableDeclaration","scope":3842,"src":"14497:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3826,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3833,"initialValue":{"arguments":[{"id":3829,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"14530:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3830,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"14537:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3831,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"14544:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3828,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3864,3968],"referencedDeclaration":3968,"src":"14514:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:17"},{"condition":{"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:17","subExpression":{"id":3834,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"14563:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3839,"nodeType":"IfStatement","src":"14558:50:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3836,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"14579:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3838,"nodeType":"RevertStatement","src":"14572:36:17"}},{"expression":{"id":3840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"14625:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3823,"id":3841,"nodeType":"Return","src":"14618:12:17"}]},"documentation":{"id":3813,"nodeType":"StructuredDocumentation","src":"14105:259:17","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3843,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:17","nodeType":"FunctionDefinition","parameters":{"id":3820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3815,"mutability":"mutable","name":"input","nameLocation":"14405:5:17","nodeType":"VariableDeclaration","scope":3843,"src":"14391:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3814,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3817,"mutability":"mutable","name":"begin","nameLocation":"14420:5:17","nodeType":"VariableDeclaration","scope":3843,"src":"14412:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3816,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3819,"mutability":"mutable","name":"end","nameLocation":"14435:3:17","nodeType":"VariableDeclaration","scope":3843,"src":"14427:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3818,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:17"},"returnParameters":{"id":3823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3843,"src":"14463:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3821,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:17"},"scope":4207,"src":"14369:268:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3863,"nodeType":"Block","src":"14944:70:17","statements":[{"expression":{"arguments":[{"id":3854,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"14977:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3858,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"14993:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3856,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:17","typeDescriptions":{}}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:17","memberName":"length","nodeType":"MemberAccess","src":"14987:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3853,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3864,3968],"referencedDeclaration":3968,"src":"14961:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3852,"id":3862,"nodeType":"Return","src":"14954:53:17"}]},"documentation":{"id":3844,"nodeType":"StructuredDocumentation","src":"14643:198:17","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":3864,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:17","nodeType":"FunctionDefinition","parameters":{"id":3847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3846,"mutability":"mutable","name":"input","nameLocation":"14885:5:17","nodeType":"VariableDeclaration","scope":3864,"src":"14871:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3845,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:17"},"returnParameters":{"id":3852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3849,"mutability":"mutable","name":"success","nameLocation":"14920:7:17","nodeType":"VariableDeclaration","scope":3864,"src":"14915:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3848,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3851,"mutability":"mutable","name":"value","nameLocation":"14937:5:17","nodeType":"VariableDeclaration","scope":3864,"src":"14929:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3850,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:17"},"scope":4207,"src":"14846:168:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3967,"nodeType":"Block","src":"15407:733:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3878,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"15421:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3881,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"15433:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3879,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:17","typeDescriptions":{}}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:17","memberName":"length","nodeType":"MemberAccess","src":"15427:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3885,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"15450:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3886,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"15458:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3896,"nodeType":"IfStatement","src":"15417:72:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3890,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:17","typeDescriptions":{}}},"id":3893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3894,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3877,"id":3895,"nodeType":"Return","src":"15463:26:17"}},{"assignments":[3898],"declarations":[{"constant":false,"id":3898,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:17","nodeType":"VariableDeclaration","scope":3967,"src":"15500:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3897,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3921,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3899,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"15518:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3900,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"15524:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3904,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3910,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"15574:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3908,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:17","typeDescriptions":{}}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3912,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"15582:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3907,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"15545:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3905,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:17","typeDescriptions":{}}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3915,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:17","typeDescriptions":{}}},"id":3918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:17"},{"assignments":[3923],"declarations":[{"constant":false,"id":3923,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:17","nodeType":"VariableDeclaration","scope":3967,"src":"15686:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3922,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3931,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:17","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3925,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"15716:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"15716:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3932,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"15803:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3933,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"15809:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3935,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"15818:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3965,"nodeType":"Block","src":"16083:51:17","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3959,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:17","typeDescriptions":{}}},"id":3962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3963,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3877,"id":3964,"nodeType":"Return","src":"16097:26:17"}]},"id":3966,"nodeType":"IfStatement","src":"15799:335:17","trueBody":{"id":3957,"nodeType":"Block","src":"15834:243:17","statements":[{"assignments":[3938,3940],"declarations":[{"constant":false,"id":3938,"mutability":"mutable","name":"s","nameLocation":"15955:1:17","nodeType":"VariableDeclaration","scope":3957,"src":"15950:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3937,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3940,"mutability":"mutable","name":"v","nameLocation":"15966:1:17","nodeType":"VariableDeclaration","scope":3957,"src":"15958:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3939,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3946,"initialValue":{"arguments":[{"id":3942,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"16003:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3943,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"16010:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3944,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"16017:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3941,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"15971:31:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:17"},{"expression":{"components":[{"id":3947,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"16043:1:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3952,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"16062:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3950,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:17","typeDescriptions":{}}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3948,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:17","typeDescriptions":{}}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3955,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3877,"id":3956,"nodeType":"Return","src":"16035:31:17"}]}}]},"documentation":{"id":3865,"nodeType":"StructuredDocumentation","src":"15020:226:17","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":3968,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:17","nodeType":"FunctionDefinition","parameters":{"id":3872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3867,"mutability":"mutable","name":"input","nameLocation":"15299:5:17","nodeType":"VariableDeclaration","scope":3968,"src":"15285:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3866,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3869,"mutability":"mutable","name":"begin","nameLocation":"15322:5:17","nodeType":"VariableDeclaration","scope":3968,"src":"15314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3868,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3871,"mutability":"mutable","name":"end","nameLocation":"15345:3:17","nodeType":"VariableDeclaration","scope":3968,"src":"15337:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3870,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:17"},"returnParameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3874,"mutability":"mutable","name":"success","nameLocation":"15383:7:17","nodeType":"VariableDeclaration","scope":3968,"src":"15378:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3873,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3876,"mutability":"mutable","name":"value","nameLocation":"15400:5:17","nodeType":"VariableDeclaration","scope":3968,"src":"15392:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3875,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:17"},"scope":4207,"src":"15251:889:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4027,"nodeType":"Block","src":"16209:461:17","statements":[{"assignments":[3976],"declarations":[{"constant":false,"id":3976,"mutability":"mutable","name":"value","nameLocation":"16225:5:17","nodeType":"VariableDeclaration","scope":4027,"src":"16219:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3975,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3981,"initialValue":{"arguments":[{"id":3979,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"16239:3:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3977,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:17","typeDescriptions":{}}},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:17"},{"id":4024,"nodeType":"UncheckedBlock","src":"16403:238:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"16431:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:17","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"16445:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:17","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"16491:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"16505:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:17","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"16552:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":4005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"16566:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":4008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:17","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":4017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4016,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4015,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:17","memberName":"max","nodeType":"MemberAccess","src":"16615:15:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3974,"id":4020,"nodeType":"Return","src":"16608:22:17"},"id":4021,"nodeType":"IfStatement","src":"16548:82:17","trueBody":{"expression":{"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"16578:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:17","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4014,"nodeType":"ExpressionStatement","src":"16578:11:17"}},"id":4022,"nodeType":"IfStatement","src":"16487:143:17","trueBody":{"expression":{"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"16518:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":4001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:17","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4003,"nodeType":"ExpressionStatement","src":"16518:11:17"}},"id":4023,"nodeType":"IfStatement","src":"16427:203:17","trueBody":{"expression":{"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"16457:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:17","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3992,"nodeType":"ExpressionStatement","src":"16457:11:17"}}]},{"expression":{"id":4025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"16658:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3974,"id":4026,"nodeType":"Return","src":"16651:12:17"}]},"id":4028,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:17","nodeType":"FunctionDefinition","parameters":{"id":3971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3970,"mutability":"mutable","name":"chr","nameLocation":"16175:3:17","nodeType":"VariableDeclaration","scope":4028,"src":"16168:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3969,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:17"},"returnParameters":{"id":3974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4028,"src":"16202:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3972,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:17"},"scope":4207,"src":"16146:524:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4193,"nodeType":"Block","src":"17336:1331:17","statements":[{"assignments":[4037],"declarations":[{"constant":false,"id":4037,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:17","nodeType":"VariableDeclaration","scope":4193,"src":"17346:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4036,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4042,"initialValue":{"arguments":[{"id":4040,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"17374:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4038,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:17","typeDescriptions":{}}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:17"},{"assignments":[4044],"declarations":[{"constant":false,"id":4044,"mutability":"mutable","name":"output","nameLocation":"17403:6:17","nodeType":"VariableDeclaration","scope":4193,"src":"17390:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4043,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4052,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4048,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"17426:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:17","memberName":"length","nodeType":"MemberAccess","src":"17426:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4045,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:17"},{"assignments":[4054],"declarations":[{"constant":false,"id":4054,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:17","nodeType":"VariableDeclaration","scope":4193,"src":"17473:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4056,"initialValue":{"hexValue":"30","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:17"},{"body":{"id":4185,"nodeType":"Block","src":"17548:854:17","statements":[{"assignments":[4068],"declarations":[{"constant":false,"id":4068,"mutability":"mutable","name":"char","nameLocation":"17569:4:17","nodeType":"VariableDeclaration","scope":4185,"src":"17562:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4067,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":4076,"initialValue":{"arguments":[{"arguments":[{"id":4072,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"17606:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4073,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"17614:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4071,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"17583:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4069,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:17","typeDescriptions":{}}},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:17"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4077,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"17637:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":4081,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"17672:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4079,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:17","typeDescriptions":{}}},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4084,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4089,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4183,"nodeType":"Block","src":"18330:62:17","statements":[{"expression":{"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4176,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"18348:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4179,"indexExpression":{"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:17","subExpression":{"id":4177,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"18355:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4180,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"18373:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4182,"nodeType":"ExpressionStatement","src":"18348:29:17"}]},"id":4184,"nodeType":"IfStatement","src":"17631:761:17","trueBody":{"id":4175,"nodeType":"Block","src":"17687:637:17","statements":[{"expression":{"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4090,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"17705:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4093,"indexExpression":{"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:17","subExpression":{"id":4091,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"17712:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":4094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4096,"nodeType":"ExpressionStatement","src":"17705:29:17"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4097,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"17756:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":4098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4107,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"17825:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:17","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4117,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"17894:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":4118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4127,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"17963:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":4128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:17","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4137,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"18032:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":4138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:17","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4147,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"18101:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":4148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:17","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4157,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"18171:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:17","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4168,"nodeType":"IfStatement","src":"18167:143:17","trueBody":{"id":4167,"nodeType":"Block","src":"18185:125:17","statements":[{"expression":{"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4160,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"18263:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4163,"indexExpression":{"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:17","subExpression":{"id":4161,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"18270:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":4164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4166,"nodeType":"ExpressionStatement","src":"18263:28:17"}]}},"id":4169,"nodeType":"IfStatement","src":"18097:213:17","trueBody":{"expression":{"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4150,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"18115:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4153,"indexExpression":{"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:17","subExpression":{"id":4151,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"18122:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":4154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4156,"nodeType":"ExpressionStatement","src":"18115:29:17"}},"id":4170,"nodeType":"IfStatement","src":"18028:282:17","trueBody":{"expression":{"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4140,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"18046:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4143,"indexExpression":{"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:17","subExpression":{"id":4141,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"18053:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":4144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4146,"nodeType":"ExpressionStatement","src":"18046:28:17"}},"id":4171,"nodeType":"IfStatement","src":"17959:351:17","trueBody":{"expression":{"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4130,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"17977:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4133,"indexExpression":{"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:17","subExpression":{"id":4131,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"17984:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":4134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4136,"nodeType":"ExpressionStatement","src":"17977:28:17"}},"id":4172,"nodeType":"IfStatement","src":"17890:420:17","trueBody":{"expression":{"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4120,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"17908:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4123,"indexExpression":{"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:17","subExpression":{"id":4121,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"17915:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4126,"nodeType":"ExpressionStatement","src":"17908:28:17"}},"id":4173,"nodeType":"IfStatement","src":"17821:489:17","trueBody":{"expression":{"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4110,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"17839:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4113,"indexExpression":{"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:17","subExpression":{"id":4111,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"17846:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":4114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4116,"nodeType":"ExpressionStatement","src":"17839:28:17"}},"id":4174,"nodeType":"IfStatement","src":"17752:558:17","trueBody":{"expression":{"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4100,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"17770:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4103,"indexExpression":{"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:17","subExpression":{"id":4101,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"17777:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4106,"nodeType":"ExpressionStatement","src":"17770:28:17"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4060,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"17524:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4061,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"17528:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:17","memberName":"length","nodeType":"MemberAccess","src":"17528:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4186,"initializationExpression":{"assignments":[4058],"declarations":[{"constant":false,"id":4058,"mutability":"mutable","name":"i","nameLocation":"17521:1:17","nodeType":"VariableDeclaration","scope":4186,"src":"17513:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4057,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4059,"nodeType":"VariableDeclarationStatement","src":"17513:9:17"},"loopExpression":{"expression":{"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:17","subExpression":{"id":4064,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"17545:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4066,"nodeType":"ExpressionStatement","src":"17543:3:17"},"nodeType":"ForStatement","src":"17508:894:17"},{"AST":{"nodeType":"YulBlock","src":"18500:129:17","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18521:6:17"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18529:12:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18514:6:17"},"nodeType":"YulFunctionCall","src":"18514:28:17"},"nodeType":"YulExpressionStatement","src":"18514:28:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18562:4:17","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18572:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18584:1:17","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18591:1:17","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18598:12:17"},{"kind":"number","nodeType":"YulLiteral","src":"18612:2:17","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18594:3:17"},"nodeType":"YulFunctionCall","src":"18594:21:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18587:3:17"},"nodeType":"YulFunctionCall","src":"18587:29:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18580:3:17"},"nodeType":"YulFunctionCall","src":"18580:37:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18568:3:17"},"nodeType":"YulFunctionCall","src":"18568:50:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18555:6:17"},"nodeType":"YulFunctionCall","src":"18555:64:17"},"nodeType":"YulExpressionStatement","src":"18555:64:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":4044,"isOffset":false,"isSlot":false,"src":"18521:6:17","valueSize":1},{"declaration":4044,"isOffset":false,"isSlot":false,"src":"18572:6:17","valueSize":1},{"declaration":4054,"isOffset":false,"isSlot":false,"src":"18529:12:17","valueSize":1},{"declaration":4054,"isOffset":false,"isSlot":false,"src":"18598:12:17","valueSize":1}],"flags":["memory-safe"],"id":4187,"nodeType":"InlineAssembly","src":"18475:154:17"},{"expression":{"arguments":[{"id":4190,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"18653:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4188,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:17","typeDescriptions":{}}},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4035,"id":4192,"nodeType":"Return","src":"18639:21:17"}]},"documentation":{"id":4029,"nodeType":"StructuredDocumentation","src":"16676:576:17","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":4194,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:17","nodeType":"FunctionDefinition","parameters":{"id":4032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4031,"mutability":"mutable","name":"input","nameLocation":"17291:5:17","nodeType":"VariableDeclaration","scope":4194,"src":"17277:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4030,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:17"},"returnParameters":{"id":4035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4194,"src":"17321:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4033,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:17"},"scope":4207,"src":"17257:1410:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4205,"nodeType":"Block","src":"19052:225:17","statements":[{"AST":{"nodeType":"YulBlock","src":"19201:70:17","statements":[{"nodeType":"YulAssignment","src":"19215:46:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19238:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"19246:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19234:3:17"},"nodeType":"YulFunctionCall","src":"19234:17:17"},{"name":"offset","nodeType":"YulIdentifier","src":"19253:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19230:3:17"},"nodeType":"YulFunctionCall","src":"19230:30:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19224:5:17"},"nodeType":"YulFunctionCall","src":"19224:37:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19215:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4197,"isOffset":false,"isSlot":false,"src":"19238:6:17","valueSize":1},{"declaration":4199,"isOffset":false,"isSlot":false,"src":"19253:6:17","valueSize":1},{"declaration":4202,"isOffset":false,"isSlot":false,"src":"19215:5:17","valueSize":1}],"flags":["memory-safe"],"id":4204,"nodeType":"InlineAssembly","src":"19176:95:17"}]},"documentation":{"id":4195,"nodeType":"StructuredDocumentation","src":"18673:268:17","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":4206,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:17","nodeType":"FunctionDefinition","parameters":{"id":4200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4197,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:17","nodeType":"VariableDeclaration","scope":4206,"src":"18978:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4196,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4199,"mutability":"mutable","name":"offset","nameLocation":"19007:6:17","nodeType":"VariableDeclaration","scope":4206,"src":"18999:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4198,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:17"},"returnParameters":{"id":4203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4202,"mutability":"mutable","name":"value","nameLocation":"19045:5:17","nodeType":"VariableDeclaration","scope":4206,"src":"19037:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:17"},"scope":4207,"src":"18946:331:17","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4208,"src":"297:18982:17","usedErrors":[2865,2868,2871],"usedEvents":[]}],"src":"101:19179:17"},"id":17},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4231],"IERC165":[4243]},"id":4232,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4209,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4211,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4232,"sourceUnit":4244,"src":"140:38:18","symbolAliases":[{"foreign":{"id":4210,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"148:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4213,"name":"IERC165","nameLocations":["688:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4243,"src":"688:7:18"},"id":4214,"nodeType":"InheritanceSpecifier","src":"688:7:18"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4212,"nodeType":"StructuredDocumentation","src":"180:479:18","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4231,"linearizedBaseContracts":[4231,4243],"name":"ERC165","nameLocation":"678:6:18","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4242],"body":{"id":4229,"nodeType":"Block","src":"812:64:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4222,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"829:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4224,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"849:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4243_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4243_$","typeString":"type(contract IERC165)"}],"id":4223,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4243","typeString":"type(contract IERC165)"}},"id":4226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:18","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4221,"id":4228,"nodeType":"Return","src":"822:47:18"}]},"documentation":{"id":4215,"nodeType":"StructuredDocumentation","src":"702:23:18","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":4230,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:18","nodeType":"FunctionDefinition","parameters":{"id":4218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4217,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:18","nodeType":"VariableDeclaration","scope":4230,"src":"757:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4216,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:18"},"returnParameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4230,"src":"806:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4219,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:18"},"scope":4231,"src":"730:146:18","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4232,"src":"660:218:18","usedErrors":[],"usedEvents":[]}],"src":"114:765:18"},"id":18},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4243]},"id":4244,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4233,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4234,"nodeType":"StructuredDocumentation","src":"142:280:19","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4243,"linearizedBaseContracts":[4243],"name":"IERC165","nameLocation":"433:7:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4235,"nodeType":"StructuredDocumentation","src":"447:340:19","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4242,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:19","nodeType":"FunctionDefinition","parameters":{"id":4238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4237,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:19","nodeType":"VariableDeclaration","scope":4242,"src":"819:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4236,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:19"},"returnParameters":{"id":4241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4242,"src":"862:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4239,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:19"},"scope":4243,"src":"792:76:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4244,"src":"423:447:19","usedErrors":[],"usedEvents":[]}],"src":"115:756:19"},"id":19},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5864],"Panic":[2736],"SafeCast":[7629]},"id":5865,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4245,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4247,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5865,"sourceUnit":2737,"src":"129:35:20","symbolAliases":[{"foreign":{"id":4246,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"137:5:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4249,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5865,"sourceUnit":7630,"src":"165:40:20","symbolAliases":[{"foreign":{"id":4248,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"173:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4250,"nodeType":"StructuredDocumentation","src":"207:73:20","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5864,"linearizedBaseContracts":[5864],"name":"Math","nameLocation":"289:4:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4255,"members":[{"id":4251,"name":"Floor","nameLocation":"324:5:20","nodeType":"EnumValue","src":"324:5:20"},{"id":4252,"name":"Ceil","nameLocation":"367:4:20","nodeType":"EnumValue","src":"367:4:20"},{"id":4253,"name":"Trunc","nameLocation":"409:5:20","nodeType":"EnumValue","src":"409:5:20"},{"id":4254,"name":"Expand","nameLocation":"439:6:20","nodeType":"EnumValue","src":"439:6:20"}],"name":"Rounding","nameLocation":"305:8:20","nodeType":"EnumDefinition","src":"300:169:20"},{"body":{"id":4268,"nodeType":"Block","src":"731:112:20","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:20","statements":[{"nodeType":"YulAssignment","src":"780:16:20","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:20"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:20"},"nodeType":"YulFunctionCall","src":"787:9:20"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:20"}]},{"nodeType":"YulAssignment","src":"809:18:20","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:20"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:20"},"nodeType":"YulFunctionCall","src":"817:10:20"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4258,"isOffset":false,"isSlot":false,"src":"791:1:20","valueSize":1},{"declaration":4258,"isOffset":false,"isSlot":false,"src":"825:1:20","valueSize":1},{"declaration":4260,"isOffset":false,"isSlot":false,"src":"794:1:20","valueSize":1},{"declaration":4263,"isOffset":false,"isSlot":false,"src":"809:4:20","valueSize":1},{"declaration":4265,"isOffset":false,"isSlot":false,"src":"780:3:20","valueSize":1},{"declaration":4265,"isOffset":false,"isSlot":false,"src":"820:3:20","valueSize":1}],"flags":["memory-safe"],"id":4267,"nodeType":"InlineAssembly","src":"741:96:20"}]},"documentation":{"id":4256,"nodeType":"StructuredDocumentation","src":"475:163:20","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":4269,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:20","nodeType":"FunctionDefinition","parameters":{"id":4261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4258,"mutability":"mutable","name":"a","nameLocation":"667:1:20","nodeType":"VariableDeclaration","scope":4269,"src":"659:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4257,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4260,"mutability":"mutable","name":"b","nameLocation":"678:1:20","nodeType":"VariableDeclaration","scope":4269,"src":"670:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4259,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:20"},"returnParameters":{"id":4266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4263,"mutability":"mutable","name":"high","nameLocation":"712:4:20","nodeType":"VariableDeclaration","scope":4269,"src":"704:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4262,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4265,"mutability":"mutable","name":"low","nameLocation":"726:3:20","nodeType":"VariableDeclaration","scope":4269,"src":"718:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4264,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:20"},"scope":5864,"src":"643:200:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4282,"nodeType":"Block","src":"1115:462:20","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:20","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:20"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:20"},"nodeType":"YulFunctionCall","src":"1474:6:20"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:20"},"nodeType":"YulFunctionCall","src":"1461:20:20"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:20","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:20","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:20"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:20"},"nodeType":"YulFunctionCall","src":"1501:9:20"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:20"}]},{"nodeType":"YulAssignment","src":"1523:38:20","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:20"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:20"},"nodeType":"YulFunctionCall","src":"1535:12:20"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:20"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:20"},"nodeType":"YulFunctionCall","src":"1549:11:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:20"},"nodeType":"YulFunctionCall","src":"1531:30:20"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4272,"isOffset":false,"isSlot":false,"src":"1468:1:20","valueSize":1},{"declaration":4272,"isOffset":false,"isSlot":false,"src":"1505:1:20","valueSize":1},{"declaration":4274,"isOffset":false,"isSlot":false,"src":"1471:1:20","valueSize":1},{"declaration":4274,"isOffset":false,"isSlot":false,"src":"1508:1:20","valueSize":1},{"declaration":4277,"isOffset":false,"isSlot":false,"src":"1523:4:20","valueSize":1},{"declaration":4279,"isOffset":false,"isSlot":false,"src":"1494:3:20","valueSize":1},{"declaration":4279,"isOffset":false,"isSlot":false,"src":"1543:3:20","valueSize":1},{"declaration":4279,"isOffset":false,"isSlot":false,"src":"1556:3:20","valueSize":1}],"flags":["memory-safe"],"id":4281,"nodeType":"InlineAssembly","src":"1412:159:20"}]},"documentation":{"id":4270,"nodeType":"StructuredDocumentation","src":"849:173:20","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":4283,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:20","nodeType":"FunctionDefinition","parameters":{"id":4275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4272,"mutability":"mutable","name":"a","nameLocation":"1051:1:20","nodeType":"VariableDeclaration","scope":4283,"src":"1043:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4271,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4274,"mutability":"mutable","name":"b","nameLocation":"1062:1:20","nodeType":"VariableDeclaration","scope":4283,"src":"1054:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4273,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:20"},"returnParameters":{"id":4280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4277,"mutability":"mutable","name":"high","nameLocation":"1096:4:20","nodeType":"VariableDeclaration","scope":4283,"src":"1088:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4279,"mutability":"mutable","name":"low","nameLocation":"1110:3:20","nodeType":"VariableDeclaration","scope":4283,"src":"1102:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:20"},"scope":5864,"src":"1027:550:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4317,"nodeType":"Block","src":"1784:149:20","statements":[{"id":4316,"nodeType":"UncheckedBlock","src":"1794:133:20","statements":[{"assignments":[4296],"declarations":[{"constant":false,"id":4296,"mutability":"mutable","name":"c","nameLocation":"1826:1:20","nodeType":"VariableDeclaration","scope":4316,"src":"1818:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4300,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4297,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"1830:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4298,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"1834:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:20"},{"expression":{"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4301,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"1849:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4302,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"1859:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4303,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"1864:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4306,"nodeType":"ExpressionStatement","src":"1849:16:20"},{"expression":{"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4307,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"1879:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4308,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"1888:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4311,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"1908:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4309,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"1892:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"1892:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4315,"nodeType":"ExpressionStatement","src":"1879:37:20"}]}]},"documentation":{"id":4284,"nodeType":"StructuredDocumentation","src":"1583:105:20","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":4318,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:20","nodeType":"FunctionDefinition","parameters":{"id":4289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4286,"mutability":"mutable","name":"a","nameLocation":"1717:1:20","nodeType":"VariableDeclaration","scope":4318,"src":"1709:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4285,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4288,"mutability":"mutable","name":"b","nameLocation":"1728:1:20","nodeType":"VariableDeclaration","scope":4318,"src":"1720:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4287,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:20"},"returnParameters":{"id":4294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4291,"mutability":"mutable","name":"success","nameLocation":"1759:7:20","nodeType":"VariableDeclaration","scope":4318,"src":"1754:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4290,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4293,"mutability":"mutable","name":"result","nameLocation":"1776:6:20","nodeType":"VariableDeclaration","scope":4318,"src":"1768:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4292,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:20"},"scope":5864,"src":"1693:240:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4352,"nodeType":"Block","src":"2143:149:20","statements":[{"id":4351,"nodeType":"UncheckedBlock","src":"2153:133:20","statements":[{"assignments":[4331],"declarations":[{"constant":false,"id":4331,"mutability":"mutable","name":"c","nameLocation":"2185:1:20","nodeType":"VariableDeclaration","scope":4351,"src":"2177:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4330,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4335,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4332,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"2189:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4333,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"2193:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:20"},{"expression":{"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4336,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"2208:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4337,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4331,"src":"2218:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4338,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"2223:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4341,"nodeType":"ExpressionStatement","src":"2208:16:20"},{"expression":{"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4342,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"2238:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4343,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4331,"src":"2247:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4346,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"2267:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4344,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"2251:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"2251:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4350,"nodeType":"ExpressionStatement","src":"2238:37:20"}]}]},"documentation":{"id":4319,"nodeType":"StructuredDocumentation","src":"1939:108:20","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4353,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:20","nodeType":"FunctionDefinition","parameters":{"id":4324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4321,"mutability":"mutable","name":"a","nameLocation":"2076:1:20","nodeType":"VariableDeclaration","scope":4353,"src":"2068:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4320,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4323,"mutability":"mutable","name":"b","nameLocation":"2087:1:20","nodeType":"VariableDeclaration","scope":4353,"src":"2079:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4322,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:20"},"returnParameters":{"id":4329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4326,"mutability":"mutable","name":"success","nameLocation":"2118:7:20","nodeType":"VariableDeclaration","scope":4353,"src":"2113:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4325,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4328,"mutability":"mutable","name":"result","nameLocation":"2135:6:20","nodeType":"VariableDeclaration","scope":4353,"src":"2127:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4327,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:20"},"scope":5864,"src":"2052:240:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4382,"nodeType":"Block","src":"2505:391:20","statements":[{"id":4381,"nodeType":"UncheckedBlock","src":"2515:375:20","statements":[{"assignments":[4366],"declarations":[{"constant":false,"id":4366,"mutability":"mutable","name":"c","nameLocation":"2547:1:20","nodeType":"VariableDeclaration","scope":4381,"src":"2539:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4365,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4370,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4367,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"2551:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4368,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"2555:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:20"},{"AST":{"nodeType":"YulBlock","src":"2595:188:20","statements":[{"nodeType":"YulAssignment","src":"2727:42:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:20"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:20"},"nodeType":"YulFunctionCall","src":"2744:9:20"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:20"},"nodeType":"YulFunctionCall","src":"2741:16:20"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:20"},"nodeType":"YulFunctionCall","src":"2759:9:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:20"},"nodeType":"YulFunctionCall","src":"2738:31:20"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4356,"isOffset":false,"isSlot":false,"src":"2751:1:20","valueSize":1},{"declaration":4356,"isOffset":false,"isSlot":false,"src":"2766:1:20","valueSize":1},{"declaration":4358,"isOffset":false,"isSlot":false,"src":"2755:1:20","valueSize":1},{"declaration":4366,"isOffset":false,"isSlot":false,"src":"2748:1:20","valueSize":1},{"declaration":4361,"isOffset":false,"isSlot":false,"src":"2727:7:20","valueSize":1}],"flags":["memory-safe"],"id":4371,"nodeType":"InlineAssembly","src":"2570:213:20"},{"expression":{"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4372,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"2842:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4373,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"2851:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4376,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"2871:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4374,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"2855:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"2855:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4380,"nodeType":"ExpressionStatement","src":"2842:37:20"}]}]},"documentation":{"id":4354,"nodeType":"StructuredDocumentation","src":"2298:111:20","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":4383,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:20","nodeType":"FunctionDefinition","parameters":{"id":4359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4356,"mutability":"mutable","name":"a","nameLocation":"2438:1:20","nodeType":"VariableDeclaration","scope":4383,"src":"2430:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4355,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4358,"mutability":"mutable","name":"b","nameLocation":"2449:1:20","nodeType":"VariableDeclaration","scope":4383,"src":"2441:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4357,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:20"},"returnParameters":{"id":4364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4361,"mutability":"mutable","name":"success","nameLocation":"2480:7:20","nodeType":"VariableDeclaration","scope":4383,"src":"2475:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4360,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4363,"mutability":"mutable","name":"result","nameLocation":"2497:6:20","nodeType":"VariableDeclaration","scope":4383,"src":"2489:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4362,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:20"},"scope":5864,"src":"2414:482:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4403,"nodeType":"Block","src":"3111:231:20","statements":[{"id":4402,"nodeType":"UncheckedBlock","src":"3121:215:20","statements":[{"expression":{"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4395,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"3145:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4396,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"3155:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4400,"nodeType":"ExpressionStatement","src":"3145:15:20"},{"AST":{"nodeType":"YulBlock","src":"3199:127:20","statements":[{"nodeType":"YulAssignment","src":"3293:19:20","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:20"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:20"},"nodeType":"YulFunctionCall","src":"3303:9:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4386,"isOffset":false,"isSlot":false,"src":"3307:1:20","valueSize":1},{"declaration":4388,"isOffset":false,"isSlot":false,"src":"3310:1:20","valueSize":1},{"declaration":4393,"isOffset":false,"isSlot":false,"src":"3293:6:20","valueSize":1}],"flags":["memory-safe"],"id":4401,"nodeType":"InlineAssembly","src":"3174:152:20"}]}]},"documentation":{"id":4384,"nodeType":"StructuredDocumentation","src":"2902:113:20","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4404,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:20","nodeType":"FunctionDefinition","parameters":{"id":4389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4386,"mutability":"mutable","name":"a","nameLocation":"3044:1:20","nodeType":"VariableDeclaration","scope":4404,"src":"3036:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4385,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4388,"mutability":"mutable","name":"b","nameLocation":"3055:1:20","nodeType":"VariableDeclaration","scope":4404,"src":"3047:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4387,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:20"},"returnParameters":{"id":4394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4391,"mutability":"mutable","name":"success","nameLocation":"3086:7:20","nodeType":"VariableDeclaration","scope":4404,"src":"3081:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4390,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4393,"mutability":"mutable","name":"result","nameLocation":"3103:6:20","nodeType":"VariableDeclaration","scope":4404,"src":"3095:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4392,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:20"},"scope":5864,"src":"3020:322:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4424,"nodeType":"Block","src":"3567:231:20","statements":[{"id":4423,"nodeType":"UncheckedBlock","src":"3577:215:20","statements":[{"expression":{"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4416,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"3601:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4417,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"3611:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4421,"nodeType":"ExpressionStatement","src":"3601:15:20"},{"AST":{"nodeType":"YulBlock","src":"3655:127:20","statements":[{"nodeType":"YulAssignment","src":"3749:19:20","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:20"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:20"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:20"},"nodeType":"YulFunctionCall","src":"3759:9:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4407,"isOffset":false,"isSlot":false,"src":"3763:1:20","valueSize":1},{"declaration":4409,"isOffset":false,"isSlot":false,"src":"3766:1:20","valueSize":1},{"declaration":4414,"isOffset":false,"isSlot":false,"src":"3749:6:20","valueSize":1}],"flags":["memory-safe"],"id":4422,"nodeType":"InlineAssembly","src":"3630:152:20"}]}]},"documentation":{"id":4405,"nodeType":"StructuredDocumentation","src":"3348:123:20","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4425,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:20","nodeType":"FunctionDefinition","parameters":{"id":4410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4407,"mutability":"mutable","name":"a","nameLocation":"3500:1:20","nodeType":"VariableDeclaration","scope":4425,"src":"3492:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4406,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4409,"mutability":"mutable","name":"b","nameLocation":"3511:1:20","nodeType":"VariableDeclaration","scope":4425,"src":"3503:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4408,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:20"},"returnParameters":{"id":4415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4412,"mutability":"mutable","name":"success","nameLocation":"3542:7:20","nodeType":"VariableDeclaration","scope":4425,"src":"3537:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4411,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4414,"mutability":"mutable","name":"result","nameLocation":"3559:6:20","nodeType":"VariableDeclaration","scope":4425,"src":"3551:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4413,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:20"},"scope":5864,"src":"3476:322:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4454,"nodeType":"Block","src":"3989:122:20","statements":[{"assignments":[4436,4438],"declarations":[{"constant":false,"id":4436,"mutability":"mutable","name":"success","nameLocation":"4005:7:20","nodeType":"VariableDeclaration","scope":4454,"src":"4000:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4435,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4438,"mutability":"mutable","name":"result","nameLocation":"4022:6:20","nodeType":"VariableDeclaration","scope":4454,"src":"4014:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4437,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4443,"initialValue":{"arguments":[{"id":4440,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4428,"src":"4039:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4441,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"4042:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4439,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"4032:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:20"},{"expression":{"arguments":[{"id":4445,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"4069:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4446,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"4078:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4448,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4447,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:20","memberName":"max","nodeType":"MemberAccess","src":"4086:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4444,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"4061:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4434,"id":4453,"nodeType":"Return","src":"4054:50:20"}]},"documentation":{"id":4426,"nodeType":"StructuredDocumentation","src":"3804:103:20","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4455,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:20","nodeType":"FunctionDefinition","parameters":{"id":4431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4428,"mutability":"mutable","name":"a","nameLocation":"3943:1:20","nodeType":"VariableDeclaration","scope":4455,"src":"3935:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4427,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4430,"mutability":"mutable","name":"b","nameLocation":"3954:1:20","nodeType":"VariableDeclaration","scope":4455,"src":"3946:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4429,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:20"},"returnParameters":{"id":4434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4455,"src":"3980:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4432,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:20"},"scope":5864,"src":"3912:199:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4474,"nodeType":"Block","src":"4294:73:20","statements":[{"assignments":[null,4466],"declarations":[null,{"constant":false,"id":4466,"mutability":"mutable","name":"result","nameLocation":"4315:6:20","nodeType":"VariableDeclaration","scope":4474,"src":"4307:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4465,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4471,"initialValue":{"arguments":[{"id":4468,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"4332:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4469,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"4335:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4467,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"4325:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:20"},{"expression":{"id":4472,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"4354:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4464,"id":4473,"nodeType":"Return","src":"4347:13:20"}]},"documentation":{"id":4456,"nodeType":"StructuredDocumentation","src":"4117:95:20","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":4475,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:20","nodeType":"FunctionDefinition","parameters":{"id":4461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4458,"mutability":"mutable","name":"a","nameLocation":"4248:1:20","nodeType":"VariableDeclaration","scope":4475,"src":"4240:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4457,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4460,"mutability":"mutable","name":"b","nameLocation":"4259:1:20","nodeType":"VariableDeclaration","scope":4475,"src":"4251:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4459,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:20"},"returnParameters":{"id":4464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4475,"src":"4285:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4462,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:20"},"scope":5864,"src":"4217:150:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4504,"nodeType":"Block","src":"4564:122:20","statements":[{"assignments":[4486,4488],"declarations":[{"constant":false,"id":4486,"mutability":"mutable","name":"success","nameLocation":"4580:7:20","nodeType":"VariableDeclaration","scope":4504,"src":"4575:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4485,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4488,"mutability":"mutable","name":"result","nameLocation":"4597:6:20","nodeType":"VariableDeclaration","scope":4504,"src":"4589:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4487,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4493,"initialValue":{"arguments":[{"id":4490,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"4614:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4491,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"4617:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4489,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"4607:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:20"},{"expression":{"arguments":[{"id":4495,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"4644:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4496,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"4653:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4498,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4497,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:20","memberName":"max","nodeType":"MemberAccess","src":"4661:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4494,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"4636:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4484,"id":4503,"nodeType":"Return","src":"4629:50:20"}]},"documentation":{"id":4476,"nodeType":"StructuredDocumentation","src":"4373:109:20","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4505,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:20","nodeType":"FunctionDefinition","parameters":{"id":4481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4478,"mutability":"mutable","name":"a","nameLocation":"4518:1:20","nodeType":"VariableDeclaration","scope":4505,"src":"4510:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4477,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4480,"mutability":"mutable","name":"b","nameLocation":"4529:1:20","nodeType":"VariableDeclaration","scope":4505,"src":"4521:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4479,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:20"},"returnParameters":{"id":4484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4505,"src":"4555:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4482,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:20"},"scope":5864,"src":"4487:199:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4531,"nodeType":"Block","src":"5158:207:20","statements":[{"id":4530,"nodeType":"UncheckedBlock","src":"5168:191:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4517,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"5306:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4518,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"5312:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4519,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"5316:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4521,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4524,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"5337:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4522,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"5321:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"5321:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4527,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4516,"id":4529,"nodeType":"Return","src":"5299:49:20"}]}]},"documentation":{"id":4506,"nodeType":"StructuredDocumentation","src":"4692:374:20","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4532,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:20","nodeType":"FunctionDefinition","parameters":{"id":4513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4508,"mutability":"mutable","name":"condition","nameLocation":"5093:9:20","nodeType":"VariableDeclaration","scope":4532,"src":"5088:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4507,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4510,"mutability":"mutable","name":"a","nameLocation":"5112:1:20","nodeType":"VariableDeclaration","scope":4532,"src":"5104:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4509,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4512,"mutability":"mutable","name":"b","nameLocation":"5123:1:20","nodeType":"VariableDeclaration","scope":4532,"src":"5115:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4511,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:20"},"returnParameters":{"id":4516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4532,"src":"5149:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4514,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:20"},"scope":5864,"src":"5071:294:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4550,"nodeType":"Block","src":"5502:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4543,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"5527:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4544,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"5531:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4546,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"5534:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4547,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"5537:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4542,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"5519:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4541,"id":4549,"nodeType":"Return","src":"5512:27:20"}]},"documentation":{"id":4533,"nodeType":"StructuredDocumentation","src":"5371:59:20","text":" @dev Returns the largest of two numbers."},"id":4551,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:20","nodeType":"FunctionDefinition","parameters":{"id":4538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4535,"mutability":"mutable","name":"a","nameLocation":"5456:1:20","nodeType":"VariableDeclaration","scope":4551,"src":"5448:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4534,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4537,"mutability":"mutable","name":"b","nameLocation":"5467:1:20","nodeType":"VariableDeclaration","scope":4551,"src":"5459:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4536,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:20"},"returnParameters":{"id":4541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4540,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4551,"src":"5493:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4539,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:20"},"scope":5864,"src":"5435:111:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4569,"nodeType":"Block","src":"5684:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4562,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"5709:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4563,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"5713:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4565,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"5716:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4566,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"5719:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4561,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"5701:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4560,"id":4568,"nodeType":"Return","src":"5694:27:20"}]},"documentation":{"id":4552,"nodeType":"StructuredDocumentation","src":"5552:60:20","text":" @dev Returns the smallest of two numbers."},"id":4570,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:20","nodeType":"FunctionDefinition","parameters":{"id":4557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4554,"mutability":"mutable","name":"a","nameLocation":"5638:1:20","nodeType":"VariableDeclaration","scope":4570,"src":"5630:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4553,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4556,"mutability":"mutable","name":"b","nameLocation":"5649:1:20","nodeType":"VariableDeclaration","scope":4570,"src":"5641:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4555,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:20"},"returnParameters":{"id":4560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4570,"src":"5675:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4558,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:20"},"scope":5864,"src":"5617:111:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4592,"nodeType":"Block","src":"5912:82:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4580,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4573,"src":"5967:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4581,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"5971:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4583,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4584,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4573,"src":"5977:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4585,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"5981:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4587,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4579,"id":4591,"nodeType":"Return","src":"5959:28:20"}]},"documentation":{"id":4571,"nodeType":"StructuredDocumentation","src":"5734:102:20","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4593,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:20","nodeType":"FunctionDefinition","parameters":{"id":4576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4573,"mutability":"mutable","name":"a","nameLocation":"5866:1:20","nodeType":"VariableDeclaration","scope":4593,"src":"5858:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4572,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4575,"mutability":"mutable","name":"b","nameLocation":"5877:1:20","nodeType":"VariableDeclaration","scope":4593,"src":"5869:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4574,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:20"},"returnParameters":{"id":4579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4593,"src":"5903:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4577,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:20"},"scope":5864,"src":"5841:153:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4633,"nodeType":"Block","src":"6286:633:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4603,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"6300:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4614,"nodeType":"IfStatement","src":"6296:150:20","trueBody":{"id":4613,"nodeType":"Block","src":"6308:138:20","statements":[{"expression":{"arguments":[{"expression":{"id":4609,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"6412:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2736_$","typeString":"type(library Panic)"}},"id":4610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2703,"src":"6412:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4606,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"6400:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2736_$","typeString":"type(library Panic)"}},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2735,"src":"6400:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4612,"nodeType":"ExpressionStatement","src":"6400:35:20"}]}},{"id":4632,"nodeType":"UncheckedBlock","src":"6829:84:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4617,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"6876:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4615,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"6860:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"6860:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4621,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"6887:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4624,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4625,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"6896:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4629,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4602,"id":4631,"nodeType":"Return","src":"6853:49:20"}]}]},"documentation":{"id":4594,"nodeType":"StructuredDocumentation","src":"6000:210:20","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4634,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:20","nodeType":"FunctionDefinition","parameters":{"id":4599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4596,"mutability":"mutable","name":"a","nameLocation":"6240:1:20","nodeType":"VariableDeclaration","scope":4634,"src":"6232:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4595,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4598,"mutability":"mutable","name":"b","nameLocation":"6251:1:20","nodeType":"VariableDeclaration","scope":4634,"src":"6243:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4597,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:20"},"returnParameters":{"id":4602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4634,"src":"6277:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4600,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:20"},"scope":5864,"src":"6215:704:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4769,"nodeType":"Block","src":"7340:3585:20","statements":[{"id":4768,"nodeType":"UncheckedBlock","src":"7350:3569:20","statements":[{"assignments":[4647,4649],"declarations":[{"constant":false,"id":4647,"mutability":"mutable","name":"high","nameLocation":"7383:4:20","nodeType":"VariableDeclaration","scope":4768,"src":"7375:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4646,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4649,"mutability":"mutable","name":"low","nameLocation":"7397:3:20","nodeType":"VariableDeclaration","scope":4768,"src":"7389:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4648,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4654,"initialValue":{"arguments":[{"id":4651,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"7411:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4652,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"7414:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4650,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"7404:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4655,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"7498:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4663,"nodeType":"IfStatement","src":"7494:365:20","trueBody":{"id":4662,"nodeType":"Block","src":"7509:350:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4658,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"7827:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4659,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"7833:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4645,"id":4661,"nodeType":"Return","src":"7820:24:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4664,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"7969:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4665,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"7984:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4682,"nodeType":"IfStatement","src":"7965:142:20","trueBody":{"id":4681,"nodeType":"Block","src":"7990:117:20","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4671,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"8028:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4674,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"8046:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2736_$","typeString":"type(library Panic)"}},"id":4675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2703,"src":"8046:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4676,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"8070:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2736_$","typeString":"type(library Panic)"}},"id":4677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:20","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2699,"src":"8070:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4670,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"8020:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4667,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"8008:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2736_$","typeString":"type(library Panic)"}},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2735,"src":"8008:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4680,"nodeType":"ExpressionStatement","src":"8008:84:20"}]}},{"assignments":[4684],"declarations":[{"constant":false,"id":4684,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:20","nodeType":"VariableDeclaration","scope":4768,"src":"8359:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4683,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4685,"nodeType":"VariableDeclarationStatement","src":"8359:17:20"},{"AST":{"nodeType":"YulBlock","src":"8415:283:20","statements":[{"nodeType":"YulAssignment","src":"8484:38:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:20"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:20"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:20"},"nodeType":"YulFunctionCall","src":"8497:25:20"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:20"}]},{"nodeType":"YulAssignment","src":"8604:37:20","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:20"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:20"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:20"},"nodeType":"YulFunctionCall","src":"8622:18:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:20"},"nodeType":"YulFunctionCall","src":"8612:29:20"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:20"}]},{"nodeType":"YulAssignment","src":"8658:26:20","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:20"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:20"},"nodeType":"YulFunctionCall","src":"8665:19:20"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4641,"isOffset":false,"isSlot":false,"src":"8510:11:20","valueSize":1},{"declaration":4647,"isOffset":false,"isSlot":false,"src":"8604:4:20","valueSize":1},{"declaration":4647,"isOffset":false,"isSlot":false,"src":"8616:4:20","valueSize":1},{"declaration":4649,"isOffset":false,"isSlot":false,"src":"8636:3:20","valueSize":1},{"declaration":4649,"isOffset":false,"isSlot":false,"src":"8658:3:20","valueSize":1},{"declaration":4649,"isOffset":false,"isSlot":false,"src":"8669:3:20","valueSize":1},{"declaration":4684,"isOffset":false,"isSlot":false,"src":"8484:9:20","valueSize":1},{"declaration":4684,"isOffset":false,"isSlot":false,"src":"8625:9:20","valueSize":1},{"declaration":4684,"isOffset":false,"isSlot":false,"src":"8674:9:20","valueSize":1},{"declaration":4637,"isOffset":false,"isSlot":false,"src":"8504:1:20","valueSize":1},{"declaration":4639,"isOffset":false,"isSlot":false,"src":"8507:1:20","valueSize":1}],"flags":["memory-safe"],"id":4686,"nodeType":"InlineAssembly","src":"8390:308:20"},{"assignments":[4688],"declarations":[{"constant":false,"id":4688,"mutability":"mutable","name":"twos","nameLocation":"8910:4:20","nodeType":"VariableDeclaration","scope":4768,"src":"8902:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4687,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4695,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4689,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"8917:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4691,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"8936:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4693,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:20"},{"AST":{"nodeType":"YulBlock","src":"8987:359:20","statements":[{"nodeType":"YulAssignment","src":"9052:37:20","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:20"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:20"},"nodeType":"YulFunctionCall","src":"9067:22:20"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:20"}]},{"nodeType":"YulAssignment","src":"9153:21:20","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:20"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:20"},"nodeType":"YulFunctionCall","src":"9160:14:20"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:20"}]},{"nodeType":"YulAssignment","src":"9293:39:20","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:20","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:20"},"nodeType":"YulFunctionCall","src":"9309:12:20"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:20"},"nodeType":"YulFunctionCall","src":"9305:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:20"},"nodeType":"YulFunctionCall","src":"9301:31:20"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4641,"isOffset":false,"isSlot":false,"src":"9052:11:20","valueSize":1},{"declaration":4641,"isOffset":false,"isSlot":false,"src":"9071:11:20","valueSize":1},{"declaration":4649,"isOffset":false,"isSlot":false,"src":"9153:3:20","valueSize":1},{"declaration":4649,"isOffset":false,"isSlot":false,"src":"9164:3:20","valueSize":1},{"declaration":4688,"isOffset":false,"isSlot":false,"src":"9084:4:20","valueSize":1},{"declaration":4688,"isOffset":false,"isSlot":false,"src":"9169:4:20","valueSize":1},{"declaration":4688,"isOffset":false,"isSlot":false,"src":"9293:4:20","valueSize":1},{"declaration":4688,"isOffset":false,"isSlot":false,"src":"9316:4:20","valueSize":1},{"declaration":4688,"isOffset":false,"isSlot":false,"src":"9323:4:20","valueSize":1}],"flags":["memory-safe"],"id":4696,"nodeType":"InlineAssembly","src":"8962:384:20"},{"expression":{"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4697,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"9409:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4698,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"9416:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4699,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"9423:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4702,"nodeType":"ExpressionStatement","src":"9409:18:20"},{"assignments":[4704],"declarations":[{"constant":false,"id":4704,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:20","nodeType":"VariableDeclaration","scope":4768,"src":"9762:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4703,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4711,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4706,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"9785:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4708,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:20"},{"expression":{"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4712,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10018:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4714,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"10033:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4715,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10047:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4719,"nodeType":"ExpressionStatement","src":"10018:36:20"},{"expression":{"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4720,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10088:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4722,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"10103:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4723,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10117:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4727,"nodeType":"ExpressionStatement","src":"10088:36:20"},{"expression":{"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4728,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10160:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4730,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"10175:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4731,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10189:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4735,"nodeType":"ExpressionStatement","src":"10160:36:20"},{"expression":{"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4736,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10231:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4738,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"10246:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4739,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10260:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4743,"nodeType":"ExpressionStatement","src":"10231:36:20"},{"expression":{"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4744,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10304:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4746,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"10319:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4747,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10333:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4751,"nodeType":"ExpressionStatement","src":"10304:36:20"},{"expression":{"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4752,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10378:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4754,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"10393:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4755,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10407:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4759,"nodeType":"ExpressionStatement","src":"10378:36:20"},{"expression":{"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4760,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"10859:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4761,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"10868:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4762,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10874:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4765,"nodeType":"ExpressionStatement","src":"10859:22:20"},{"expression":{"id":4766,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"10902:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4645,"id":4767,"nodeType":"Return","src":"10895:13:20"}]}]},"documentation":{"id":4635,"nodeType":"StructuredDocumentation","src":"6925:312:20","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4770,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:20","nodeType":"FunctionDefinition","parameters":{"id":4642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4637,"mutability":"mutable","name":"x","nameLocation":"7266:1:20","nodeType":"VariableDeclaration","scope":4770,"src":"7258:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4636,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4639,"mutability":"mutable","name":"y","nameLocation":"7277:1:20","nodeType":"VariableDeclaration","scope":4770,"src":"7269:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4638,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4641,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:20","nodeType":"VariableDeclaration","scope":4770,"src":"7280:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4640,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:20"},"returnParameters":{"id":4645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4644,"mutability":"mutable","name":"result","nameLocation":"7332:6:20","nodeType":"VariableDeclaration","scope":4770,"src":"7324:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4643,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:20"},"scope":5864,"src":"7242:3683:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4806,"nodeType":"Block","src":"11164:128:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4786,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4773,"src":"11188:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4787,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"11191:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4788,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"11194:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4785,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4770,4807],"referencedDeclaration":4770,"src":"11181:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4793,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"11242:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"}],"id":4792,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"11225:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4255_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4796,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4773,"src":"11262:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4797,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"11265:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4798,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"11268:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4795,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:20","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4790,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"11209:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"11209:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4784,"id":4805,"nodeType":"Return","src":"11174:111:20"}]},"documentation":{"id":4771,"nodeType":"StructuredDocumentation","src":"10931:118:20","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4807,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:20","nodeType":"FunctionDefinition","parameters":{"id":4781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4773,"mutability":"mutable","name":"x","nameLocation":"11078:1:20","nodeType":"VariableDeclaration","scope":4807,"src":"11070:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4772,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4775,"mutability":"mutable","name":"y","nameLocation":"11089:1:20","nodeType":"VariableDeclaration","scope":4807,"src":"11081:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4774,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4777,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:20","nodeType":"VariableDeclaration","scope":4807,"src":"11092:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4776,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4780,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:20","nodeType":"VariableDeclaration","scope":4807,"src":"11113:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"},"typeName":{"id":4779,"nodeType":"UserDefinedTypeName","pathNode":{"id":4778,"name":"Rounding","nameLocations":["11113:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":4255,"src":"11113:8:20"},"referencedDeclaration":4255,"src":"11113:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:20"},"returnParameters":{"id":4784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4807,"src":"11155:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4782,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:20"},"scope":5864,"src":"11054:238:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4856,"nodeType":"Block","src":"11500:245:20","statements":[{"id":4855,"nodeType":"UncheckedBlock","src":"11510:229:20","statements":[{"assignments":[4820,4822],"declarations":[{"constant":false,"id":4820,"mutability":"mutable","name":"high","nameLocation":"11543:4:20","nodeType":"VariableDeclaration","scope":4855,"src":"11535:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4819,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4822,"mutability":"mutable","name":"low","nameLocation":"11557:3:20","nodeType":"VariableDeclaration","scope":4855,"src":"11549:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4821,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4827,"initialValue":{"arguments":[{"id":4824,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"11571:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4825,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"11574:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4823,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"11564:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4828,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"11594:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4830,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"11607:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4841,"nodeType":"IfStatement","src":"11590:86:20","trueBody":{"id":4840,"nodeType":"Block","src":"11610:66:20","statements":[{"expression":{"arguments":[{"expression":{"id":4836,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"11640:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2736_$","typeString":"type(library Panic)"}},"id":4837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:20","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2699,"src":"11640:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4833,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"11628:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2736_$","typeString":"type(library Panic)"}},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2735,"src":"11628:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4839,"nodeType":"ExpressionStatement","src":"11628:33:20"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4842,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"11697:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4844,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"11712:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4846,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4848,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4849,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"11719:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4850,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"11726:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4852,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4818,"id":4854,"nodeType":"Return","src":"11689:39:20"}]}]},"documentation":{"id":4808,"nodeType":"StructuredDocumentation","src":"11298:111:20","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4857,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:20","nodeType":"FunctionDefinition","parameters":{"id":4815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4810,"mutability":"mutable","name":"x","nameLocation":"11438:1:20","nodeType":"VariableDeclaration","scope":4857,"src":"11430:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4809,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4812,"mutability":"mutable","name":"y","nameLocation":"11449:1:20","nodeType":"VariableDeclaration","scope":4857,"src":"11441:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4811,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4814,"mutability":"mutable","name":"n","nameLocation":"11458:1:20","nodeType":"VariableDeclaration","scope":4857,"src":"11452:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4813,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:20"},"returnParameters":{"id":4818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4817,"mutability":"mutable","name":"result","nameLocation":"11492:6:20","nodeType":"VariableDeclaration","scope":4857,"src":"11484:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4816,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:20"},"scope":5864,"src":"11414:331:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4895,"nodeType":"Block","src":"11963:113:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4873,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"11987:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4874,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"11990:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4875,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"11993:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4872,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4857,4896],"referencedDeclaration":4857,"src":"11980:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4880,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"12031:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"}],"id":4879,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"12014:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4255_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4883,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"12051:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4884,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"12054:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4886,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"12062:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4882,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:20","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4877,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"11998:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"11998:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4871,"id":4894,"nodeType":"Return","src":"11973:96:20"}]},"documentation":{"id":4858,"nodeType":"StructuredDocumentation","src":"11751:109:20","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4896,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:20","nodeType":"FunctionDefinition","parameters":{"id":4868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4860,"mutability":"mutable","name":"x","nameLocation":"11889:1:20","nodeType":"VariableDeclaration","scope":4896,"src":"11881:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4859,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4862,"mutability":"mutable","name":"y","nameLocation":"11900:1:20","nodeType":"VariableDeclaration","scope":4896,"src":"11892:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4861,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4864,"mutability":"mutable","name":"n","nameLocation":"11909:1:20","nodeType":"VariableDeclaration","scope":4896,"src":"11903:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4863,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4867,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:20","nodeType":"VariableDeclaration","scope":4896,"src":"11912:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"},"typeName":{"id":4866,"nodeType":"UserDefinedTypeName","pathNode":{"id":4865,"name":"Rounding","nameLocations":["11912:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":4255,"src":"11912:8:20"},"referencedDeclaration":4255,"src":"11912:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:20"},"returnParameters":{"id":4871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4896,"src":"11954:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4869,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:20"},"scope":5864,"src":"11865:211:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4992,"nodeType":"Block","src":"12710:1849:20","statements":[{"id":4991,"nodeType":"UncheckedBlock","src":"12720:1833:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4906,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"12748:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4911,"nodeType":"IfStatement","src":"12744:20:20","trueBody":{"expression":{"hexValue":"30","id":4909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4905,"id":4910,"nodeType":"Return","src":"12756:8:20"}},{"assignments":[4913],"declarations":[{"constant":false,"id":4913,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:20","nodeType":"VariableDeclaration","scope":4991,"src":"13235:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4912,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4917,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4914,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"13255:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4915,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"13259:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:20"},{"assignments":[4919],"declarations":[{"constant":false,"id":4919,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:20","nodeType":"VariableDeclaration","scope":4991,"src":"13274:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4918,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4921,"initialValue":{"id":4920,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"13288:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:20"},{"assignments":[4923],"declarations":[{"constant":false,"id":4923,"mutability":"mutable","name":"x","nameLocation":"13432:1:20","nodeType":"VariableDeclaration","scope":4991,"src":"13425:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4922,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4925,"initialValue":{"hexValue":"30","id":4924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:20"},{"assignments":[4927],"declarations":[{"constant":false,"id":4927,"mutability":"mutable","name":"y","nameLocation":"13458:1:20","nodeType":"VariableDeclaration","scope":4991,"src":"13451:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4926,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4929,"initialValue":{"hexValue":"31","id":4928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:20"},{"body":{"id":4966,"nodeType":"Block","src":"13501:882:20","statements":[{"assignments":[4934],"declarations":[{"constant":false,"id":4934,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:20","nodeType":"VariableDeclaration","scope":4966,"src":"13519:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4933,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4938,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4935,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"13538:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4936,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"13544:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:20"},{"expression":{"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4939,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"13573:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4940,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"13578:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4941,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4942,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"13678:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4943,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"13923:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4944,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"13929:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4945,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"13941:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4948,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:20","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4950,"nodeType":"ExpressionStatement","src":"13572:395:20"},{"expression":{"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4951,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"13987:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4952,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"13990:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4953,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4954,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"14072:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4955,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"14326:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4956,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"14330:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4959,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"14341:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4957,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:20","typeDescriptions":{}}},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4963,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:20","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4965,"nodeType":"ExpressionStatement","src":"13986:382:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4930,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"13485:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4967,"nodeType":"WhileStatement","src":"13478:905:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4968,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"14401:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4973,"nodeType":"IfStatement","src":"14397:22:20","trueBody":{"expression":{"hexValue":"30","id":4971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4905,"id":4972,"nodeType":"Return","src":"14411:8:20"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4975,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"14470:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4978,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"14477:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:20","subExpression":{"id":4981,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"14490:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4979,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:20","typeDescriptions":{}}},"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4987,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"14502:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4985,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:20","typeDescriptions":{}}},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4974,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"14462:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4905,"id":4990,"nodeType":"Return","src":"14455:50:20"}]}]},"documentation":{"id":4897,"nodeType":"StructuredDocumentation","src":"12082:553:20","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4993,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:20","nodeType":"FunctionDefinition","parameters":{"id":4902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4899,"mutability":"mutable","name":"a","nameLocation":"12664:1:20","nodeType":"VariableDeclaration","scope":4993,"src":"12656:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4898,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4901,"mutability":"mutable","name":"n","nameLocation":"12675:1:20","nodeType":"VariableDeclaration","scope":4993,"src":"12667:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4900,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:20"},"returnParameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4993,"src":"12701:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4903,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:20"},"scope":5864,"src":"12640:1919:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5013,"nodeType":"Block","src":"15159:82:20","statements":[{"id":5012,"nodeType":"UncheckedBlock","src":"15169:66:20","statements":[{"expression":{"arguments":[{"id":5005,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"15212:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5006,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"15215:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5009,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"15222:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5003,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"15200:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5864_$","typeString":"type(library Math)"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:20","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5050,"src":"15200:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5002,"id":5011,"nodeType":"Return","src":"15193:31:20"}]}]},"documentation":{"id":4994,"nodeType":"StructuredDocumentation","src":"14565:514:20","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5014,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:20","nodeType":"FunctionDefinition","parameters":{"id":4999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4996,"mutability":"mutable","name":"a","nameLocation":"15113:1:20","nodeType":"VariableDeclaration","scope":5014,"src":"15105:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4995,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4998,"mutability":"mutable","name":"p","nameLocation":"15124:1:20","nodeType":"VariableDeclaration","scope":5014,"src":"15116:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4997,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:20"},"returnParameters":{"id":5002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5014,"src":"15150:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5000,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:20"},"scope":5864,"src":"15084:157:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5049,"nodeType":"Block","src":"16011:174:20","statements":[{"assignments":[5027,5029],"declarations":[{"constant":false,"id":5027,"mutability":"mutable","name":"success","nameLocation":"16027:7:20","nodeType":"VariableDeclaration","scope":5049,"src":"16022:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5026,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5029,"mutability":"mutable","name":"result","nameLocation":"16044:6:20","nodeType":"VariableDeclaration","scope":5049,"src":"16036:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5028,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5035,"initialValue":{"arguments":[{"id":5031,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"16064:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5032,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"16067:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5033,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5021,"src":"16070:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5030,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5074,5156],"referencedDeclaration":5074,"src":"16054:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:20"},{"condition":{"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:20","subExpression":{"id":5036,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5027,"src":"16087:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5046,"nodeType":"IfStatement","src":"16082:74:20","trueBody":{"id":5045,"nodeType":"Block","src":"16096:60:20","statements":[{"expression":{"arguments":[{"expression":{"id":5041,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"16122:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2736_$","typeString":"type(library Panic)"}},"id":5042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2703,"src":"16122:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5038,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"16110:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2736_$","typeString":"type(library Panic)"}},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2735,"src":"16110:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5044,"nodeType":"ExpressionStatement","src":"16110:35:20"}]}},{"expression":{"id":5047,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"16172:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5025,"id":5048,"nodeType":"Return","src":"16165:13:20"}]},"documentation":{"id":5015,"nodeType":"StructuredDocumentation","src":"15247:678:20","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5050,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:20","nodeType":"FunctionDefinition","parameters":{"id":5022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5017,"mutability":"mutable","name":"b","nameLocation":"15954:1:20","nodeType":"VariableDeclaration","scope":5050,"src":"15946:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5016,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5019,"mutability":"mutable","name":"e","nameLocation":"15965:1:20","nodeType":"VariableDeclaration","scope":5050,"src":"15957:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5018,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5021,"mutability":"mutable","name":"m","nameLocation":"15976:1:20","nodeType":"VariableDeclaration","scope":5050,"src":"15968:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5020,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:20"},"returnParameters":{"id":5025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5050,"src":"16002:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5023,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:20"},"scope":5864,"src":"15930:255:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5073,"nodeType":"Block","src":"17039:1493:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5064,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"17053:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5071,"nodeType":"IfStatement","src":"17049:29:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5069,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5063,"id":5070,"nodeType":"Return","src":"17061:17:20"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:20","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:20","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:20"},"nodeType":"YulFunctionCall","src":"17138:11:20"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:20","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:20","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:20"},"nodeType":"YulFunctionCall","src":"18050:17:20"},"nodeType":"YulExpressionStatement","src":"18050:17:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:20"},"nodeType":"YulFunctionCall","src":"18087:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:20","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:20"},"nodeType":"YulFunctionCall","src":"18080:28:20"},"nodeType":"YulExpressionStatement","src":"18080:28:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:20"},"nodeType":"YulFunctionCall","src":"18128:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:20","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:20"},"nodeType":"YulFunctionCall","src":"18121:28:20"},"nodeType":"YulExpressionStatement","src":"18121:28:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:20"},"nodeType":"YulFunctionCall","src":"18169:14:20"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:20"},"nodeType":"YulFunctionCall","src":"18162:25:20"},"nodeType":"YulExpressionStatement","src":"18162:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:20"},"nodeType":"YulFunctionCall","src":"18207:14:20"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:20"},"nodeType":"YulFunctionCall","src":"18200:25:20"},"nodeType":"YulExpressionStatement","src":"18200:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:20","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:20"},"nodeType":"YulFunctionCall","src":"18245:14:20"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:20"},"nodeType":"YulFunctionCall","src":"18238:25:20"},"nodeType":"YulExpressionStatement","src":"18238:25:20"},{"nodeType":"YulAssignment","src":"18425:57:20","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:20"},"nodeType":"YulFunctionCall","src":"18447:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:20","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:20","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:20","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:20","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:20"},"nodeType":"YulFunctionCall","src":"18436:46:20"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:20"}]},{"nodeType":"YulAssignment","src":"18495:21:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:20","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:20"},"nodeType":"YulFunctionCall","src":"18505:11:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5053,"isOffset":false,"isSlot":false,"src":"18185:1:20","valueSize":1},{"declaration":5055,"isOffset":false,"isSlot":false,"src":"18223:1:20","valueSize":1},{"declaration":5057,"isOffset":false,"isSlot":false,"src":"18261:1:20","valueSize":1},{"declaration":5062,"isOffset":false,"isSlot":false,"src":"18495:6:20","valueSize":1},{"declaration":5060,"isOffset":false,"isSlot":false,"src":"18425:7:20","valueSize":1}],"flags":["memory-safe"],"id":5072,"nodeType":"InlineAssembly","src":"17088:1438:20"}]},"documentation":{"id":5051,"nodeType":"StructuredDocumentation","src":"16191:738:20","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5074,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:20","nodeType":"FunctionDefinition","parameters":{"id":5058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5053,"mutability":"mutable","name":"b","nameLocation":"16961:1:20","nodeType":"VariableDeclaration","scope":5074,"src":"16953:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5052,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5055,"mutability":"mutable","name":"e","nameLocation":"16972:1:20","nodeType":"VariableDeclaration","scope":5074,"src":"16964:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5054,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5057,"mutability":"mutable","name":"m","nameLocation":"16983:1:20","nodeType":"VariableDeclaration","scope":5074,"src":"16975:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5056,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:20"},"returnParameters":{"id":5063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5060,"mutability":"mutable","name":"success","nameLocation":"17014:7:20","nodeType":"VariableDeclaration","scope":5074,"src":"17009:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5059,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5062,"mutability":"mutable","name":"result","nameLocation":"17031:6:20","nodeType":"VariableDeclaration","scope":5074,"src":"17023:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5061,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:20"},"scope":5864,"src":"16934:1598:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5109,"nodeType":"Block","src":"18729:179:20","statements":[{"assignments":[5087,5089],"declarations":[{"constant":false,"id":5087,"mutability":"mutable","name":"success","nameLocation":"18745:7:20","nodeType":"VariableDeclaration","scope":5109,"src":"18740:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5086,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5089,"mutability":"mutable","name":"result","nameLocation":"18767:6:20","nodeType":"VariableDeclaration","scope":5109,"src":"18754:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5088,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5095,"initialValue":{"arguments":[{"id":5091,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"18787:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5092,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"18790:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5093,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"18793:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5090,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5074,5156],"referencedDeclaration":5156,"src":"18777:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:20"},{"condition":{"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:20","subExpression":{"id":5096,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5087,"src":"18810:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5106,"nodeType":"IfStatement","src":"18805:74:20","trueBody":{"id":5105,"nodeType":"Block","src":"18819:60:20","statements":[{"expression":{"arguments":[{"expression":{"id":5101,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"18845:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2736_$","typeString":"type(library Panic)"}},"id":5102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2703,"src":"18845:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5098,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"18833:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2736_$","typeString":"type(library Panic)"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2735,"src":"18833:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5104,"nodeType":"ExpressionStatement","src":"18833:35:20"}]}},{"expression":{"id":5107,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"18895:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5085,"id":5108,"nodeType":"Return","src":"18888:13:20"}]},"documentation":{"id":5075,"nodeType":"StructuredDocumentation","src":"18538:85:20","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5110,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:20","nodeType":"FunctionDefinition","parameters":{"id":5082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5077,"mutability":"mutable","name":"b","nameLocation":"18657:1:20","nodeType":"VariableDeclaration","scope":5110,"src":"18644:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5076,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5079,"mutability":"mutable","name":"e","nameLocation":"18673:1:20","nodeType":"VariableDeclaration","scope":5110,"src":"18660:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5078,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5081,"mutability":"mutable","name":"m","nameLocation":"18689:1:20","nodeType":"VariableDeclaration","scope":5110,"src":"18676:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5080,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:20"},"returnParameters":{"id":5085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5110,"src":"18715:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5083,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:20"},"scope":5864,"src":"18628:280:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5155,"nodeType":"Block","src":"19162:771:20","statements":[{"condition":{"arguments":[{"id":5125,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"19187:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5124,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"19176:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5134,"nodeType":"IfStatement","src":"19172:47:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5128,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5132,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5123,"id":5133,"nodeType":"Return","src":"19191:28:20"}},{"assignments":[5136],"declarations":[{"constant":false,"id":5136,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:20","nodeType":"VariableDeclaration","scope":5155,"src":"19230:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5135,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5139,"initialValue":{"expression":{"id":5137,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"19245:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:20","memberName":"length","nodeType":"MemberAccess","src":"19245:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:20"},{"expression":{"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5140,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"19335:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5143,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"19361:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:20","memberName":"length","nodeType":"MemberAccess","src":"19361:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5145,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"19371:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:20","memberName":"length","nodeType":"MemberAccess","src":"19371:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5147,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"19381:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5148,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"19387:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5149,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"19390:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5150,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"19393:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5141,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5153,"nodeType":"ExpressionStatement","src":"19335:60:20"},{"AST":{"nodeType":"YulBlock","src":"19431:496:20","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:20","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:20"},"nodeType":"YulFunctionCall","src":"19460:17:20"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:20","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:20","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:20"},"nodeType":"YulFunctionCall","src":"19589:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:20","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:20"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:20"},"nodeType":"YulFunctionCall","src":"19611:13:20"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:20"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:20"},"nodeType":"YulFunctionCall","src":"19578:62:20"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:20"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:20"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:20"},"nodeType":"YulFunctionCall","src":"19789:20:20"},"nodeType":"YulExpressionStatement","src":"19789:20:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:20","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:20"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:20"},"nodeType":"YulFunctionCall","src":"19898:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:20"},"nodeType":"YulFunctionCall","src":"19885:32:20"},"nodeType":"YulExpressionStatement","src":"19885:32:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":5136,"isOffset":false,"isSlot":false,"src":"19635:4:20","valueSize":1},{"declaration":5136,"isOffset":false,"isSlot":false,"src":"19804:4:20","valueSize":1},{"declaration":5136,"isOffset":false,"isSlot":false,"src":"19911:4:20","valueSize":1},{"declaration":5122,"isOffset":false,"isSlot":false,"src":"19464:6:20","valueSize":1},{"declaration":5122,"isOffset":false,"isSlot":false,"src":"19617:6:20","valueSize":1},{"declaration":5122,"isOffset":false,"isSlot":false,"src":"19796:6:20","valueSize":1},{"declaration":5120,"isOffset":false,"isSlot":false,"src":"19567:7:20","valueSize":1}],"flags":["memory-safe"],"id":5154,"nodeType":"InlineAssembly","src":"19406:521:20"}]},"documentation":{"id":5111,"nodeType":"StructuredDocumentation","src":"18914:88:20","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5156,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:20","nodeType":"FunctionDefinition","parameters":{"id":5118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5113,"mutability":"mutable","name":"b","nameLocation":"19048:1:20","nodeType":"VariableDeclaration","scope":5156,"src":"19035:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5112,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5115,"mutability":"mutable","name":"e","nameLocation":"19072:1:20","nodeType":"VariableDeclaration","scope":5156,"src":"19059:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5114,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5117,"mutability":"mutable","name":"m","nameLocation":"19096:1:20","nodeType":"VariableDeclaration","scope":5156,"src":"19083:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5116,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:20"},"returnParameters":{"id":5123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5120,"mutability":"mutable","name":"success","nameLocation":"19132:7:20","nodeType":"VariableDeclaration","scope":5156,"src":"19127:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5119,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5122,"mutability":"mutable","name":"result","nameLocation":"19154:6:20","nodeType":"VariableDeclaration","scope":5156,"src":"19141:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5121,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:20"},"scope":5864,"src":"19007:926:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5188,"nodeType":"Block","src":"20088:176:20","statements":[{"body":{"id":5184,"nodeType":"Block","src":"20145:92:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5175,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"20163:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5177,"indexExpression":{"id":5176,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"20173:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5183,"nodeType":"IfStatement","src":"20159:68:20","trueBody":{"id":5182,"nodeType":"Block","src":"20182:45:20","statements":[{"expression":{"hexValue":"66616c7365","id":5180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5163,"id":5181,"nodeType":"Return","src":"20200:12:20"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5168,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"20118:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5169,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"20122:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:20","memberName":"length","nodeType":"MemberAccess","src":"20122:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5185,"initializationExpression":{"assignments":[5165],"declarations":[{"constant":false,"id":5165,"mutability":"mutable","name":"i","nameLocation":"20111:1:20","nodeType":"VariableDeclaration","scope":5185,"src":"20103:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5164,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5167,"initialValue":{"hexValue":"30","id":5166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:20"},"loopExpression":{"expression":{"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:20","subExpression":{"id":5172,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"20142:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5174,"nodeType":"ExpressionStatement","src":"20140:3:20"},"nodeType":"ForStatement","src":"20098:139:20"},{"expression":{"hexValue":"74727565","id":5186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5163,"id":5187,"nodeType":"Return","src":"20246:11:20"}]},"documentation":{"id":5157,"nodeType":"StructuredDocumentation","src":"19939:72:20","text":" @dev Returns whether the provided byte array is zero."},"id":5189,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:20","nodeType":"FunctionDefinition","parameters":{"id":5160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5159,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:20","nodeType":"VariableDeclaration","scope":5189,"src":"20036:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5158,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:20"},"returnParameters":{"id":5163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5189,"src":"20082:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5161,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:20"},"scope":5864,"src":"20016:248:20","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5407,"nodeType":"Block","src":"20624:5124:20","statements":[{"id":5406,"nodeType":"UncheckedBlock","src":"20634:5108:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5197,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"20728:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5203,"nodeType":"IfStatement","src":"20724:53:20","trueBody":{"id":5202,"nodeType":"Block","src":"20736:41:20","statements":[{"expression":{"id":5200,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"20761:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5196,"id":5201,"nodeType":"Return","src":"20754:8:20"}]}},{"assignments":[5205],"declarations":[{"constant":false,"id":5205,"mutability":"mutable","name":"aa","nameLocation":"21712:2:20","nodeType":"VariableDeclaration","scope":5406,"src":"21704:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5204,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5207,"initialValue":{"id":5206,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"21717:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:20"},{"assignments":[5209],"declarations":[{"constant":false,"id":5209,"mutability":"mutable","name":"xn","nameLocation":"21740:2:20","nodeType":"VariableDeclaration","scope":5406,"src":"21732:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5208,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5211,"initialValue":{"hexValue":"31","id":5210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5212,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"21765:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5216,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5227,"nodeType":"IfStatement","src":"21761:92:20","trueBody":{"id":5226,"nodeType":"Block","src":"21783:70:20","statements":[{"expression":{"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5218,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"21801:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5221,"nodeType":"ExpressionStatement","src":"21801:10:20"},{"expression":{"id":5224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5222,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"21829:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5225,"nodeType":"ExpressionStatement","src":"21829:9:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5228,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"21870:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5243,"nodeType":"IfStatement","src":"21866:90:20","trueBody":{"id":5242,"nodeType":"Block","src":"21887:69:20","statements":[{"expression":{"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5234,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"21905:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5237,"nodeType":"ExpressionStatement","src":"21905:9:20"},{"expression":{"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5238,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"21932:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5241,"nodeType":"ExpressionStatement","src":"21932:9:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5244,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"21973:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5248,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5259,"nodeType":"IfStatement","src":"21969:90:20","trueBody":{"id":5258,"nodeType":"Block","src":"21990:69:20","statements":[{"expression":{"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5250,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"22008:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5253,"nodeType":"ExpressionStatement","src":"22008:9:20"},{"expression":{"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5254,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"22035:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5257,"nodeType":"ExpressionStatement","src":"22035:9:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5260,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"22076:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5264,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5275,"nodeType":"IfStatement","src":"22072:89:20","trueBody":{"id":5274,"nodeType":"Block","src":"22093:68:20","statements":[{"expression":{"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5266,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"22111:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5269,"nodeType":"ExpressionStatement","src":"22111:9:20"},{"expression":{"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5270,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"22138:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5273,"nodeType":"ExpressionStatement","src":"22138:8:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5276,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"22178:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5280,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5291,"nodeType":"IfStatement","src":"22174:87:20","trueBody":{"id":5290,"nodeType":"Block","src":"22194:67:20","statements":[{"expression":{"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5282,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"22212:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5285,"nodeType":"ExpressionStatement","src":"22212:8:20"},{"expression":{"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5286,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"22238:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5289,"nodeType":"ExpressionStatement","src":"22238:8:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5292,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"22278:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5296,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5307,"nodeType":"IfStatement","src":"22274:87:20","trueBody":{"id":5306,"nodeType":"Block","src":"22294:67:20","statements":[{"expression":{"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5298,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"22312:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5301,"nodeType":"ExpressionStatement","src":"22312:8:20"},{"expression":{"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5302,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"22338:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5305,"nodeType":"ExpressionStatement","src":"22338:8:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5308,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"22378:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5319,"nodeType":"IfStatement","src":"22374:61:20","trueBody":{"id":5318,"nodeType":"Block","src":"22394:41:20","statements":[{"expression":{"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5314,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"22412:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5317,"nodeType":"ExpressionStatement","src":"22412:8:20"}]}},{"expression":{"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5320,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"22855:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5322,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"22865:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5324,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5328,"nodeType":"ExpressionStatement","src":"22855:18:20"},{"expression":{"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5329,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"24760:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5330,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"24766:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5331,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"24771:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5332,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"24775:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5339,"nodeType":"ExpressionStatement","src":"24760:23:20"},{"expression":{"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5340,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"24869:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5341,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"24875:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5342,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"24880:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5343,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"24884:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5346,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5350,"nodeType":"ExpressionStatement","src":"24869:23:20"},{"expression":{"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5351,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"24980:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5352,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"24986:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5353,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"24991:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5354,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"24995:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5361,"nodeType":"ExpressionStatement","src":"24980:23:20"},{"expression":{"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5362,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"25089:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5363,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"25095:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5364,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"25100:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5365,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"25104:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5372,"nodeType":"ExpressionStatement","src":"25089:23:20"},{"expression":{"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5373,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"25199:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5374,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"25205:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5375,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"25210:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5376,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"25214:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5379,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5383,"nodeType":"ExpressionStatement","src":"25199:23:20"},{"expression":{"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5384,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"25309:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5385,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"25315:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5386,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"25320:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5387,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"25324:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5390,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5394,"nodeType":"ExpressionStatement","src":"25309:23:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5395,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"25698:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5398,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"25719:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5399,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"25724:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5400,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"25728:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5396,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"25703:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"25703:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5196,"id":5405,"nodeType":"Return","src":"25691:40:20"}]}]},"documentation":{"id":5190,"nodeType":"StructuredDocumentation","src":"20270:292:20","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5408,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:20","nodeType":"FunctionDefinition","parameters":{"id":5193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5192,"mutability":"mutable","name":"a","nameLocation":"20589:1:20","nodeType":"VariableDeclaration","scope":5408,"src":"20581:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5191,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:20"},"returnParameters":{"id":5196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5408,"src":"20615:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5194,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:20"},"scope":5864,"src":"20567:5181:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5441,"nodeType":"Block","src":"25921:171:20","statements":[{"id":5440,"nodeType":"UncheckedBlock","src":"25931:155:20","statements":[{"assignments":[5420],"declarations":[{"constant":false,"id":5420,"mutability":"mutable","name":"result","nameLocation":"25963:6:20","nodeType":"VariableDeclaration","scope":5440,"src":"25955:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5419,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5424,"initialValue":{"arguments":[{"id":5422,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"25977:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5421,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5408,5442],"referencedDeclaration":5408,"src":"25972:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5425,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"26000:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5429,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"26042:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"}],"id":5428,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"26025:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4255_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5431,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"26055:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5432,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"26064:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5434,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"26073:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5426,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"26009:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"26009:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5418,"id":5439,"nodeType":"Return","src":"25993:82:20"}]}]},"documentation":{"id":5409,"nodeType":"StructuredDocumentation","src":"25754:86:20","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5442,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:20","nodeType":"FunctionDefinition","parameters":{"id":5415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5411,"mutability":"mutable","name":"a","nameLocation":"25867:1:20","nodeType":"VariableDeclaration","scope":5442,"src":"25859:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5410,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5414,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:20","nodeType":"VariableDeclaration","scope":5442,"src":"25870:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"},"typeName":{"id":5413,"nodeType":"UserDefinedTypeName","pathNode":{"id":5412,"name":"Rounding","nameLocations":["25870:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":4255,"src":"25870:8:20"},"referencedDeclaration":4255,"src":"25870:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:20"},"returnParameters":{"id":5418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5442,"src":"25912:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5416,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:20"},"scope":5864,"src":"25845:247:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5532,"nodeType":"Block","src":"26281:2334:20","statements":[{"expression":{"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5450,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"26363:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5453,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"26383:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5451,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"26367:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"26367:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:20","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5460,"nodeType":"ExpressionStatement","src":"26363:64:20"},{"expression":{"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5461,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"26503:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5464,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"26525:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5465,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"26530:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5467,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5462,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"26508:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"26508:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:20","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5474,"nodeType":"ExpressionStatement","src":"26503:56:20"},{"expression":{"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5475,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"26634:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5478,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"26656:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5479,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"26661:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5476,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"26639:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"26639:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:20","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5488,"nodeType":"ExpressionStatement","src":"26634:48:20"},{"expression":{"id":5501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5489,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"26757:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5492,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"26779:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5493,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"26784:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5495,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:20","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5490,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"26762:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"26762:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5502,"nodeType":"ExpressionStatement","src":"26757:44:20"},{"expression":{"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5503,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"26874:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5506,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"26896:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5507,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"26901:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5504,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"26879:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"26879:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5516,"nodeType":"ExpressionStatement","src":"26874:42:20"},{"expression":{"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5517,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"26988:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5520,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"27010:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5521,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"27015:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":5524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:20","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5518,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"26993:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"26993:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5530,"nodeType":"ExpressionStatement","src":"26988:41:20"},{"AST":{"nodeType":"YulBlock","src":"28490:119:20","statements":[{"nodeType":"YulAssignment","src":"28504:95:20","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:20"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:20"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:20"},"nodeType":"YulFunctionCall","src":"28520:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:20","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:20"},"nodeType":"YulFunctionCall","src":"28515:83:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:20"},"nodeType":"YulFunctionCall","src":"28509:90:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5448,"isOffset":false,"isSlot":false,"src":"28504:1:20","valueSize":1},{"declaration":5448,"isOffset":false,"isSlot":false,"src":"28512:1:20","valueSize":1},{"declaration":5448,"isOffset":false,"isSlot":false,"src":"28524:1:20","valueSize":1},{"declaration":5445,"isOffset":false,"isSlot":false,"src":"28527:1:20","valueSize":1}],"flags":["memory-safe"],"id":5531,"nodeType":"InlineAssembly","src":"28465:144:20"}]},"documentation":{"id":5443,"nodeType":"StructuredDocumentation","src":"26098:119:20","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5533,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:20","nodeType":"FunctionDefinition","parameters":{"id":5446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5445,"mutability":"mutable","name":"x","nameLocation":"26244:1:20","nodeType":"VariableDeclaration","scope":5533,"src":"26236:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5444,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:20"},"returnParameters":{"id":5449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5448,"mutability":"mutable","name":"r","nameLocation":"26278:1:20","nodeType":"VariableDeclaration","scope":5533,"src":"26270:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5447,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:20"},"scope":5864,"src":"26222:2393:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5566,"nodeType":"Block","src":"28848:175:20","statements":[{"id":5565,"nodeType":"UncheckedBlock","src":"28858:159:20","statements":[{"assignments":[5545],"declarations":[{"constant":false,"id":5545,"mutability":"mutable","name":"result","nameLocation":"28890:6:20","nodeType":"VariableDeclaration","scope":5565,"src":"28882:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5544,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5549,"initialValue":{"arguments":[{"id":5547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"28904:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5546,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5533,5567],"referencedDeclaration":5533,"src":"28899:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5550,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"28931:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5554,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"28973:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"}],"id":5553,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"28956:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4255_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"28991:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"29000:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5551,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"28940:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"28940:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5543,"id":5564,"nodeType":"Return","src":"28924:82:20"}]}]},"documentation":{"id":5534,"nodeType":"StructuredDocumentation","src":"28621:142:20","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5567,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:20","nodeType":"FunctionDefinition","parameters":{"id":5540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5536,"mutability":"mutable","name":"value","nameLocation":"28790:5:20","nodeType":"VariableDeclaration","scope":5567,"src":"28782:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5535,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5539,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:20","nodeType":"VariableDeclaration","scope":5567,"src":"28797:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"},"typeName":{"id":5538,"nodeType":"UserDefinedTypeName","pathNode":{"id":5537,"name":"Rounding","nameLocations":["28797:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":4255,"src":"28797:8:20"},"referencedDeclaration":4255,"src":"28797:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:20"},"returnParameters":{"id":5543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5567,"src":"28839:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5541,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:20"},"scope":5864,"src":"28768:255:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5695,"nodeType":"Block","src":"29216:854:20","statements":[{"assignments":[5576],"declarations":[{"constant":false,"id":5576,"mutability":"mutable","name":"result","nameLocation":"29234:6:20","nodeType":"VariableDeclaration","scope":5695,"src":"29226:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5575,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5578,"initialValue":{"hexValue":"30","id":5577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:20"},{"id":5692,"nodeType":"UncheckedBlock","src":"29254:787:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"29282:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5595,"nodeType":"IfStatement","src":"29278:103:20","trueBody":{"id":5594,"nodeType":"Block","src":"29301:80:20","statements":[{"expression":{"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"29319:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5589,"nodeType":"ExpressionStatement","src":"29319:17:20"},{"expression":{"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5590,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"29354:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5593,"nodeType":"ExpressionStatement","src":"29354:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"29398:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5612,"nodeType":"IfStatement","src":"29394:103:20","trueBody":{"id":5611,"nodeType":"Block","src":"29417:80:20","statements":[{"expression":{"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"29435:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5606,"nodeType":"ExpressionStatement","src":"29435:17:20"},{"expression":{"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5607,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"29470:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5610,"nodeType":"ExpressionStatement","src":"29470:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"29514:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5629,"nodeType":"IfStatement","src":"29510:103:20","trueBody":{"id":5628,"nodeType":"Block","src":"29533:80:20","statements":[{"expression":{"id":5622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"29551:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5623,"nodeType":"ExpressionStatement","src":"29551:17:20"},{"expression":{"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5624,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"29586:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5627,"nodeType":"ExpressionStatement","src":"29586:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"29630:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5646,"nodeType":"IfStatement","src":"29626:100:20","trueBody":{"id":5645,"nodeType":"Block","src":"29648:78:20","statements":[{"expression":{"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"29666:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5640,"nodeType":"ExpressionStatement","src":"29666:16:20"},{"expression":{"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5641,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"29700:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5644,"nodeType":"ExpressionStatement","src":"29700:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"29743:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5663,"nodeType":"IfStatement","src":"29739:100:20","trueBody":{"id":5662,"nodeType":"Block","src":"29761:78:20","statements":[{"expression":{"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"29779:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5657,"nodeType":"ExpressionStatement","src":"29779:16:20"},{"expression":{"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5658,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"29813:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5661,"nodeType":"ExpressionStatement","src":"29813:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"29856:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5680,"nodeType":"IfStatement","src":"29852:100:20","trueBody":{"id":5679,"nodeType":"Block","src":"29874:78:20","statements":[{"expression":{"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"29892:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5674,"nodeType":"ExpressionStatement","src":"29892:16:20"},{"expression":{"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5675,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"29926:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5678,"nodeType":"ExpressionStatement","src":"29926:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"29969:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5691,"nodeType":"IfStatement","src":"29965:66:20","trueBody":{"id":5690,"nodeType":"Block","src":"29987:44:20","statements":[{"expression":{"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5686,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"30005:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5689,"nodeType":"ExpressionStatement","src":"30005:11:20"}]}}]},{"expression":{"id":5693,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"30057:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5574,"id":5694,"nodeType":"Return","src":"30050:13:20"}]},"documentation":{"id":5568,"nodeType":"StructuredDocumentation","src":"29029:120:20","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5696,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:20","nodeType":"FunctionDefinition","parameters":{"id":5571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5570,"mutability":"mutable","name":"value","nameLocation":"29177:5:20","nodeType":"VariableDeclaration","scope":5696,"src":"29169:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5569,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:20"},"returnParameters":{"id":5574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5696,"src":"29207:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5572,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:20"},"scope":5864,"src":"29154:916:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5729,"nodeType":"Block","src":"30305:177:20","statements":[{"id":5728,"nodeType":"UncheckedBlock","src":"30315:161:20","statements":[{"assignments":[5708],"declarations":[{"constant":false,"id":5708,"mutability":"mutable","name":"result","nameLocation":"30347:6:20","nodeType":"VariableDeclaration","scope":5728,"src":"30339:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5707,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5712,"initialValue":{"arguments":[{"id":5710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"30362:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5709,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5696,5730],"referencedDeclaration":5696,"src":"30356:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"30389:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5717,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"30431:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"}],"id":5716,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"30414:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4255_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5720,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"30450:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"30459:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5714,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"30398:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"30398:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5706,"id":5727,"nodeType":"Return","src":"30382:83:20"}]}]},"documentation":{"id":5697,"nodeType":"StructuredDocumentation","src":"30076:143:20","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5730,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:20","nodeType":"FunctionDefinition","parameters":{"id":5703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5699,"mutability":"mutable","name":"value","nameLocation":"30247:5:20","nodeType":"VariableDeclaration","scope":5730,"src":"30239:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5698,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5702,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:20","nodeType":"VariableDeclaration","scope":5730,"src":"30254:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"},"typeName":{"id":5701,"nodeType":"UserDefinedTypeName","pathNode":{"id":5700,"name":"Rounding","nameLocations":["30254:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":4255,"src":"30254:8:20"},"referencedDeclaration":4255,"src":"30254:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:20"},"returnParameters":{"id":5706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5730,"src":"30296:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5704,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:20"},"scope":5864,"src":"30224:258:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5806,"nodeType":"Block","src":"30800:675:20","statements":[{"expression":{"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5738,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"30882:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5741,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"30902:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5739,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"30886:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"30886:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:20","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5748,"nodeType":"ExpressionStatement","src":"30882:64:20"},{"expression":{"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5749,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"31022:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5752,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"31044:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5753,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"31049:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5755,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5750,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"31027:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"31027:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:20","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5762,"nodeType":"ExpressionStatement","src":"31022:56:20"},{"expression":{"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5763,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"31153:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5766,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"31175:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5767,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"31180:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5769,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5764,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"31158:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"31158:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:20","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5776,"nodeType":"ExpressionStatement","src":"31153:48:20"},{"expression":{"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5777,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"31276:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5780,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"31298:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5781,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"31303:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:20","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5778,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"31281:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"31281:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5790,"nodeType":"ExpressionStatement","src":"31276:44:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5791,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"31426:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5794,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5797,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"31453:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5798,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"31458:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5800,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5795,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"31436:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"31436:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5737,"id":5805,"nodeType":"Return","src":"31418:50:20"}]},"documentation":{"id":5731,"nodeType":"StructuredDocumentation","src":"30488:246:20","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5807,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:20","nodeType":"FunctionDefinition","parameters":{"id":5734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5733,"mutability":"mutable","name":"x","nameLocation":"30763:1:20","nodeType":"VariableDeclaration","scope":5807,"src":"30755:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5732,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:20"},"returnParameters":{"id":5737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5736,"mutability":"mutable","name":"r","nameLocation":"30797:1:20","nodeType":"VariableDeclaration","scope":5807,"src":"30789:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5735,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:20"},"scope":5864,"src":"30739:736:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5843,"nodeType":"Block","src":"31712:184:20","statements":[{"id":5842,"nodeType":"UncheckedBlock","src":"31722:168:20","statements":[{"assignments":[5819],"declarations":[{"constant":false,"id":5819,"mutability":"mutable","name":"result","nameLocation":"31754:6:20","nodeType":"VariableDeclaration","scope":5842,"src":"31746:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5818,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5823,"initialValue":{"arguments":[{"id":5821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"31770:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5820,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5807,5844],"referencedDeclaration":5807,"src":"31763:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5824,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"31797:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5828,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"31839:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"}],"id":5827,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"31822:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4255_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5831,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"31858:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5834,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"31873:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5825,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"31806:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"31806:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5817,"id":5841,"nodeType":"Return","src":"31790:89:20"}]}]},"documentation":{"id":5808,"nodeType":"StructuredDocumentation","src":"31481:144:20","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5844,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:20","nodeType":"FunctionDefinition","parameters":{"id":5814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5810,"mutability":"mutable","name":"value","nameLocation":"31654:5:20","nodeType":"VariableDeclaration","scope":5844,"src":"31646:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5809,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5813,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:20","nodeType":"VariableDeclaration","scope":5844,"src":"31661:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"},"typeName":{"id":5812,"nodeType":"UserDefinedTypeName","pathNode":{"id":5811,"name":"Rounding","nameLocations":["31661:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":4255,"src":"31661:8:20"},"referencedDeclaration":4255,"src":"31661:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:20"},"returnParameters":{"id":5817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5844,"src":"31703:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5815,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:20"},"scope":5864,"src":"31630:266:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5862,"nodeType":"Block","src":"32094:48:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5855,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5848,"src":"32117:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"}],"id":5854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5853,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:20","typeDescriptions":{}}},"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5852,"id":5861,"nodeType":"Return","src":"32104:31:20"}]},"documentation":{"id":5845,"nodeType":"StructuredDocumentation","src":"31902:113:20","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5863,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:20","nodeType":"FunctionDefinition","parameters":{"id":5849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5848,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:20","nodeType":"VariableDeclaration","scope":5863,"src":"32046:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"},"typeName":{"id":5847,"nodeType":"UserDefinedTypeName","pathNode":{"id":5846,"name":"Rounding","nameLocations":["32046:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":4255,"src":"32046:8:20"},"referencedDeclaration":4255,"src":"32046:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4255","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:20"},"returnParameters":{"id":5852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5863,"src":"32088:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5850,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:20"},"scope":5864,"src":"32020:122:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5865,"src":"281:31863:20","usedErrors":[],"usedEvents":[]}],"src":"103:32042:20"},"id":20},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7629]},"id":7630,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5866,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5867,"nodeType":"StructuredDocumentation","src":"218:550:21","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7629,"linearizedBaseContracts":[7629],"name":"SafeCast","nameLocation":"777:8:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5868,"nodeType":"StructuredDocumentation","src":"792:68:21","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5874,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:21","nodeType":"ErrorDefinition","parameters":{"id":5873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5870,"mutability":"mutable","name":"bits","nameLocation":"908:4:21","nodeType":"VariableDeclaration","scope":5874,"src":"902:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5869,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5872,"mutability":"mutable","name":"value","nameLocation":"922:5:21","nodeType":"VariableDeclaration","scope":5874,"src":"914:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5871,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:21"},"src":"865:64:21"},{"documentation":{"id":5875,"nodeType":"StructuredDocumentation","src":"935:75:21","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5879,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:21","nodeType":"ErrorDefinition","parameters":{"id":5878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5877,"mutability":"mutable","name":"value","nameLocation":"1056:5:21","nodeType":"VariableDeclaration","scope":5879,"src":"1049:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5876,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:21"},"src":"1015:48:21"},{"documentation":{"id":5880,"nodeType":"StructuredDocumentation","src":"1069:67:21","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5886,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:21","nodeType":"ErrorDefinition","parameters":{"id":5885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5882,"mutability":"mutable","name":"bits","nameLocation":"1183:4:21","nodeType":"VariableDeclaration","scope":5886,"src":"1177:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5881,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5884,"mutability":"mutable","name":"value","nameLocation":"1196:5:21","nodeType":"VariableDeclaration","scope":5886,"src":"1189:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5883,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:21"},"src":"1141:62:21"},{"documentation":{"id":5887,"nodeType":"StructuredDocumentation","src":"1209:75:21","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5891,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:21","nodeType":"ErrorDefinition","parameters":{"id":5890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5889,"mutability":"mutable","name":"value","nameLocation":"1331:5:21","nodeType":"VariableDeclaration","scope":5891,"src":"1323:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:21"},"src":"1289:49:21"},{"body":{"id":5918,"nodeType":"Block","src":"1695:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"1709:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5901,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5900,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:21","memberName":"max","nodeType":"MemberAccess","src":"1717:17:21","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5912,"nodeType":"IfStatement","src":"1705:105:21","trueBody":{"id":5911,"nodeType":"Block","src":"1736:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:21","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"1793:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5906,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"1757:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5910,"nodeType":"RevertStatement","src":"1750:49:21"}]}},{"expression":{"arguments":[{"id":5915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"1834:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5913,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:21","typeDescriptions":{}}},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5898,"id":5917,"nodeType":"Return","src":"1819:21:21"}]},"documentation":{"id":5892,"nodeType":"StructuredDocumentation","src":"1344:280:21","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5919,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:21","nodeType":"FunctionDefinition","parameters":{"id":5895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5894,"mutability":"mutable","name":"value","nameLocation":"1656:5:21","nodeType":"VariableDeclaration","scope":5919,"src":"1648:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5893,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:21"},"returnParameters":{"id":5898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5919,"src":"1686:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5896,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:21","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:21"},"scope":7629,"src":"1629:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5946,"nodeType":"Block","src":"2204:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"2218:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5929,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5928,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:21","memberName":"max","nodeType":"MemberAccess","src":"2226:17:21","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5940,"nodeType":"IfStatement","src":"2214:105:21","trueBody":{"id":5939,"nodeType":"Block","src":"2245:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:21","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"2302:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5934,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"2266:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5938,"nodeType":"RevertStatement","src":"2259:49:21"}]}},{"expression":{"arguments":[{"id":5943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"2343:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5941,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:21","typeDescriptions":{}}},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5926,"id":5945,"nodeType":"Return","src":"2328:21:21"}]},"documentation":{"id":5920,"nodeType":"StructuredDocumentation","src":"1853:280:21","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5947,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:21","nodeType":"FunctionDefinition","parameters":{"id":5923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5922,"mutability":"mutable","name":"value","nameLocation":"2165:5:21","nodeType":"VariableDeclaration","scope":5947,"src":"2157:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5921,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:21"},"returnParameters":{"id":5926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5947,"src":"2195:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5924,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:21","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:21"},"scope":7629,"src":"2138:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5974,"nodeType":"Block","src":"2713:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"2727:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5957,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5956,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:21","memberName":"max","nodeType":"MemberAccess","src":"2735:17:21","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5968,"nodeType":"IfStatement","src":"2723:105:21","trueBody":{"id":5967,"nodeType":"Block","src":"2754:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:21","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"2811:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5962,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"2775:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5966,"nodeType":"RevertStatement","src":"2768:49:21"}]}},{"expression":{"arguments":[{"id":5971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"2852:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5969,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:21","typeDescriptions":{}}},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5954,"id":5973,"nodeType":"Return","src":"2837:21:21"}]},"documentation":{"id":5948,"nodeType":"StructuredDocumentation","src":"2362:280:21","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5975,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:21","nodeType":"FunctionDefinition","parameters":{"id":5951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5950,"mutability":"mutable","name":"value","nameLocation":"2674:5:21","nodeType":"VariableDeclaration","scope":5975,"src":"2666:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5949,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:21"},"returnParameters":{"id":5954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5975,"src":"2704:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5952,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:21","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:21"},"scope":7629,"src":"2647:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6002,"nodeType":"Block","src":"3222:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"3236:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5985,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5984,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:21","memberName":"max","nodeType":"MemberAccess","src":"3244:17:21","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5996,"nodeType":"IfStatement","src":"3232:105:21","trueBody":{"id":5995,"nodeType":"Block","src":"3263:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:21","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"3320:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5990,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"3284:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5994,"nodeType":"RevertStatement","src":"3277:49:21"}]}},{"expression":{"arguments":[{"id":5999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"3361:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5997,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:21","typeDescriptions":{}}},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5982,"id":6001,"nodeType":"Return","src":"3346:21:21"}]},"documentation":{"id":5976,"nodeType":"StructuredDocumentation","src":"2871:280:21","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6003,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:21","nodeType":"FunctionDefinition","parameters":{"id":5979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5978,"mutability":"mutable","name":"value","nameLocation":"3183:5:21","nodeType":"VariableDeclaration","scope":6003,"src":"3175:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5977,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:21"},"returnParameters":{"id":5982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6003,"src":"3213:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5980,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:21","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:21"},"scope":7629,"src":"3156:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6030,"nodeType":"Block","src":"3731:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"3745:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6013,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6012,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:21","memberName":"max","nodeType":"MemberAccess","src":"3753:17:21","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6024,"nodeType":"IfStatement","src":"3741:105:21","trueBody":{"id":6023,"nodeType":"Block","src":"3772:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:21","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"3829:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6018,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"3793:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6022,"nodeType":"RevertStatement","src":"3786:49:21"}]}},{"expression":{"arguments":[{"id":6027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"3870:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6025,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:21","typeDescriptions":{}}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6010,"id":6029,"nodeType":"Return","src":"3855:21:21"}]},"documentation":{"id":6004,"nodeType":"StructuredDocumentation","src":"3380:280:21","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6031,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:21","nodeType":"FunctionDefinition","parameters":{"id":6007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6006,"mutability":"mutable","name":"value","nameLocation":"3692:5:21","nodeType":"VariableDeclaration","scope":6031,"src":"3684:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6005,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:21"},"returnParameters":{"id":6010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6031,"src":"3722:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6008,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:21","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:21"},"scope":7629,"src":"3665:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6058,"nodeType":"Block","src":"4240:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"4254:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6041,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6040,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:21","memberName":"max","nodeType":"MemberAccess","src":"4262:17:21","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6052,"nodeType":"IfStatement","src":"4250:105:21","trueBody":{"id":6051,"nodeType":"Block","src":"4281:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:21","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"4338:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6046,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"4302:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6050,"nodeType":"RevertStatement","src":"4295:49:21"}]}},{"expression":{"arguments":[{"id":6055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"4379:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6053,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:21","typeDescriptions":{}}},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6038,"id":6057,"nodeType":"Return","src":"4364:21:21"}]},"documentation":{"id":6032,"nodeType":"StructuredDocumentation","src":"3889:280:21","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6059,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:21","nodeType":"FunctionDefinition","parameters":{"id":6035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6034,"mutability":"mutable","name":"value","nameLocation":"4201:5:21","nodeType":"VariableDeclaration","scope":6059,"src":"4193:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6033,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:21"},"returnParameters":{"id":6038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6059,"src":"4231:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6036,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:21","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:21"},"scope":7629,"src":"4174:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6086,"nodeType":"Block","src":"4749:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"4763:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6069,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6068,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:21","memberName":"max","nodeType":"MemberAccess","src":"4771:17:21","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6080,"nodeType":"IfStatement","src":"4759:105:21","trueBody":{"id":6079,"nodeType":"Block","src":"4790:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:21","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"4847:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6074,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"4811:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6078,"nodeType":"RevertStatement","src":"4804:49:21"}]}},{"expression":{"arguments":[{"id":6083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"4888:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6081,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:21","typeDescriptions":{}}},"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6066,"id":6085,"nodeType":"Return","src":"4873:21:21"}]},"documentation":{"id":6060,"nodeType":"StructuredDocumentation","src":"4398:280:21","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6087,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:21","nodeType":"FunctionDefinition","parameters":{"id":6063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6062,"mutability":"mutable","name":"value","nameLocation":"4710:5:21","nodeType":"VariableDeclaration","scope":6087,"src":"4702:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6061,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:21"},"returnParameters":{"id":6066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6087,"src":"4740:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6064,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:21","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:21"},"scope":7629,"src":"4683:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6114,"nodeType":"Block","src":"5258:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"5272:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6097,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6096,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:21","memberName":"max","nodeType":"MemberAccess","src":"5280:17:21","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6108,"nodeType":"IfStatement","src":"5268:105:21","trueBody":{"id":6107,"nodeType":"Block","src":"5299:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:21","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"5356:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6102,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"5320:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6106,"nodeType":"RevertStatement","src":"5313:49:21"}]}},{"expression":{"arguments":[{"id":6111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"5397:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6109,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:21","typeDescriptions":{}}},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6094,"id":6113,"nodeType":"Return","src":"5382:21:21"}]},"documentation":{"id":6088,"nodeType":"StructuredDocumentation","src":"4907:280:21","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6115,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:21","nodeType":"FunctionDefinition","parameters":{"id":6091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6090,"mutability":"mutable","name":"value","nameLocation":"5219:5:21","nodeType":"VariableDeclaration","scope":6115,"src":"5211:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6089,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:21"},"returnParameters":{"id":6094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6115,"src":"5249:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6092,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:21","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:21"},"scope":7629,"src":"5192:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6142,"nodeType":"Block","src":"5767:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"5781:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6125,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6124,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:21","memberName":"max","nodeType":"MemberAccess","src":"5789:17:21","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6136,"nodeType":"IfStatement","src":"5777:105:21","trueBody":{"id":6135,"nodeType":"Block","src":"5808:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:21","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"5865:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6130,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"5829:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6134,"nodeType":"RevertStatement","src":"5822:49:21"}]}},{"expression":{"arguments":[{"id":6139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"5906:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6137,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:21","typeDescriptions":{}}},"id":6140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6122,"id":6141,"nodeType":"Return","src":"5891:21:21"}]},"documentation":{"id":6116,"nodeType":"StructuredDocumentation","src":"5416:280:21","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6143,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:21","nodeType":"FunctionDefinition","parameters":{"id":6119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6118,"mutability":"mutable","name":"value","nameLocation":"5728:5:21","nodeType":"VariableDeclaration","scope":6143,"src":"5720:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6117,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:21"},"returnParameters":{"id":6122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6143,"src":"5758:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6120,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:21","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:21"},"scope":7629,"src":"5701:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6170,"nodeType":"Block","src":"6276:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"6290:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6153,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6152,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:21","memberName":"max","nodeType":"MemberAccess","src":"6298:17:21","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6164,"nodeType":"IfStatement","src":"6286:105:21","trueBody":{"id":6163,"nodeType":"Block","src":"6317:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:21","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"6374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6158,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"6338:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6162,"nodeType":"RevertStatement","src":"6331:49:21"}]}},{"expression":{"arguments":[{"id":6167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"6415:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6165,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:21","typeDescriptions":{}}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6150,"id":6169,"nodeType":"Return","src":"6400:21:21"}]},"documentation":{"id":6144,"nodeType":"StructuredDocumentation","src":"5925:280:21","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6171,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:21","nodeType":"FunctionDefinition","parameters":{"id":6147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6146,"mutability":"mutable","name":"value","nameLocation":"6237:5:21","nodeType":"VariableDeclaration","scope":6171,"src":"6229:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6145,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:21"},"returnParameters":{"id":6150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6171,"src":"6267:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6148,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:21","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:21"},"scope":7629,"src":"6210:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6198,"nodeType":"Block","src":"6785:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"6799:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6181,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6180,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:21","memberName":"max","nodeType":"MemberAccess","src":"6807:17:21","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6192,"nodeType":"IfStatement","src":"6795:105:21","trueBody":{"id":6191,"nodeType":"Block","src":"6826:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:21","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"6883:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6186,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"6847:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6190,"nodeType":"RevertStatement","src":"6840:49:21"}]}},{"expression":{"arguments":[{"id":6195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"6924:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6193,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:21","typeDescriptions":{}}},"id":6196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6178,"id":6197,"nodeType":"Return","src":"6909:21:21"}]},"documentation":{"id":6172,"nodeType":"StructuredDocumentation","src":"6434:280:21","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6199,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:21","nodeType":"FunctionDefinition","parameters":{"id":6175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6174,"mutability":"mutable","name":"value","nameLocation":"6746:5:21","nodeType":"VariableDeclaration","scope":6199,"src":"6738:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6173,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:21"},"returnParameters":{"id":6178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6199,"src":"6776:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6176,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:21","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:21"},"scope":7629,"src":"6719:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6226,"nodeType":"Block","src":"7294:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"7308:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6209,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6208,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:21","memberName":"max","nodeType":"MemberAccess","src":"7316:17:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6220,"nodeType":"IfStatement","src":"7304:105:21","trueBody":{"id":6219,"nodeType":"Block","src":"7335:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:21","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"7392:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6214,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"7356:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6218,"nodeType":"RevertStatement","src":"7349:49:21"}]}},{"expression":{"arguments":[{"id":6223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"7433:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6221,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:21","typeDescriptions":{}}},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6206,"id":6225,"nodeType":"Return","src":"7418:21:21"}]},"documentation":{"id":6200,"nodeType":"StructuredDocumentation","src":"6943:280:21","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6227,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:21","nodeType":"FunctionDefinition","parameters":{"id":6203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6202,"mutability":"mutable","name":"value","nameLocation":"7255:5:21","nodeType":"VariableDeclaration","scope":6227,"src":"7247:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6201,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:21"},"returnParameters":{"id":6206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6227,"src":"7285:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6204,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:21"},"scope":7629,"src":"7228:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6254,"nodeType":"Block","src":"7803:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"7817:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6237,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6236,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:21","memberName":"max","nodeType":"MemberAccess","src":"7825:17:21","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6248,"nodeType":"IfStatement","src":"7813:105:21","trueBody":{"id":6247,"nodeType":"Block","src":"7844:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:21","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"7901:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6242,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"7865:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6246,"nodeType":"RevertStatement","src":"7858:49:21"}]}},{"expression":{"arguments":[{"id":6251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"7942:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6249,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:21","typeDescriptions":{}}},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6234,"id":6253,"nodeType":"Return","src":"7927:21:21"}]},"documentation":{"id":6228,"nodeType":"StructuredDocumentation","src":"7452:280:21","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6255,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:21","nodeType":"FunctionDefinition","parameters":{"id":6231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6230,"mutability":"mutable","name":"value","nameLocation":"7764:5:21","nodeType":"VariableDeclaration","scope":6255,"src":"7756:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6229,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:21"},"returnParameters":{"id":6234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6255,"src":"7794:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6232,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:21","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:21"},"scope":7629,"src":"7737:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6282,"nodeType":"Block","src":"8312:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"8326:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6265,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6264,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:21","memberName":"max","nodeType":"MemberAccess","src":"8334:17:21","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6276,"nodeType":"IfStatement","src":"8322:105:21","trueBody":{"id":6275,"nodeType":"Block","src":"8353:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:21","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"8410:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6270,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"8374:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6274,"nodeType":"RevertStatement","src":"8367:49:21"}]}},{"expression":{"arguments":[{"id":6279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"8451:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6277,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:21","typeDescriptions":{}}},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6262,"id":6281,"nodeType":"Return","src":"8436:21:21"}]},"documentation":{"id":6256,"nodeType":"StructuredDocumentation","src":"7961:280:21","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6283,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:21","nodeType":"FunctionDefinition","parameters":{"id":6259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6258,"mutability":"mutable","name":"value","nameLocation":"8273:5:21","nodeType":"VariableDeclaration","scope":6283,"src":"8265:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6257,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:21"},"returnParameters":{"id":6262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6283,"src":"8303:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6260,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:21","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:21"},"scope":7629,"src":"8246:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6310,"nodeType":"Block","src":"8821:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"8835:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6293,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6292,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:21","memberName":"max","nodeType":"MemberAccess","src":"8843:17:21","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6304,"nodeType":"IfStatement","src":"8831:105:21","trueBody":{"id":6303,"nodeType":"Block","src":"8862:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:21","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"8919:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6298,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"8883:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6302,"nodeType":"RevertStatement","src":"8876:49:21"}]}},{"expression":{"arguments":[{"id":6307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"8960:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6305,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:21","typeDescriptions":{}}},"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6290,"id":6309,"nodeType":"Return","src":"8945:21:21"}]},"documentation":{"id":6284,"nodeType":"StructuredDocumentation","src":"8470:280:21","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6311,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:21","nodeType":"FunctionDefinition","parameters":{"id":6287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6286,"mutability":"mutable","name":"value","nameLocation":"8782:5:21","nodeType":"VariableDeclaration","scope":6311,"src":"8774:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6285,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:21"},"returnParameters":{"id":6290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6311,"src":"8812:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6288,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:21","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:21"},"scope":7629,"src":"8755:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6338,"nodeType":"Block","src":"9330:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"9344:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6321,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6320,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:21","memberName":"max","nodeType":"MemberAccess","src":"9352:17:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6332,"nodeType":"IfStatement","src":"9340:105:21","trueBody":{"id":6331,"nodeType":"Block","src":"9371:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"9428:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6326,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"9392:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6330,"nodeType":"RevertStatement","src":"9385:49:21"}]}},{"expression":{"arguments":[{"id":6335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"9469:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6333,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:21","typeDescriptions":{}}},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6318,"id":6337,"nodeType":"Return","src":"9454:21:21"}]},"documentation":{"id":6312,"nodeType":"StructuredDocumentation","src":"8979:280:21","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6339,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:21","nodeType":"FunctionDefinition","parameters":{"id":6315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6314,"mutability":"mutable","name":"value","nameLocation":"9291:5:21","nodeType":"VariableDeclaration","scope":6339,"src":"9283:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6313,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:21"},"returnParameters":{"id":6318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6339,"src":"9321:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6316,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:21"},"scope":7629,"src":"9264:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6366,"nodeType":"Block","src":"9839:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"9853:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6349,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6348,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:21","memberName":"max","nodeType":"MemberAccess","src":"9861:17:21","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6360,"nodeType":"IfStatement","src":"9849:105:21","trueBody":{"id":6359,"nodeType":"Block","src":"9880:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:21","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"9937:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6354,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"9901:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6358,"nodeType":"RevertStatement","src":"9894:49:21"}]}},{"expression":{"arguments":[{"id":6363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"9978:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6361,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:21","typeDescriptions":{}}},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6346,"id":6365,"nodeType":"Return","src":"9963:21:21"}]},"documentation":{"id":6340,"nodeType":"StructuredDocumentation","src":"9488:280:21","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6367,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:21","nodeType":"FunctionDefinition","parameters":{"id":6343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6342,"mutability":"mutable","name":"value","nameLocation":"9800:5:21","nodeType":"VariableDeclaration","scope":6367,"src":"9792:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6341,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:21"},"returnParameters":{"id":6346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6367,"src":"9830:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6344,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:21","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:21"},"scope":7629,"src":"9773:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6394,"nodeType":"Block","src":"10348:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"10362:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6377,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6376,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:21","memberName":"max","nodeType":"MemberAccess","src":"10370:17:21","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6388,"nodeType":"IfStatement","src":"10358:105:21","trueBody":{"id":6387,"nodeType":"Block","src":"10389:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:21","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"10446:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6382,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"10410:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6386,"nodeType":"RevertStatement","src":"10403:49:21"}]}},{"expression":{"arguments":[{"id":6391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"10487:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6389,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:21","typeDescriptions":{}}},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6374,"id":6393,"nodeType":"Return","src":"10472:21:21"}]},"documentation":{"id":6368,"nodeType":"StructuredDocumentation","src":"9997:280:21","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6395,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:21","nodeType":"FunctionDefinition","parameters":{"id":6371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6370,"mutability":"mutable","name":"value","nameLocation":"10309:5:21","nodeType":"VariableDeclaration","scope":6395,"src":"10301:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6369,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:21"},"returnParameters":{"id":6374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6395,"src":"10339:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6372,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:21","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:21"},"scope":7629,"src":"10282:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6422,"nodeType":"Block","src":"10857:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"10871:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6405,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6404,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:21","memberName":"max","nodeType":"MemberAccess","src":"10879:17:21","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6416,"nodeType":"IfStatement","src":"10867:105:21","trueBody":{"id":6415,"nodeType":"Block","src":"10898:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:21","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"10955:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6410,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"10919:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6414,"nodeType":"RevertStatement","src":"10912:49:21"}]}},{"expression":{"arguments":[{"id":6419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"10996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6417,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:21","typeDescriptions":{}}},"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6402,"id":6421,"nodeType":"Return","src":"10981:21:21"}]},"documentation":{"id":6396,"nodeType":"StructuredDocumentation","src":"10506:280:21","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6423,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:21","nodeType":"FunctionDefinition","parameters":{"id":6399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6398,"mutability":"mutable","name":"value","nameLocation":"10818:5:21","nodeType":"VariableDeclaration","scope":6423,"src":"10810:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6397,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:21"},"returnParameters":{"id":6402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6423,"src":"10848:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6400,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:21","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:21"},"scope":7629,"src":"10791:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6450,"nodeType":"Block","src":"11360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"11374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6433,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6432,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:21","memberName":"max","nodeType":"MemberAccess","src":"11382:16:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6444,"nodeType":"IfStatement","src":"11370:103:21","trueBody":{"id":6443,"nodeType":"Block","src":"11400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"11456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6438,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"11421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6442,"nodeType":"RevertStatement","src":"11414:48:21"}]}},{"expression":{"arguments":[{"id":6447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"11496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6445,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:21","typeDescriptions":{}}},"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6430,"id":6449,"nodeType":"Return","src":"11482:20:21"}]},"documentation":{"id":6424,"nodeType":"StructuredDocumentation","src":"11015:276:21","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6451,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:21","nodeType":"FunctionDefinition","parameters":{"id":6427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6426,"mutability":"mutable","name":"value","nameLocation":"11322:5:21","nodeType":"VariableDeclaration","scope":6451,"src":"11314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6425,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:21"},"returnParameters":{"id":6430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6451,"src":"11352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6428,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:21"},"scope":7629,"src":"11296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6478,"nodeType":"Block","src":"11860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"11874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6461,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6460,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:21","memberName":"max","nodeType":"MemberAccess","src":"11882:16:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6472,"nodeType":"IfStatement","src":"11870:103:21","trueBody":{"id":6471,"nodeType":"Block","src":"11900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"11956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6466,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"11921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6470,"nodeType":"RevertStatement","src":"11914:48:21"}]}},{"expression":{"arguments":[{"id":6475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"11996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6473,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:21","typeDescriptions":{}}},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6458,"id":6477,"nodeType":"Return","src":"11982:20:21"}]},"documentation":{"id":6452,"nodeType":"StructuredDocumentation","src":"11515:276:21","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6479,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:21","nodeType":"FunctionDefinition","parameters":{"id":6455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6454,"mutability":"mutable","name":"value","nameLocation":"11822:5:21","nodeType":"VariableDeclaration","scope":6479,"src":"11814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6453,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:21"},"returnParameters":{"id":6458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6479,"src":"11852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6456,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:21"},"scope":7629,"src":"11796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6506,"nodeType":"Block","src":"12360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"12374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6489,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6488,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:21","memberName":"max","nodeType":"MemberAccess","src":"12382:16:21","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6500,"nodeType":"IfStatement","src":"12370:103:21","trueBody":{"id":6499,"nodeType":"Block","src":"12400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"12456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6494,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"12421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6498,"nodeType":"RevertStatement","src":"12414:48:21"}]}},{"expression":{"arguments":[{"id":6503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"12496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6501,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:21","typeDescriptions":{}}},"id":6504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6486,"id":6505,"nodeType":"Return","src":"12482:20:21"}]},"documentation":{"id":6480,"nodeType":"StructuredDocumentation","src":"12015:276:21","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6507,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:21","nodeType":"FunctionDefinition","parameters":{"id":6483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6482,"mutability":"mutable","name":"value","nameLocation":"12322:5:21","nodeType":"VariableDeclaration","scope":6507,"src":"12314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6481,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:21"},"returnParameters":{"id":6486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6507,"src":"12352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6484,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:21","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:21"},"scope":7629,"src":"12296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6534,"nodeType":"Block","src":"12860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6510,"src":"12874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6517,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6516,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:21","memberName":"max","nodeType":"MemberAccess","src":"12882:16:21","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6528,"nodeType":"IfStatement","src":"12870:103:21","trueBody":{"id":6527,"nodeType":"Block","src":"12900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6510,"src":"12956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6522,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"12921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6526,"nodeType":"RevertStatement","src":"12914:48:21"}]}},{"expression":{"arguments":[{"id":6531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6510,"src":"12996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6529,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:21","typeDescriptions":{}}},"id":6532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6514,"id":6533,"nodeType":"Return","src":"12982:20:21"}]},"documentation":{"id":6508,"nodeType":"StructuredDocumentation","src":"12515:276:21","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6535,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:21","nodeType":"FunctionDefinition","parameters":{"id":6511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6510,"mutability":"mutable","name":"value","nameLocation":"12822:5:21","nodeType":"VariableDeclaration","scope":6535,"src":"12814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6509,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:21"},"returnParameters":{"id":6514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6535,"src":"12852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6512,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:21","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:21"},"scope":7629,"src":"12796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6562,"nodeType":"Block","src":"13360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"13374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6545,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6544,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:21","memberName":"max","nodeType":"MemberAccess","src":"13382:16:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6556,"nodeType":"IfStatement","src":"13370:103:21","trueBody":{"id":6555,"nodeType":"Block","src":"13400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"13456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6550,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"13421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6554,"nodeType":"RevertStatement","src":"13414:48:21"}]}},{"expression":{"arguments":[{"id":6559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"13496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6557,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:21","typeDescriptions":{}}},"id":6560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6542,"id":6561,"nodeType":"Return","src":"13482:20:21"}]},"documentation":{"id":6536,"nodeType":"StructuredDocumentation","src":"13015:276:21","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6563,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:21","nodeType":"FunctionDefinition","parameters":{"id":6539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6538,"mutability":"mutable","name":"value","nameLocation":"13322:5:21","nodeType":"VariableDeclaration","scope":6563,"src":"13314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6537,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:21"},"returnParameters":{"id":6542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6563,"src":"13352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6540,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:21"},"scope":7629,"src":"13296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6590,"nodeType":"Block","src":"13860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"13874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6573,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6572,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:21","memberName":"max","nodeType":"MemberAccess","src":"13882:16:21","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6584,"nodeType":"IfStatement","src":"13870:103:21","trueBody":{"id":6583,"nodeType":"Block","src":"13900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"13956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6578,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"13921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6582,"nodeType":"RevertStatement","src":"13914:48:21"}]}},{"expression":{"arguments":[{"id":6587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"13996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6585,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:21","typeDescriptions":{}}},"id":6588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6570,"id":6589,"nodeType":"Return","src":"13982:20:21"}]},"documentation":{"id":6564,"nodeType":"StructuredDocumentation","src":"13515:276:21","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6591,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:21","nodeType":"FunctionDefinition","parameters":{"id":6567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6566,"mutability":"mutable","name":"value","nameLocation":"13822:5:21","nodeType":"VariableDeclaration","scope":6591,"src":"13814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6565,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:21"},"returnParameters":{"id":6570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6591,"src":"13852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6568,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:21","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:21"},"scope":7629,"src":"13796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6618,"nodeType":"Block","src":"14360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"14374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6601,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6600,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:21","memberName":"max","nodeType":"MemberAccess","src":"14382:16:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6612,"nodeType":"IfStatement","src":"14370:103:21","trueBody":{"id":6611,"nodeType":"Block","src":"14400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"14456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6606,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"14421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6610,"nodeType":"RevertStatement","src":"14414:48:21"}]}},{"expression":{"arguments":[{"id":6615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"14496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6613,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:21","typeDescriptions":{}}},"id":6616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6598,"id":6617,"nodeType":"Return","src":"14482:20:21"}]},"documentation":{"id":6592,"nodeType":"StructuredDocumentation","src":"14015:276:21","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6619,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:21","nodeType":"FunctionDefinition","parameters":{"id":6595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6594,"mutability":"mutable","name":"value","nameLocation":"14322:5:21","nodeType":"VariableDeclaration","scope":6619,"src":"14314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6593,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:21"},"returnParameters":{"id":6598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6619,"src":"14352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6596,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:21"},"scope":7629,"src":"14296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6646,"nodeType":"Block","src":"14860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"14874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6629,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6628,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:21","memberName":"max","nodeType":"MemberAccess","src":"14882:16:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6640,"nodeType":"IfStatement","src":"14870:103:21","trueBody":{"id":6639,"nodeType":"Block","src":"14900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"14956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6634,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"14921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6638,"nodeType":"RevertStatement","src":"14914:48:21"}]}},{"expression":{"arguments":[{"id":6643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"14996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6641,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:21","typeDescriptions":{}}},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6626,"id":6645,"nodeType":"Return","src":"14982:20:21"}]},"documentation":{"id":6620,"nodeType":"StructuredDocumentation","src":"14515:276:21","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6647,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:21","nodeType":"FunctionDefinition","parameters":{"id":6623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6622,"mutability":"mutable","name":"value","nameLocation":"14822:5:21","nodeType":"VariableDeclaration","scope":6647,"src":"14814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6621,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:21"},"returnParameters":{"id":6626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6647,"src":"14852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6624,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:21"},"scope":7629,"src":"14796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6674,"nodeType":"Block","src":"15360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"15374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6657,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6656,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:21","memberName":"max","nodeType":"MemberAccess","src":"15382:16:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6668,"nodeType":"IfStatement","src":"15370:103:21","trueBody":{"id":6667,"nodeType":"Block","src":"15400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"15456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6662,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"15421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6666,"nodeType":"RevertStatement","src":"15414:48:21"}]}},{"expression":{"arguments":[{"id":6671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"15496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6669,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:21","typeDescriptions":{}}},"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6654,"id":6673,"nodeType":"Return","src":"15482:20:21"}]},"documentation":{"id":6648,"nodeType":"StructuredDocumentation","src":"15015:276:21","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6675,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:21","nodeType":"FunctionDefinition","parameters":{"id":6651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6650,"mutability":"mutable","name":"value","nameLocation":"15322:5:21","nodeType":"VariableDeclaration","scope":6675,"src":"15314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6649,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:21"},"returnParameters":{"id":6654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6675,"src":"15352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6652,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:21"},"scope":7629,"src":"15296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6702,"nodeType":"Block","src":"15860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"15874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6685,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6684,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:21","memberName":"max","nodeType":"MemberAccess","src":"15882:16:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6696,"nodeType":"IfStatement","src":"15870:103:21","trueBody":{"id":6695,"nodeType":"Block","src":"15900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"15956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6690,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"15921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6694,"nodeType":"RevertStatement","src":"15914:48:21"}]}},{"expression":{"arguments":[{"id":6699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"15996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6697,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:21","typeDescriptions":{}}},"id":6700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6682,"id":6701,"nodeType":"Return","src":"15982:20:21"}]},"documentation":{"id":6676,"nodeType":"StructuredDocumentation","src":"15515:276:21","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6703,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:21","nodeType":"FunctionDefinition","parameters":{"id":6679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6678,"mutability":"mutable","name":"value","nameLocation":"15822:5:21","nodeType":"VariableDeclaration","scope":6703,"src":"15814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6677,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:21"},"returnParameters":{"id":6682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6703,"src":"15852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6680,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:21"},"scope":7629,"src":"15796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6730,"nodeType":"Block","src":"16360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"16374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6713,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6712,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:21","memberName":"max","nodeType":"MemberAccess","src":"16382:16:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6724,"nodeType":"IfStatement","src":"16370:103:21","trueBody":{"id":6723,"nodeType":"Block","src":"16400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"16456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6718,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"16421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6722,"nodeType":"RevertStatement","src":"16414:48:21"}]}},{"expression":{"arguments":[{"id":6727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"16496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6725,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:21","typeDescriptions":{}}},"id":6728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6710,"id":6729,"nodeType":"Return","src":"16482:20:21"}]},"documentation":{"id":6704,"nodeType":"StructuredDocumentation","src":"16015:276:21","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6731,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:21","nodeType":"FunctionDefinition","parameters":{"id":6707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6706,"mutability":"mutable","name":"value","nameLocation":"16322:5:21","nodeType":"VariableDeclaration","scope":6731,"src":"16314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6705,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:21"},"returnParameters":{"id":6710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6731,"src":"16352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6708,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:21"},"scope":7629,"src":"16296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6758,"nodeType":"Block","src":"16854:146:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6734,"src":"16868:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6741,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6740,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:21","memberName":"max","nodeType":"MemberAccess","src":"16876:15:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6752,"nodeType":"IfStatement","src":"16864:101:21","trueBody":{"id":6751,"nodeType":"Block","src":"16893:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6734,"src":"16948:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6746,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"16914:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6750,"nodeType":"RevertStatement","src":"16907:47:21"}]}},{"expression":{"arguments":[{"id":6755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6734,"src":"16987:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6753,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:21","typeDescriptions":{}}},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6738,"id":6757,"nodeType":"Return","src":"16974:19:21"}]},"documentation":{"id":6732,"nodeType":"StructuredDocumentation","src":"16515:272:21","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6759,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:21","nodeType":"FunctionDefinition","parameters":{"id":6735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6734,"mutability":"mutable","name":"value","nameLocation":"16817:5:21","nodeType":"VariableDeclaration","scope":6759,"src":"16809:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6733,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:21"},"returnParameters":{"id":6738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6759,"src":"16847:5:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6736,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:21"},"scope":7629,"src":"16792:208:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6781,"nodeType":"Block","src":"17236:128:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6762,"src":"17250:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6775,"nodeType":"IfStatement","src":"17246:81:21","trueBody":{"id":6774,"nodeType":"Block","src":"17261:66:21","statements":[{"errorCall":{"arguments":[{"id":6771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6762,"src":"17310:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6770,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"17282:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6773,"nodeType":"RevertStatement","src":"17275:41:21"}]}},{"expression":{"arguments":[{"id":6778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6762,"src":"17351:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6776,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:21","typeDescriptions":{}}},"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6766,"id":6780,"nodeType":"Return","src":"17336:21:21"}]},"documentation":{"id":6760,"nodeType":"StructuredDocumentation","src":"17006:160:21","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6782,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:21","nodeType":"FunctionDefinition","parameters":{"id":6763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6762,"mutability":"mutable","name":"value","nameLocation":"17197:5:21","nodeType":"VariableDeclaration","scope":6782,"src":"17190:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6761,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:21"},"returnParameters":{"id":6766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6782,"src":"17227:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6764,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:21"},"scope":7629,"src":"17171:193:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6807,"nodeType":"Block","src":"17761:150:21","statements":[{"expression":{"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6790,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"17771:10:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"17791:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6791,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:21","typeDescriptions":{}}},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6796,"nodeType":"ExpressionStatement","src":"17771:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6797,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"17811:10:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"17825:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6806,"nodeType":"IfStatement","src":"17807:98:21","trueBody":{"id":6805,"nodeType":"Block","src":"17832:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:21","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"17888:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6800,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"17853:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6804,"nodeType":"RevertStatement","src":"17846:48:21"}]}}]},"documentation":{"id":6783,"nodeType":"StructuredDocumentation","src":"17370:312:21","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6808,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:21","nodeType":"FunctionDefinition","parameters":{"id":6786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6785,"mutability":"mutable","name":"value","nameLocation":"17712:5:21","nodeType":"VariableDeclaration","scope":6808,"src":"17705:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6784,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:21"},"returnParameters":{"id":6789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6788,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:21","nodeType":"VariableDeclaration","scope":6808,"src":"17742:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6787,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:21"},"scope":7629,"src":"17687:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6833,"nodeType":"Block","src":"18308:150:21","statements":[{"expression":{"id":6821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6816,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6814,"src":"18318:10:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"18338:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6817,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:21","typeDescriptions":{}}},"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6822,"nodeType":"ExpressionStatement","src":"18318:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6823,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6814,"src":"18358:10:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"18372:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6832,"nodeType":"IfStatement","src":"18354:98:21","trueBody":{"id":6831,"nodeType":"Block","src":"18379:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:21","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"18435:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6826,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"18400:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6830,"nodeType":"RevertStatement","src":"18393:48:21"}]}}]},"documentation":{"id":6809,"nodeType":"StructuredDocumentation","src":"17917:312:21","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6834,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:21","nodeType":"FunctionDefinition","parameters":{"id":6812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6811,"mutability":"mutable","name":"value","nameLocation":"18259:5:21","nodeType":"VariableDeclaration","scope":6834,"src":"18252:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6810,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:21"},"returnParameters":{"id":6815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6814,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:21","nodeType":"VariableDeclaration","scope":6834,"src":"18289:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6813,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:21"},"scope":7629,"src":"18234:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6859,"nodeType":"Block","src":"18855:150:21","statements":[{"expression":{"id":6847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6842,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"18865:10:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"18885:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6843,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:21","typeDescriptions":{}}},"id":6846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6848,"nodeType":"ExpressionStatement","src":"18865:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6849,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"18905:10:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"18919:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6858,"nodeType":"IfStatement","src":"18901:98:21","trueBody":{"id":6857,"nodeType":"Block","src":"18926:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:21","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"18982:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6852,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"18947:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6856,"nodeType":"RevertStatement","src":"18940:48:21"}]}}]},"documentation":{"id":6835,"nodeType":"StructuredDocumentation","src":"18464:312:21","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6860,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:21","nodeType":"FunctionDefinition","parameters":{"id":6838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6837,"mutability":"mutable","name":"value","nameLocation":"18806:5:21","nodeType":"VariableDeclaration","scope":6860,"src":"18799:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6836,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:21"},"returnParameters":{"id":6841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6840,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:21","nodeType":"VariableDeclaration","scope":6860,"src":"18836:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6839,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:21"},"scope":7629,"src":"18781:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6885,"nodeType":"Block","src":"19402:150:21","statements":[{"expression":{"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6868,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"19412:10:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6863,"src":"19432:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6869,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:21","typeDescriptions":{}}},"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6874,"nodeType":"ExpressionStatement","src":"19412:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6875,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"19452:10:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6863,"src":"19466:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6884,"nodeType":"IfStatement","src":"19448:98:21","trueBody":{"id":6883,"nodeType":"Block","src":"19473:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:21","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6863,"src":"19529:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6878,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"19494:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6882,"nodeType":"RevertStatement","src":"19487:48:21"}]}}]},"documentation":{"id":6861,"nodeType":"StructuredDocumentation","src":"19011:312:21","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6886,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:21","nodeType":"FunctionDefinition","parameters":{"id":6864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6863,"mutability":"mutable","name":"value","nameLocation":"19353:5:21","nodeType":"VariableDeclaration","scope":6886,"src":"19346:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6862,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:21"},"returnParameters":{"id":6867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6866,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:21","nodeType":"VariableDeclaration","scope":6886,"src":"19383:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6865,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:21"},"scope":7629,"src":"19328:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6911,"nodeType":"Block","src":"19949:150:21","statements":[{"expression":{"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6894,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6892,"src":"19959:10:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"19979:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6895,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:21","typeDescriptions":{}}},"id":6898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6900,"nodeType":"ExpressionStatement","src":"19959:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6901,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6892,"src":"19999:10:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"20013:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6910,"nodeType":"IfStatement","src":"19995:98:21","trueBody":{"id":6909,"nodeType":"Block","src":"20020:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:21","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"20076:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6904,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"20041:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6908,"nodeType":"RevertStatement","src":"20034:48:21"}]}}]},"documentation":{"id":6887,"nodeType":"StructuredDocumentation","src":"19558:312:21","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6912,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:21","nodeType":"FunctionDefinition","parameters":{"id":6890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6889,"mutability":"mutable","name":"value","nameLocation":"19900:5:21","nodeType":"VariableDeclaration","scope":6912,"src":"19893:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6888,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:21"},"returnParameters":{"id":6893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6892,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:21","nodeType":"VariableDeclaration","scope":6912,"src":"19930:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6891,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:21"},"scope":7629,"src":"19875:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6937,"nodeType":"Block","src":"20496:150:21","statements":[{"expression":{"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6920,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"20506:10:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6915,"src":"20526:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6921,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:21","typeDescriptions":{}}},"id":6924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6926,"nodeType":"ExpressionStatement","src":"20506:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6927,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"20546:10:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6915,"src":"20560:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6936,"nodeType":"IfStatement","src":"20542:98:21","trueBody":{"id":6935,"nodeType":"Block","src":"20567:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:21","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6915,"src":"20623:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6930,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"20588:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6934,"nodeType":"RevertStatement","src":"20581:48:21"}]}}]},"documentation":{"id":6913,"nodeType":"StructuredDocumentation","src":"20105:312:21","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6938,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:21","nodeType":"FunctionDefinition","parameters":{"id":6916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6915,"mutability":"mutable","name":"value","nameLocation":"20447:5:21","nodeType":"VariableDeclaration","scope":6938,"src":"20440:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6914,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:21"},"returnParameters":{"id":6919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6918,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:21","nodeType":"VariableDeclaration","scope":6938,"src":"20477:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6917,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:21"},"scope":7629,"src":"20422:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6963,"nodeType":"Block","src":"21043:150:21","statements":[{"expression":{"id":6951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6946,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"21053:10:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"21073:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6947,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:21","typeDescriptions":{}}},"id":6950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6952,"nodeType":"ExpressionStatement","src":"21053:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6953,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"21093:10:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"21107:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6962,"nodeType":"IfStatement","src":"21089:98:21","trueBody":{"id":6961,"nodeType":"Block","src":"21114:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:21","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"21170:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6956,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"21135:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6960,"nodeType":"RevertStatement","src":"21128:48:21"}]}}]},"documentation":{"id":6939,"nodeType":"StructuredDocumentation","src":"20652:312:21","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6964,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:21","nodeType":"FunctionDefinition","parameters":{"id":6942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6941,"mutability":"mutable","name":"value","nameLocation":"20994:5:21","nodeType":"VariableDeclaration","scope":6964,"src":"20987:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6940,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:21"},"returnParameters":{"id":6945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6944,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:21","nodeType":"VariableDeclaration","scope":6964,"src":"21024:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6943,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:21"},"scope":7629,"src":"20969:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6989,"nodeType":"Block","src":"21590:150:21","statements":[{"expression":{"id":6977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6972,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"21600:10:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6967,"src":"21620:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6973,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:21","typeDescriptions":{}}},"id":6976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6978,"nodeType":"ExpressionStatement","src":"21600:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6979,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"21640:10:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6967,"src":"21654:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6988,"nodeType":"IfStatement","src":"21636:98:21","trueBody":{"id":6987,"nodeType":"Block","src":"21661:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:21","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6967,"src":"21717:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6982,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"21682:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6986,"nodeType":"RevertStatement","src":"21675:48:21"}]}}]},"documentation":{"id":6965,"nodeType":"StructuredDocumentation","src":"21199:312:21","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6990,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:21","nodeType":"FunctionDefinition","parameters":{"id":6968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6967,"mutability":"mutable","name":"value","nameLocation":"21541:5:21","nodeType":"VariableDeclaration","scope":6990,"src":"21534:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6966,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:21"},"returnParameters":{"id":6971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6970,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:21","nodeType":"VariableDeclaration","scope":6990,"src":"21571:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6969,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:21"},"scope":7629,"src":"21516:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7015,"nodeType":"Block","src":"22137:150:21","statements":[{"expression":{"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6998,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"22147:10:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"22167:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6999,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:21","typeDescriptions":{}}},"id":7002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7004,"nodeType":"ExpressionStatement","src":"22147:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7005,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"22187:10:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"22201:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7014,"nodeType":"IfStatement","src":"22183:98:21","trueBody":{"id":7013,"nodeType":"Block","src":"22208:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:21","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"22264:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7008,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"22229:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7012,"nodeType":"RevertStatement","src":"22222:48:21"}]}}]},"documentation":{"id":6991,"nodeType":"StructuredDocumentation","src":"21746:312:21","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7016,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:21","nodeType":"FunctionDefinition","parameters":{"id":6994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6993,"mutability":"mutable","name":"value","nameLocation":"22088:5:21","nodeType":"VariableDeclaration","scope":7016,"src":"22081:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6992,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:21"},"returnParameters":{"id":6997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6996,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:21","nodeType":"VariableDeclaration","scope":7016,"src":"22118:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6995,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:21"},"scope":7629,"src":"22063:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7041,"nodeType":"Block","src":"22684:150:21","statements":[{"expression":{"id":7029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7024,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"22694:10:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"22714:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7025,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:21","typeDescriptions":{}}},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7030,"nodeType":"ExpressionStatement","src":"22694:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7031,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"22734:10:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"22748:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7040,"nodeType":"IfStatement","src":"22730:98:21","trueBody":{"id":7039,"nodeType":"Block","src":"22755:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:21","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"22811:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7034,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"22776:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7038,"nodeType":"RevertStatement","src":"22769:48:21"}]}}]},"documentation":{"id":7017,"nodeType":"StructuredDocumentation","src":"22293:312:21","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7042,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:21","nodeType":"FunctionDefinition","parameters":{"id":7020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7019,"mutability":"mutable","name":"value","nameLocation":"22635:5:21","nodeType":"VariableDeclaration","scope":7042,"src":"22628:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7018,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:21"},"returnParameters":{"id":7023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7022,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:21","nodeType":"VariableDeclaration","scope":7042,"src":"22665:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7021,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:21"},"scope":7629,"src":"22610:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7067,"nodeType":"Block","src":"23231:150:21","statements":[{"expression":{"id":7055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7050,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"23241:10:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"23261:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7051,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:21","typeDescriptions":{}}},"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7056,"nodeType":"ExpressionStatement","src":"23241:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7057,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"23281:10:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"23295:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7066,"nodeType":"IfStatement","src":"23277:98:21","trueBody":{"id":7065,"nodeType":"Block","src":"23302:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:21","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"23358:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7060,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"23323:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7064,"nodeType":"RevertStatement","src":"23316:48:21"}]}}]},"documentation":{"id":7043,"nodeType":"StructuredDocumentation","src":"22840:312:21","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7068,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:21","nodeType":"FunctionDefinition","parameters":{"id":7046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7045,"mutability":"mutable","name":"value","nameLocation":"23182:5:21","nodeType":"VariableDeclaration","scope":7068,"src":"23175:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7044,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:21"},"returnParameters":{"id":7049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7048,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:21","nodeType":"VariableDeclaration","scope":7068,"src":"23212:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7047,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:21"},"scope":7629,"src":"23157:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7093,"nodeType":"Block","src":"23778:150:21","statements":[{"expression":{"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7076,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"23788:10:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"23808:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7077,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:21","typeDescriptions":{}}},"id":7080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7082,"nodeType":"ExpressionStatement","src":"23788:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7083,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"23828:10:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"23842:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7092,"nodeType":"IfStatement","src":"23824:98:21","trueBody":{"id":7091,"nodeType":"Block","src":"23849:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:21","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"23905:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7086,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"23870:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7090,"nodeType":"RevertStatement","src":"23863:48:21"}]}}]},"documentation":{"id":7069,"nodeType":"StructuredDocumentation","src":"23387:312:21","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7094,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:21","nodeType":"FunctionDefinition","parameters":{"id":7072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7071,"mutability":"mutable","name":"value","nameLocation":"23729:5:21","nodeType":"VariableDeclaration","scope":7094,"src":"23722:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7070,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:21"},"returnParameters":{"id":7075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7074,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:21","nodeType":"VariableDeclaration","scope":7094,"src":"23759:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7073,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:21"},"scope":7629,"src":"23704:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7119,"nodeType":"Block","src":"24325:150:21","statements":[{"expression":{"id":7107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7102,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"24335:10:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"24355:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7103,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:21","typeDescriptions":{}}},"id":7106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7108,"nodeType":"ExpressionStatement","src":"24335:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7109,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"24375:10:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"24389:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7118,"nodeType":"IfStatement","src":"24371:98:21","trueBody":{"id":7117,"nodeType":"Block","src":"24396:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:21","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"24452:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7112,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"24417:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7116,"nodeType":"RevertStatement","src":"24410:48:21"}]}}]},"documentation":{"id":7095,"nodeType":"StructuredDocumentation","src":"23934:312:21","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7120,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:21","nodeType":"FunctionDefinition","parameters":{"id":7098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7097,"mutability":"mutable","name":"value","nameLocation":"24276:5:21","nodeType":"VariableDeclaration","scope":7120,"src":"24269:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7096,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:21"},"returnParameters":{"id":7101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7100,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:21","nodeType":"VariableDeclaration","scope":7120,"src":"24306:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7099,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:21"},"scope":7629,"src":"24251:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7145,"nodeType":"Block","src":"24872:150:21","statements":[{"expression":{"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7128,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7126,"src":"24882:10:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7123,"src":"24902:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7129,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:21","typeDescriptions":{}}},"id":7132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7134,"nodeType":"ExpressionStatement","src":"24882:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7135,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7126,"src":"24922:10:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7123,"src":"24936:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7144,"nodeType":"IfStatement","src":"24918:98:21","trueBody":{"id":7143,"nodeType":"Block","src":"24943:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:21","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7123,"src":"24999:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7138,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"24964:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7142,"nodeType":"RevertStatement","src":"24957:48:21"}]}}]},"documentation":{"id":7121,"nodeType":"StructuredDocumentation","src":"24481:312:21","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7146,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:21","nodeType":"FunctionDefinition","parameters":{"id":7124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7123,"mutability":"mutable","name":"value","nameLocation":"24823:5:21","nodeType":"VariableDeclaration","scope":7146,"src":"24816:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7122,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:21"},"returnParameters":{"id":7127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7126,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:21","nodeType":"VariableDeclaration","scope":7146,"src":"24853:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7125,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:21"},"scope":7629,"src":"24798:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7171,"nodeType":"Block","src":"25419:150:21","statements":[{"expression":{"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7154,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7152,"src":"25429:10:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"25449:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7155,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:21","typeDescriptions":{}}},"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7160,"nodeType":"ExpressionStatement","src":"25429:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7161,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7152,"src":"25469:10:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"25483:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7170,"nodeType":"IfStatement","src":"25465:98:21","trueBody":{"id":7169,"nodeType":"Block","src":"25490:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:21","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"25546:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7164,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"25511:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7168,"nodeType":"RevertStatement","src":"25504:48:21"}]}}]},"documentation":{"id":7147,"nodeType":"StructuredDocumentation","src":"25028:312:21","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7172,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:21","nodeType":"FunctionDefinition","parameters":{"id":7150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7149,"mutability":"mutable","name":"value","nameLocation":"25370:5:21","nodeType":"VariableDeclaration","scope":7172,"src":"25363:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7148,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:21"},"returnParameters":{"id":7153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7152,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:21","nodeType":"VariableDeclaration","scope":7172,"src":"25400:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7151,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:21"},"scope":7629,"src":"25345:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7197,"nodeType":"Block","src":"25966:150:21","statements":[{"expression":{"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7180,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7178,"src":"25976:10:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7175,"src":"25996:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7181,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:21","typeDescriptions":{}}},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7186,"nodeType":"ExpressionStatement","src":"25976:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7187,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7178,"src":"26016:10:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7175,"src":"26030:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7196,"nodeType":"IfStatement","src":"26012:98:21","trueBody":{"id":7195,"nodeType":"Block","src":"26037:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7175,"src":"26093:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7190,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"26058:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7194,"nodeType":"RevertStatement","src":"26051:48:21"}]}}]},"documentation":{"id":7173,"nodeType":"StructuredDocumentation","src":"25575:312:21","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7198,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:21","nodeType":"FunctionDefinition","parameters":{"id":7176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7175,"mutability":"mutable","name":"value","nameLocation":"25917:5:21","nodeType":"VariableDeclaration","scope":7198,"src":"25910:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7174,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:21"},"returnParameters":{"id":7179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7178,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:21","nodeType":"VariableDeclaration","scope":7198,"src":"25947:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7177,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:21"},"scope":7629,"src":"25892:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7223,"nodeType":"Block","src":"26513:150:21","statements":[{"expression":{"id":7211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7206,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"26523:10:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"26543:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7207,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:21","typeDescriptions":{}}},"id":7210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7212,"nodeType":"ExpressionStatement","src":"26523:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7213,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"26563:10:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"26577:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7222,"nodeType":"IfStatement","src":"26559:98:21","trueBody":{"id":7221,"nodeType":"Block","src":"26584:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:21","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"26640:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7216,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"26605:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7220,"nodeType":"RevertStatement","src":"26598:48:21"}]}}]},"documentation":{"id":7199,"nodeType":"StructuredDocumentation","src":"26122:312:21","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7224,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:21","nodeType":"FunctionDefinition","parameters":{"id":7202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7201,"mutability":"mutable","name":"value","nameLocation":"26464:5:21","nodeType":"VariableDeclaration","scope":7224,"src":"26457:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7200,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:21"},"returnParameters":{"id":7205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7204,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:21","nodeType":"VariableDeclaration","scope":7224,"src":"26494:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7203,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:21"},"scope":7629,"src":"26439:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7249,"nodeType":"Block","src":"27060:150:21","statements":[{"expression":{"id":7237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7232,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"27070:10:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"27090:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7233,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:21","typeDescriptions":{}}},"id":7236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7238,"nodeType":"ExpressionStatement","src":"27070:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7239,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"27110:10:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"27124:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7248,"nodeType":"IfStatement","src":"27106:98:21","trueBody":{"id":7247,"nodeType":"Block","src":"27131:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:21","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"27187:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7242,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"27152:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7246,"nodeType":"RevertStatement","src":"27145:48:21"}]}}]},"documentation":{"id":7225,"nodeType":"StructuredDocumentation","src":"26669:312:21","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7250,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:21","nodeType":"FunctionDefinition","parameters":{"id":7228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7227,"mutability":"mutable","name":"value","nameLocation":"27011:5:21","nodeType":"VariableDeclaration","scope":7250,"src":"27004:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7226,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:21"},"returnParameters":{"id":7231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7230,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:21","nodeType":"VariableDeclaration","scope":7250,"src":"27041:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7229,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:21"},"scope":7629,"src":"26986:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7275,"nodeType":"Block","src":"27607:150:21","statements":[{"expression":{"id":7263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7258,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7256,"src":"27617:10:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7253,"src":"27637:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7259,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:21","typeDescriptions":{}}},"id":7262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7264,"nodeType":"ExpressionStatement","src":"27617:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7265,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7256,"src":"27657:10:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7253,"src":"27671:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7274,"nodeType":"IfStatement","src":"27653:98:21","trueBody":{"id":7273,"nodeType":"Block","src":"27678:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:21","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7253,"src":"27734:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7268,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"27699:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7272,"nodeType":"RevertStatement","src":"27692:48:21"}]}}]},"documentation":{"id":7251,"nodeType":"StructuredDocumentation","src":"27216:312:21","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7276,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:21","nodeType":"FunctionDefinition","parameters":{"id":7254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7253,"mutability":"mutable","name":"value","nameLocation":"27558:5:21","nodeType":"VariableDeclaration","scope":7276,"src":"27551:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7252,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:21"},"returnParameters":{"id":7257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7256,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:21","nodeType":"VariableDeclaration","scope":7276,"src":"27588:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7255,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:21"},"scope":7629,"src":"27533:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7301,"nodeType":"Block","src":"28147:148:21","statements":[{"expression":{"id":7289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7284,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"28157:10:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"28176:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7285,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:21","typeDescriptions":{}}},"id":7288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7290,"nodeType":"ExpressionStatement","src":"28157:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7291,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"28196:10:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"28210:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7300,"nodeType":"IfStatement","src":"28192:97:21","trueBody":{"id":7299,"nodeType":"Block","src":"28217:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:21","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"28272:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7294,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"28238:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7298,"nodeType":"RevertStatement","src":"28231:47:21"}]}}]},"documentation":{"id":7277,"nodeType":"StructuredDocumentation","src":"27763:307:21","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7302,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:21","nodeType":"FunctionDefinition","parameters":{"id":7280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7279,"mutability":"mutable","name":"value","nameLocation":"28099:5:21","nodeType":"VariableDeclaration","scope":7302,"src":"28092:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7278,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:21"},"returnParameters":{"id":7283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7282,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:21","nodeType":"VariableDeclaration","scope":7302,"src":"28129:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7281,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:21"},"scope":7629,"src":"28075:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7327,"nodeType":"Block","src":"28685:148:21","statements":[{"expression":{"id":7315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7310,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"28695:10:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7305,"src":"28714:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7311,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:21","typeDescriptions":{}}},"id":7314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7316,"nodeType":"ExpressionStatement","src":"28695:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7317,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"28734:10:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7305,"src":"28748:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7326,"nodeType":"IfStatement","src":"28730:97:21","trueBody":{"id":7325,"nodeType":"Block","src":"28755:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:21","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7305,"src":"28810:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7320,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"28776:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7324,"nodeType":"RevertStatement","src":"28769:47:21"}]}}]},"documentation":{"id":7303,"nodeType":"StructuredDocumentation","src":"28301:307:21","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7328,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:21","nodeType":"FunctionDefinition","parameters":{"id":7306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7305,"mutability":"mutable","name":"value","nameLocation":"28637:5:21","nodeType":"VariableDeclaration","scope":7328,"src":"28630:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7304,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:21"},"returnParameters":{"id":7309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7308,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:21","nodeType":"VariableDeclaration","scope":7328,"src":"28667:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7307,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:21"},"scope":7629,"src":"28613:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7353,"nodeType":"Block","src":"29223:148:21","statements":[{"expression":{"id":7341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7336,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7334,"src":"29233:10:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7331,"src":"29252:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7337,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:21","typeDescriptions":{}}},"id":7340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7342,"nodeType":"ExpressionStatement","src":"29233:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7343,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7334,"src":"29272:10:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7331,"src":"29286:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7352,"nodeType":"IfStatement","src":"29268:97:21","trueBody":{"id":7351,"nodeType":"Block","src":"29293:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:21","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7331,"src":"29348:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7346,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"29314:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7350,"nodeType":"RevertStatement","src":"29307:47:21"}]}}]},"documentation":{"id":7329,"nodeType":"StructuredDocumentation","src":"28839:307:21","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7354,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:21","nodeType":"FunctionDefinition","parameters":{"id":7332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7331,"mutability":"mutable","name":"value","nameLocation":"29175:5:21","nodeType":"VariableDeclaration","scope":7354,"src":"29168:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7330,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:21"},"returnParameters":{"id":7335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7334,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:21","nodeType":"VariableDeclaration","scope":7354,"src":"29205:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7333,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:21"},"scope":7629,"src":"29151:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7379,"nodeType":"Block","src":"29761:148:21","statements":[{"expression":{"id":7367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7362,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7360,"src":"29771:10:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"29790:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7363,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:21","typeDescriptions":{}}},"id":7366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7368,"nodeType":"ExpressionStatement","src":"29771:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7369,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7360,"src":"29810:10:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"29824:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7378,"nodeType":"IfStatement","src":"29806:97:21","trueBody":{"id":7377,"nodeType":"Block","src":"29831:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:21","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"29886:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7372,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"29852:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7376,"nodeType":"RevertStatement","src":"29845:47:21"}]}}]},"documentation":{"id":7355,"nodeType":"StructuredDocumentation","src":"29377:307:21","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7380,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:21","nodeType":"FunctionDefinition","parameters":{"id":7358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7357,"mutability":"mutable","name":"value","nameLocation":"29713:5:21","nodeType":"VariableDeclaration","scope":7380,"src":"29706:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7356,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:21"},"returnParameters":{"id":7361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7360,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:21","nodeType":"VariableDeclaration","scope":7380,"src":"29743:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7359,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:21"},"scope":7629,"src":"29689:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7405,"nodeType":"Block","src":"30299:148:21","statements":[{"expression":{"id":7393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7388,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"30309:10:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7383,"src":"30328:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7389,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:21","typeDescriptions":{}}},"id":7392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7394,"nodeType":"ExpressionStatement","src":"30309:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7395,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"30348:10:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7383,"src":"30362:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7404,"nodeType":"IfStatement","src":"30344:97:21","trueBody":{"id":7403,"nodeType":"Block","src":"30369:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7383,"src":"30424:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7398,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"30390:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7402,"nodeType":"RevertStatement","src":"30383:47:21"}]}}]},"documentation":{"id":7381,"nodeType":"StructuredDocumentation","src":"29915:307:21","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7406,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:21","nodeType":"FunctionDefinition","parameters":{"id":7384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7383,"mutability":"mutable","name":"value","nameLocation":"30251:5:21","nodeType":"VariableDeclaration","scope":7406,"src":"30244:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7382,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:21"},"returnParameters":{"id":7387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7386,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:21","nodeType":"VariableDeclaration","scope":7406,"src":"30281:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7385,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:21"},"scope":7629,"src":"30227:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7431,"nodeType":"Block","src":"30837:148:21","statements":[{"expression":{"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7414,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7412,"src":"30847:10:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7409,"src":"30866:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7415,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:21","typeDescriptions":{}}},"id":7418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7420,"nodeType":"ExpressionStatement","src":"30847:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7421,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7412,"src":"30886:10:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7409,"src":"30900:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7430,"nodeType":"IfStatement","src":"30882:97:21","trueBody":{"id":7429,"nodeType":"Block","src":"30907:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:21","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7409,"src":"30962:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7424,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"30928:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7428,"nodeType":"RevertStatement","src":"30921:47:21"}]}}]},"documentation":{"id":7407,"nodeType":"StructuredDocumentation","src":"30453:307:21","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7432,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:21","nodeType":"FunctionDefinition","parameters":{"id":7410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7409,"mutability":"mutable","name":"value","nameLocation":"30789:5:21","nodeType":"VariableDeclaration","scope":7432,"src":"30782:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7408,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:21"},"returnParameters":{"id":7413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7412,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:21","nodeType":"VariableDeclaration","scope":7432,"src":"30819:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7411,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:21"},"scope":7629,"src":"30765:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7457,"nodeType":"Block","src":"31375:148:21","statements":[{"expression":{"id":7445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7440,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7438,"src":"31385:10:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"31404:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7441,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:21","typeDescriptions":{}}},"id":7444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7446,"nodeType":"ExpressionStatement","src":"31385:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7447,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7438,"src":"31424:10:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"31438:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7456,"nodeType":"IfStatement","src":"31420:97:21","trueBody":{"id":7455,"nodeType":"Block","src":"31445:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:21","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"31500:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7450,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"31466:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7454,"nodeType":"RevertStatement","src":"31459:47:21"}]}}]},"documentation":{"id":7433,"nodeType":"StructuredDocumentation","src":"30991:307:21","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7458,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:21","nodeType":"FunctionDefinition","parameters":{"id":7436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7435,"mutability":"mutable","name":"value","nameLocation":"31327:5:21","nodeType":"VariableDeclaration","scope":7458,"src":"31320:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7434,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:21"},"returnParameters":{"id":7439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7438,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:21","nodeType":"VariableDeclaration","scope":7458,"src":"31357:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7437,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:21"},"scope":7629,"src":"31303:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7483,"nodeType":"Block","src":"31913:148:21","statements":[{"expression":{"id":7471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7466,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7464,"src":"31923:10:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7461,"src":"31942:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7467,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:21","typeDescriptions":{}}},"id":7470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7472,"nodeType":"ExpressionStatement","src":"31923:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7473,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7464,"src":"31962:10:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7461,"src":"31976:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7482,"nodeType":"IfStatement","src":"31958:97:21","trueBody":{"id":7481,"nodeType":"Block","src":"31983:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:21","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7461,"src":"32038:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7476,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"32004:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7480,"nodeType":"RevertStatement","src":"31997:47:21"}]}}]},"documentation":{"id":7459,"nodeType":"StructuredDocumentation","src":"31529:307:21","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7484,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:21","nodeType":"FunctionDefinition","parameters":{"id":7462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7461,"mutability":"mutable","name":"value","nameLocation":"31865:5:21","nodeType":"VariableDeclaration","scope":7484,"src":"31858:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7460,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:21"},"returnParameters":{"id":7465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7464,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:21","nodeType":"VariableDeclaration","scope":7484,"src":"31895:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7463,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:21"},"scope":7629,"src":"31841:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7509,"nodeType":"Block","src":"32451:148:21","statements":[{"expression":{"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7492,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7490,"src":"32461:10:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7487,"src":"32480:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7493,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:21","typeDescriptions":{}}},"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7498,"nodeType":"ExpressionStatement","src":"32461:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7499,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7490,"src":"32500:10:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7487,"src":"32514:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7508,"nodeType":"IfStatement","src":"32496:97:21","trueBody":{"id":7507,"nodeType":"Block","src":"32521:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7487,"src":"32576:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7502,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"32542:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7506,"nodeType":"RevertStatement","src":"32535:47:21"}]}}]},"documentation":{"id":7485,"nodeType":"StructuredDocumentation","src":"32067:307:21","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7510,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:21","nodeType":"FunctionDefinition","parameters":{"id":7488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7487,"mutability":"mutable","name":"value","nameLocation":"32403:5:21","nodeType":"VariableDeclaration","scope":7510,"src":"32396:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7486,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:21"},"returnParameters":{"id":7491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7490,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:21","nodeType":"VariableDeclaration","scope":7510,"src":"32433:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7489,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:21"},"scope":7629,"src":"32379:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7535,"nodeType":"Block","src":"32989:148:21","statements":[{"expression":{"id":7523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7518,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"32999:10:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7513,"src":"33018:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7519,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:21","typeDescriptions":{}}},"id":7522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7524,"nodeType":"ExpressionStatement","src":"32999:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7525,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"33038:10:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7513,"src":"33052:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7534,"nodeType":"IfStatement","src":"33034:97:21","trueBody":{"id":7533,"nodeType":"Block","src":"33059:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:21","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7513,"src":"33114:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7528,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"33080:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7532,"nodeType":"RevertStatement","src":"33073:47:21"}]}}]},"documentation":{"id":7511,"nodeType":"StructuredDocumentation","src":"32605:307:21","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7536,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:21","nodeType":"FunctionDefinition","parameters":{"id":7514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7513,"mutability":"mutable","name":"value","nameLocation":"32941:5:21","nodeType":"VariableDeclaration","scope":7536,"src":"32934:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7512,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:21"},"returnParameters":{"id":7517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7516,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:21","nodeType":"VariableDeclaration","scope":7536,"src":"32971:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7515,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:21"},"scope":7629,"src":"32917:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7561,"nodeType":"Block","src":"33527:148:21","statements":[{"expression":{"id":7549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7544,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"33537:10:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7539,"src":"33556:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7545,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:21","typeDescriptions":{}}},"id":7548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7550,"nodeType":"ExpressionStatement","src":"33537:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7551,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"33576:10:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7539,"src":"33590:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7560,"nodeType":"IfStatement","src":"33572:97:21","trueBody":{"id":7559,"nodeType":"Block","src":"33597:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7539,"src":"33652:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7554,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"33618:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7558,"nodeType":"RevertStatement","src":"33611:47:21"}]}}]},"documentation":{"id":7537,"nodeType":"StructuredDocumentation","src":"33143:307:21","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7562,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:21","nodeType":"FunctionDefinition","parameters":{"id":7540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7539,"mutability":"mutable","name":"value","nameLocation":"33479:5:21","nodeType":"VariableDeclaration","scope":7562,"src":"33472:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7538,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:21"},"returnParameters":{"id":7543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7542,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:21","nodeType":"VariableDeclaration","scope":7562,"src":"33509:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7541,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:21"},"scope":7629,"src":"33455:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7587,"nodeType":"Block","src":"34058:146:21","statements":[{"expression":{"id":7575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7570,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"34068:10:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"34086:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7571,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:21","typeDescriptions":{}}},"id":7574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7576,"nodeType":"ExpressionStatement","src":"34068:24:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7577,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"34106:10:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"34120:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7586,"nodeType":"IfStatement","src":"34102:96:21","trueBody":{"id":7585,"nodeType":"Block","src":"34127:71:21","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"34181:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7580,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"34148:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7584,"nodeType":"RevertStatement","src":"34141:46:21"}]}}]},"documentation":{"id":7563,"nodeType":"StructuredDocumentation","src":"33681:302:21","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7588,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:21","nodeType":"FunctionDefinition","parameters":{"id":7566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7565,"mutability":"mutable","name":"value","nameLocation":"34011:5:21","nodeType":"VariableDeclaration","scope":7588,"src":"34004:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7564,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:21"},"returnParameters":{"id":7569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7568,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:21","nodeType":"VariableDeclaration","scope":7588,"src":"34041:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7567,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:21"},"scope":7629,"src":"33988:216:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7617,"nodeType":"Block","src":"34444:250:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7591,"src":"34557:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7600,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7599,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:21","memberName":"max","nodeType":"MemberAccess","src":"34573:16:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7597,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:21","typeDescriptions":{}}},"id":7604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7611,"nodeType":"IfStatement","src":"34553:105:21","trueBody":{"id":7610,"nodeType":"Block","src":"34592:66:21","statements":[{"errorCall":{"arguments":[{"id":7607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7591,"src":"34641:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7606,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"34613:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7609,"nodeType":"RevertStatement","src":"34606:41:21"}]}},{"expression":{"arguments":[{"id":7614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7591,"src":"34681:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7612,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:21","typeDescriptions":{}}},"id":7615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7595,"id":7616,"nodeType":"Return","src":"34667:20:21"}]},"documentation":{"id":7589,"nodeType":"StructuredDocumentation","src":"34210:165:21","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7618,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:21","nodeType":"FunctionDefinition","parameters":{"id":7592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7591,"mutability":"mutable","name":"value","nameLocation":"34406:5:21","nodeType":"VariableDeclaration","scope":7618,"src":"34398:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7590,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:21"},"returnParameters":{"id":7595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7618,"src":"34436:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7593,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:21"},"scope":7629,"src":"34380:314:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7627,"nodeType":"Block","src":"34853:87:21","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:21","statements":[{"nodeType":"YulAssignment","src":"34902:22:21","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:21"},"nodeType":"YulFunctionCall","src":"34914:9:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:21"},"nodeType":"YulFunctionCall","src":"34907:17:21"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7621,"isOffset":false,"isSlot":false,"src":"34921:1:21","valueSize":1},{"declaration":7624,"isOffset":false,"isSlot":false,"src":"34902:1:21","valueSize":1}],"flags":["memory-safe"],"id":7626,"nodeType":"InlineAssembly","src":"34863:71:21"}]},"documentation":{"id":7619,"nodeType":"StructuredDocumentation","src":"34700:90:21","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7628,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:21","nodeType":"FunctionDefinition","parameters":{"id":7622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7621,"mutability":"mutable","name":"b","nameLocation":"34816:1:21","nodeType":"VariableDeclaration","scope":7628,"src":"34811:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7620,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:21"},"returnParameters":{"id":7625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7624,"mutability":"mutable","name":"u","nameLocation":"34850:1:21","nodeType":"VariableDeclaration","scope":7628,"src":"34842:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7623,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:21"},"scope":7629,"src":"34795:145:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7630,"src":"769:34173:21","usedErrors":[5874,5879,5886,5891],"usedEvents":[]}],"src":"192:34751:21"},"id":21},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7629],"SignedMath":[7773]},"id":7774,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7631,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7633,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7774,"sourceUnit":7630,"src":"135:40:22","symbolAliases":[{"foreign":{"id":7632,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"143:8:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7634,"nodeType":"StructuredDocumentation","src":"177:80:22","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7773,"linearizedBaseContracts":[7773],"name":"SignedMath","nameLocation":"266:10:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":7663,"nodeType":"Block","src":"746:215:22","statements":[{"id":7662,"nodeType":"UncheckedBlock","src":"756:199:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7646,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7641,"src":"894:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7647,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"900:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7648,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7641,"src":"904:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7655,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7637,"src":"932:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7653,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"916:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7629_$","typeString":"type(library SafeCast)"}},"id":7654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7628,"src":"916:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7651,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:22","typeDescriptions":{}}},"id":7657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7645,"id":7661,"nodeType":"Return","src":"887:57:22"}]}]},"documentation":{"id":7635,"nodeType":"StructuredDocumentation","src":"283:374:22","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7664,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:22","nodeType":"FunctionDefinition","parameters":{"id":7642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7637,"mutability":"mutable","name":"condition","nameLocation":"684:9:22","nodeType":"VariableDeclaration","scope":7664,"src":"679:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7636,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7639,"mutability":"mutable","name":"a","nameLocation":"702:1:22","nodeType":"VariableDeclaration","scope":7664,"src":"695:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7638,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7641,"mutability":"mutable","name":"b","nameLocation":"712:1:22","nodeType":"VariableDeclaration","scope":7664,"src":"705:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7640,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:22"},"returnParameters":{"id":7645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7664,"src":"738:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7643,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:22"},"scope":7773,"src":"662:299:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7682,"nodeType":"Block","src":"1102:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7675,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"1127:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7676,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"1131:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7678,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"1134:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7679,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"1137:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7674,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"1119:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7673,"id":7681,"nodeType":"Return","src":"1112:27:22"}]},"documentation":{"id":7665,"nodeType":"StructuredDocumentation","src":"967:66:22","text":" @dev Returns the largest of two signed numbers."},"id":7683,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:22","nodeType":"FunctionDefinition","parameters":{"id":7670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7667,"mutability":"mutable","name":"a","nameLocation":"1058:1:22","nodeType":"VariableDeclaration","scope":7683,"src":"1051:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7666,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7669,"mutability":"mutable","name":"b","nameLocation":"1068:1:22","nodeType":"VariableDeclaration","scope":7683,"src":"1061:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7668,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:22"},"returnParameters":{"id":7673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7683,"src":"1094:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7671,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:22"},"scope":7773,"src":"1038:108:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7701,"nodeType":"Block","src":"1288:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7694,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7686,"src":"1313:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7695,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7688,"src":"1317:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7697,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7686,"src":"1320:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7698,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7688,"src":"1323:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7693,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"1305:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7692,"id":7700,"nodeType":"Return","src":"1298:27:22"}]},"documentation":{"id":7684,"nodeType":"StructuredDocumentation","src":"1152:67:22","text":" @dev Returns the smallest of two signed numbers."},"id":7702,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:22","nodeType":"FunctionDefinition","parameters":{"id":7689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7686,"mutability":"mutable","name":"a","nameLocation":"1244:1:22","nodeType":"VariableDeclaration","scope":7702,"src":"1237:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7685,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7688,"mutability":"mutable","name":"b","nameLocation":"1254:1:22","nodeType":"VariableDeclaration","scope":7702,"src":"1247:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7687,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:22"},"returnParameters":{"id":7692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7702,"src":"1280:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7690,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:22"},"scope":7773,"src":"1224:108:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7745,"nodeType":"Block","src":"1537:162:22","statements":[{"assignments":[7713],"declarations":[{"constant":false,"id":7713,"mutability":"mutable","name":"x","nameLocation":"1606:1:22","nodeType":"VariableDeclaration","scope":7745,"src":"1599:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7712,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7726,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7714,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7705,"src":"1611:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7715,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7707,"src":"1615:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7717,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7718,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7705,"src":"1622:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7719,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7707,"src":"1626:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7721,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:22"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7727,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7713,"src":"1651:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7732,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7713,"src":"1671:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7730,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:22","typeDescriptions":{}}},"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7728,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:22","typeDescriptions":{}}},"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7737,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7705,"src":"1685:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7738,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7707,"src":"1689:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7740,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7711,"id":7744,"nodeType":"Return","src":"1644:48:22"}]},"documentation":{"id":7703,"nodeType":"StructuredDocumentation","src":"1338:126:22","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7746,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:22","nodeType":"FunctionDefinition","parameters":{"id":7708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7705,"mutability":"mutable","name":"a","nameLocation":"1493:1:22","nodeType":"VariableDeclaration","scope":7746,"src":"1486:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7704,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7707,"mutability":"mutable","name":"b","nameLocation":"1503:1:22","nodeType":"VariableDeclaration","scope":7746,"src":"1496:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7706,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:22"},"returnParameters":{"id":7711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7746,"src":"1529:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7709,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:22"},"scope":7773,"src":"1469:230:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7771,"nodeType":"Block","src":"1843:767:22","statements":[{"id":7770,"nodeType":"UncheckedBlock","src":"1853:751:22","statements":[{"assignments":[7755],"declarations":[{"constant":false,"id":7755,"mutability":"mutable","name":"mask","nameLocation":"2424:4:22","nodeType":"VariableDeclaration","scope":7770,"src":"2417:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7754,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7759,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7756,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"2431:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7762,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"2576:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7763,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7755,"src":"2580:4:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7765,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7766,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7755,"src":"2588:4:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7760,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:22","typeDescriptions":{}}},"id":7768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7753,"id":7769,"nodeType":"Return","src":"2560:33:22"}]}]},"documentation":{"id":7747,"nodeType":"StructuredDocumentation","src":"1705:78:22","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7772,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:22","nodeType":"FunctionDefinition","parameters":{"id":7750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7749,"mutability":"mutable","name":"n","nameLocation":"1808:1:22","nodeType":"VariableDeclaration","scope":7772,"src":"1801:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7748,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:22"},"returnParameters":{"id":7753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7772,"src":"1834:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7751,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:22"},"scope":7773,"src":"1788:822:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7774,"src":"258:2354:22","usedErrors":[],"usedEvents":[]}],"src":"109:2504:22"},"id":22},"contracts/GovernanceExecutor.sol":{"ast":{"absolutePath":"contracts/GovernanceExecutor.sol","exportedSymbols":{"Context":[2684],"ERC165":[4231],"ERC20":[889],"ERC721":[2414],"ERC721Utils":[2654],"GovernanceExecutor":[8004],"GovernanceRootPublisher":[8344],"IERC1363":[229],"IERC165":[4243],"IERC20":[967],"IERC20Errors":[279],"IERC20Metadata":[993],"IERC721":[2531],"IERC721Errors":[327],"IERC721Metadata":[2577],"LiquidStakingVault":[8906],"Ownable":[147],"ReentrancyGuard":[2805],"SafeERC20":[1457],"Strings":[4207],"WithdrawalNFT":[9104]},"id":8005,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7775,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:23"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7776,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8005,"sourceUnit":148,"src":"58:52:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":7777,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8005,"sourceUnit":2806,"src":"111:59:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/GovernanceRootPublisher.sol","file":"./GovernanceRootPublisher.sol","id":7778,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8005,"sourceUnit":8345,"src":"171:39:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7780,"name":"Ownable","nameLocations":["425:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"425:7:23"},"id":7781,"nodeType":"InheritanceSpecifier","src":"425:7:23"},{"baseName":{"id":7782,"name":"ReentrancyGuard","nameLocations":["434:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":2805,"src":"434:15:23"},"id":7783,"nodeType":"InheritanceSpecifier","src":"434:15:23"}],"canonicalName":"GovernanceExecutor","contractDependencies":[],"contractKind":"contract","documentation":{"id":7779,"nodeType":"StructuredDocumentation","src":"212:181:23","text":" @title GovernanceExecutor\n @dev Executes governance proposals on Chain A after cross-chain verification\n Handles proposal execution with action data hash verification"},"fullyImplemented":true,"id":8004,"linearizedBaseContracts":[8004,2805,147,2684],"name":"GovernanceExecutor","nameLocation":"403:18:23","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"cf43a27a","id":7786,"mutability":"immutable","name":"rootPublisher","nameLocation":"552:13:23","nodeType":"VariableDeclaration","scope":8004,"src":"511:54:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_GovernanceRootPublisher_$8344","typeString":"contract GovernanceRootPublisher"},"typeName":{"id":7785,"nodeType":"UserDefinedTypeName","pathNode":{"id":7784,"name":"GovernanceRootPublisher","nameLocations":["511:23:23"],"nodeType":"IdentifierPath","referencedDeclaration":8344,"src":"511:23:23"},"referencedDeclaration":8344,"src":"511:23:23","typeDescriptions":{"typeIdentifier":"t_contract$_GovernanceRootPublisher_$8344","typeString":"contract GovernanceRootPublisher"}},"visibility":"public"},{"constant":false,"functionSelector":"236a0579","id":7790,"mutability":"mutable","name":"committedActions","nameLocation":"666:16:23","nodeType":"VariableDeclaration","scope":8004,"src":"634:48:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":7789,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7787,"name":"bytes32","nodeType":"ElementaryTypeName","src":"642:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"634:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7788,"name":"bool","nodeType":"ElementaryTypeName","src":"653:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"3b1c57cb","id":7794,"mutability":"mutable","name":"executedActions","nameLocation":"782:15:23","nodeType":"VariableDeclaration","scope":8004,"src":"750:47:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":7793,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"758:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"750:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7792,"name":"bool","nodeType":"ElementaryTypeName","src":"769:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"57c58e4f8d951a2c866a2b2a82f21947043bdb5591cb0ca3c4fa17bcd2556387","id":7804,"name":"ProposalExecuted","nameLocation":"828:16:23","nodeType":"EventDefinition","parameters":{"id":7803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7796,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"870:10:23","nodeType":"VariableDeclaration","scope":7804,"src":"854:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7795,"name":"uint256","nodeType":"ElementaryTypeName","src":"854:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7798,"indexed":false,"mutability":"mutable","name":"actionDataHash","nameLocation":"898:14:23","nodeType":"VariableDeclaration","scope":7804,"src":"890:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"890:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7800,"indexed":false,"mutability":"mutable","name":"actionData","nameLocation":"928:10:23","nodeType":"VariableDeclaration","scope":7804,"src":"922:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7799,"name":"bytes","nodeType":"ElementaryTypeName","src":"922:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7802,"indexed":false,"mutability":"mutable","name":"executor","nameLocation":"956:8:23","nodeType":"VariableDeclaration","scope":7804,"src":"948:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7801,"name":"address","nodeType":"ElementaryTypeName","src":"948:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"844:126:23"},"src":"822:149:23"},{"anonymous":false,"eventSelector":"932863ac8646848217bbf645e2f397111c70168cc31eb717d2a7f4f156910ad6","id":7810,"name":"ActionDataHashCommitted","nameLocation":"987:23:23","nodeType":"EventDefinition","parameters":{"id":7809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7806,"indexed":true,"mutability":"mutable","name":"actionDataHash","nameLocation":"1036:14:23","nodeType":"VariableDeclaration","scope":7810,"src":"1020:30:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1020:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7808,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1068:9:23","nodeType":"VariableDeclaration","scope":7810,"src":"1060:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7807,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:73:23"},"src":"981:103:23"},{"body":{"id":7825,"nodeType":"Block","src":"1150:72:23","statements":[{"expression":{"id":7823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7819,"name":"rootPublisher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7786,"src":"1160:13:23","typeDescriptions":{"typeIdentifier":"t_contract$_GovernanceRootPublisher_$8344","typeString":"contract GovernanceRootPublisher"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7821,"name":"_rootPublisher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7812,"src":"1200:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7820,"name":"GovernanceRootPublisher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8344,"src":"1176:23:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_GovernanceRootPublisher_$8344_$","typeString":"type(contract GovernanceRootPublisher)"}},"id":7822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1176:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_GovernanceRootPublisher_$8344","typeString":"contract GovernanceRootPublisher"}},"src":"1160:55:23","typeDescriptions":{"typeIdentifier":"t_contract$_GovernanceRootPublisher_$8344","typeString":"contract GovernanceRootPublisher"}},"id":7824,"nodeType":"ExpressionStatement","src":"1160:55:23"}]},"id":7826,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":7815,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1138:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1142:6:23","memberName":"sender","nodeType":"MemberAccess","src":"1138:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7817,"kind":"baseConstructorSpecifier","modifierName":{"id":7814,"name":"Ownable","nameLocations":["1130:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1130:7:23"},"nodeType":"ModifierInvocation","src":"1130:19:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7812,"mutability":"mutable","name":"_rootPublisher","nameLocation":"1114:14:23","nodeType":"VariableDeclaration","scope":7826,"src":"1106:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7811,"name":"address","nodeType":"ElementaryTypeName","src":"1106:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1105:24:23"},"returnParameters":{"id":7818,"nodeType":"ParameterList","parameters":[],"src":"1150:0:23"},"scope":8004,"src":"1094:128:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7864,"nodeType":"Block","src":"1435:334:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7835,"name":"actionDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7829,"src":"1453:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1479:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1471:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1471:7:23","typeDescriptions":{}}},"id":7839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1471:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1453:28:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416374696f6e206461746120686173682063616e6e6f74206265207a65726f","id":7841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1483:33:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_0e6ff2388bfced98140081975ac611d480e2a618c21e0a650db8f1a9f9f8f860","typeString":"literal_string \"Action data hash cannot be zero\""},"value":"Action data hash cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0e6ff2388bfced98140081975ac611d480e2a618c21e0a650db8f1a9f9f8f860","typeString":"literal_string \"Action data hash cannot be zero\""}],"id":7834,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1445:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:72:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7843,"nodeType":"ExpressionStatement","src":"1445:72:23"},{"expression":{"arguments":[{"id":7848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1535:32:23","subExpression":{"baseExpression":{"id":7845,"name":"executedActions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"1536:15:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":7847,"indexExpression":{"id":7846,"name":"actionDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7829,"src":"1552:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1536:31:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416374696f6e20616c7265616479206578656375746564","id":7849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1569:25:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c695b83284c1b27461bf9214fc253bb3da462e72315680f43faed3e9c3a49bb2","typeString":"literal_string \"Action already executed\""},"value":"Action already executed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c695b83284c1b27461bf9214fc253bb3da462e72315680f43faed3e9c3a49bb2","typeString":"literal_string \"Action already executed\""}],"id":7844,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1527:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1527:68:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7851,"nodeType":"ExpressionStatement","src":"1527:68:23"},{"expression":{"id":7856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7852,"name":"committedActions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"1643:16:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":7854,"indexExpression":{"id":7853,"name":"actionDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7829,"src":"1660:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1643:32:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1678:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1643:39:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7857,"nodeType":"ExpressionStatement","src":"1643:39:23"},{"eventCall":{"arguments":[{"id":7859,"name":"actionDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7829,"src":"1730:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7860,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1746:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1752:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"1746:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7858,"name":"ActionDataHashCommitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"1706:23:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256)"}},"id":7862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1706:56:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7863,"nodeType":"EmitStatement","src":"1701:61:23"}]},"documentation":{"id":7827,"nodeType":"StructuredDocumentation","src":"1232:125:23","text":" @dev Commit action data hash for execution\n @param actionDataHash Hash of the action data to execute"},"functionSelector":"ccaa4160","id":7865,"implemented":true,"kind":"function","modifiers":[{"id":7832,"kind":"modifierInvocation","modifierName":{"id":7831,"name":"onlyOwner","nameLocations":["1425:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1425:9:23"},"nodeType":"ModifierInvocation","src":"1425:9:23"}],"name":"commitActionDataHash","nameLocation":"1371:20:23","nodeType":"FunctionDefinition","parameters":{"id":7830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7829,"mutability":"mutable","name":"actionDataHash","nameLocation":"1400:14:23","nodeType":"VariableDeclaration","scope":7865,"src":"1392:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7828,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1392:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1391:24:23"},"returnParameters":{"id":7833,"nodeType":"ParameterList","parameters":[],"src":"1435:0:23"},"scope":8004,"src":"1362:407:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7959,"nodeType":"Block","src":"2061:1106:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7876,"name":"actionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"2079:10:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2090:6:23","memberName":"length","nodeType":"MemberAccess","src":"2079:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2099:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2079:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416374696f6e20646174612063616e6e6f7420626520656d707479","id":7880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2102:29:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_13390cb6ac8c0ea9ab608030d21b8caec76504526f6045e2233c880c3b675edd","typeString":"literal_string \"Action data cannot be empty\""},"value":"Action data cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13390cb6ac8c0ea9ab608030d21b8caec76504526f6045e2233c880c3b675edd","typeString":"literal_string \"Action data cannot be empty\""}],"id":7875,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2071:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:61:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7882,"nodeType":"ExpressionStatement","src":"2071:61:23"},{"assignments":[7887],"declarations":[{"constant":false,"id":7887,"mutability":"mutable","name":"proposal","nameLocation":"2223:8:23","nodeType":"VariableDeclaration","scope":7959,"src":"2183:48:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_memory_ptr","typeString":"struct GovernanceRootPublisher.Proposal"},"typeName":{"id":7886,"nodeType":"UserDefinedTypeName","pathNode":{"id":7885,"name":"GovernanceRootPublisher.Proposal","nameLocations":["2183:23:23","2207:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":8032,"src":"2183:32:23"},"referencedDeclaration":8032,"src":"2183:32:23","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_storage_ptr","typeString":"struct GovernanceRootPublisher.Proposal"}},"visibility":"internal"}],"id":7892,"initialValue":{"arguments":[{"id":7890,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7868,"src":"2260:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7888,"name":"rootPublisher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7786,"src":"2234:13:23","typeDescriptions":{"typeIdentifier":"t_contract$_GovernanceRootPublisher_$8344","typeString":"contract GovernanceRootPublisher"}},"id":7889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2248:11:23","memberName":"getProposal","nodeType":"MemberAccess","referencedDeclaration":8301,"src":"2234:25:23","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_Proposal_$8032_memory_ptr_$","typeString":"function (uint256) view external returns (struct GovernanceRootPublisher.Proposal memory)"}},"id":7891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_memory_ptr","typeString":"struct GovernanceRootPublisher.Proposal memory"}},"nodeType":"VariableDeclarationStatement","src":"2183:88:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7894,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7887,"src":"2289:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_memory_ptr","typeString":"struct GovernanceRootPublisher.Proposal memory"}},"id":7895,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2298:2:23","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":8013,"src":"2289:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2304:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2289:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c20646f6573206e6f74206578697374","id":7898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2307:25:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e62a544e5aebc4f7865ef71973090f3036faa05a5f7be3ea3605ab15dc232bf","typeString":"literal_string \"Proposal does not exist\""},"value":"Proposal does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8e62a544e5aebc4f7865ef71973090f3036faa05a5f7be3ea3605ab15dc232bf","typeString":"literal_string \"Proposal does not exist\""}],"id":7893,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2281:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:52:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7900,"nodeType":"ExpressionStatement","src":"2281:52:23"},{"expression":{"arguments":[{"expression":{"id":7902,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7887,"src":"2351:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_memory_ptr","typeString":"struct GovernanceRootPublisher.Proposal memory"}},"id":7903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2360:13:23","memberName":"rootPublished","nodeType":"MemberAccess","referencedDeclaration":8027,"src":"2351:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f6f74206e6f74207075626c6973686564","id":7904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2375:20:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_f51d8a2ee1ed415d9e0a7f47c891529969ae72513581188f4c1a72c1e5509376","typeString":"literal_string \"Root not published\""},"value":"Root not published"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f51d8a2ee1ed415d9e0a7f47c891529969ae72513581188f4c1a72c1e5509376","typeString":"literal_string \"Root not published\""}],"id":7901,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2343:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:53:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7906,"nodeType":"ExpressionStatement","src":"2343:53:23"},{"expression":{"arguments":[{"id":7910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2414:18:23","subExpression":{"expression":{"id":7908,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7887,"src":"2415:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_memory_ptr","typeString":"struct GovernanceRootPublisher.Proposal memory"}},"id":7909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2424:8:23","memberName":"executed","nodeType":"MemberAccess","referencedDeclaration":8029,"src":"2415:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c20616c7265616479206578656375746564","id":7911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2434:27:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd","typeString":"literal_string \"Proposal already executed\""},"value":"Proposal already executed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd","typeString":"literal_string \"Proposal already executed\""}],"id":7907,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2406:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2406:56:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7913,"nodeType":"ExpressionStatement","src":"2406:56:23"},{"assignments":[7915],"declarations":[{"constant":false,"id":7915,"mutability":"mutable","name":"actionDataHash","nameLocation":"2532:14:23","nodeType":"VariableDeclaration","scope":7959,"src":"2524:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7914,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2524:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7919,"initialValue":{"arguments":[{"id":7917,"name":"actionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"2559:10:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7916,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2549:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2549:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2524:46:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7921,"name":"actionDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7915,"src":"2588:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7922,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7887,"src":"2606:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_memory_ptr","typeString":"struct GovernanceRootPublisher.Proposal memory"}},"id":7923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2615:14:23","memberName":"actionDataHash","nodeType":"MemberAccess","referencedDeclaration":8019,"src":"2606:23:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2588:41:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416374696f6e20646174612068617368206d69736d61746368","id":7925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2631:27:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c81b9ff171c25a4f5900a882b68fbb0e3a066a8acc7418da49e916039e7500d8","typeString":"literal_string \"Action data hash mismatch\""},"value":"Action data hash mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c81b9ff171c25a4f5900a882b68fbb0e3a066a8acc7418da49e916039e7500d8","typeString":"literal_string \"Action data hash mismatch\""}],"id":7920,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2580:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2580:79:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7927,"nodeType":"ExpressionStatement","src":"2580:79:23"},{"expression":{"arguments":[{"baseExpression":{"id":7929,"name":"committedActions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"2732:16:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":7931,"indexExpression":{"id":7930,"name":"actionDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7915,"src":"2749:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2732:32:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416374696f6e206e6f7420636f6d6d6974746564","id":7932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2766:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b9ca7587394bc2aed9077d1561bebc1e44d00041c9f659422706c199b3b6e05","typeString":"literal_string \"Action not committed\""},"value":"Action not committed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b9ca7587394bc2aed9077d1561bebc1e44d00041c9f659422706c199b3b6e05","typeString":"literal_string \"Action not committed\""}],"id":7928,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2724:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:65:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7934,"nodeType":"ExpressionStatement","src":"2724:65:23"},{"expression":{"arguments":[{"id":7938,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7868,"src":"2884:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7935,"name":"rootPublisher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7786,"src":"2854:13:23","typeDescriptions":{"typeIdentifier":"t_contract$_GovernanceRootPublisher_$8344","typeString":"contract GovernanceRootPublisher"}},"id":7937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2868:15:23","memberName":"executeProposal","nodeType":"MemberAccess","referencedDeclaration":8277,"src":"2854:29:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":7939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2854:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7940,"nodeType":"ExpressionStatement","src":"2854:41:23"},{"expression":{"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7941,"name":"executedActions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"2950:15:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":7943,"indexExpression":{"id":7942,"name":"actionDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7915,"src":"2966:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2950:31:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2984:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2950:38:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7946,"nodeType":"ExpressionStatement","src":"2950:38:23"},{"eventCall":{"arguments":[{"id":7948,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7868,"src":"3029:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7949,"name":"actionDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7915,"src":"3041:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7950,"name":"actionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"3057:10:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":7951,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3069:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3073:6:23","memberName":"sender","nodeType":"MemberAccess","src":"3069:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7947,"name":"ProposalExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"3012:16:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (uint256,bytes32,bytes memory,address)"}},"id":7953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:68:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7954,"nodeType":"EmitStatement","src":"3007:73:23"},{"expression":{"arguments":[{"id":7956,"name":"actionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"3149:10:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7955,"name":"_executeAction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7971,"src":"3134:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory)"}},"id":7957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3134:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7958,"nodeType":"ExpressionStatement","src":"3134:26:23"}]},"documentation":{"id":7866,"nodeType":"StructuredDocumentation","src":"1779:159:23","text":" @dev Execute a proposal if authorized\n @param proposalId ID of the proposal to execute\n @param actionData Action data to execute"},"functionSelector":"0fc561b7","id":7960,"implemented":true,"kind":"function","modifiers":[{"id":7873,"kind":"modifierInvocation","modifierName":{"id":7872,"name":"nonReentrant","nameLocations":["2048:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":2769,"src":"2048:12:23"},"nodeType":"ModifierInvocation","src":"2048:12:23"}],"name":"executeIfAuthorized","nameLocation":"1952:19:23","nodeType":"FunctionDefinition","parameters":{"id":7871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7868,"mutability":"mutable","name":"proposalId","nameLocation":"1989:10:23","nodeType":"VariableDeclaration","scope":7960,"src":"1981:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7867,"name":"uint256","nodeType":"ElementaryTypeName","src":"1981:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7870,"mutability":"mutable","name":"actionData","nameLocation":"2022:10:23","nodeType":"VariableDeclaration","scope":7960,"src":"2009:23:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7869,"name":"bytes","nodeType":"ElementaryTypeName","src":"2009:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1971:67:23"},"returnParameters":{"id":7874,"nodeType":"ParameterList","parameters":[],"src":"2061:0:23"},"scope":8004,"src":"1943:1224:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7970,"nodeType":"Block","src":"3359:746:23","statements":[{"eventCall":{"arguments":[{"id":7967,"name":"actionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"4087:10:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7966,"name":"ActionExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8003,"src":"4072:14:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory)"}},"id":7968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4072:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7969,"nodeType":"EmitStatement","src":"4067:31:23"}]},"documentation":{"id":7961,"nodeType":"StructuredDocumentation","src":"3177:119:23","text":" @dev Execute action data (internal function)\n @param actionData Encoded action data to execute"},"id":7971,"implemented":true,"kind":"function","modifiers":[],"name":"_executeAction","nameLocation":"3310:14:23","nodeType":"FunctionDefinition","parameters":{"id":7964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7963,"mutability":"mutable","name":"actionData","nameLocation":"3338:10:23","nodeType":"VariableDeclaration","scope":7971,"src":"3325:23:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7962,"name":"bytes","nodeType":"ElementaryTypeName","src":"3325:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3324:25:23"},"returnParameters":{"id":7965,"nodeType":"ParameterList","parameters":[],"src":"3359:0:23"},"scope":8004,"src":"3301:804:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7983,"nodeType":"Block","src":"4378:55:23","statements":[{"expression":{"baseExpression":{"id":7979,"name":"executedActions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"4395:15:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":7981,"indexExpression":{"id":7980,"name":"actionDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7974,"src":"4411:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4395:31:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7978,"id":7982,"nodeType":"Return","src":"4388:38:23"}]},"documentation":{"id":7972,"nodeType":"StructuredDocumentation","src":"4115:170:23","text":" @dev Check if an action has been executed\n @param actionDataHash Hash of the action data\n @return executed True if action has been executed"},"functionSelector":"21c49e39","id":7984,"implemented":true,"kind":"function","modifiers":[],"name":"isActionExecuted","nameLocation":"4299:16:23","nodeType":"FunctionDefinition","parameters":{"id":7975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7974,"mutability":"mutable","name":"actionDataHash","nameLocation":"4324:14:23","nodeType":"VariableDeclaration","scope":7984,"src":"4316:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4316:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4315:24:23"},"returnParameters":{"id":7978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7977,"mutability":"mutable","name":"executed","nameLocation":"4368:8:23","nodeType":"VariableDeclaration","scope":7984,"src":"4363:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7976,"name":"bool","nodeType":"ElementaryTypeName","src":"4363:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4362:15:23"},"scope":8004,"src":"4290:143:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7998,"nodeType":"Block","src":"4710:61:23","statements":[{"expression":{"arguments":[{"id":7995,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7987,"src":"4753:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7993,"name":"rootPublisher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7786,"src":"4727:13:23","typeDescriptions":{"typeIdentifier":"t_contract$_GovernanceRootPublisher_$8344","typeString":"contract GovernanceRootPublisher"}},"id":7994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4741:11:23","memberName":"getProposal","nodeType":"MemberAccess","referencedDeclaration":8301,"src":"4727:25:23","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_Proposal_$8032_memory_ptr_$","typeString":"function (uint256) view external returns (struct GovernanceRootPublisher.Proposal memory)"}},"id":7996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4727:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_memory_ptr","typeString":"struct GovernanceRootPublisher.Proposal memory"}},"functionReturnParameters":7992,"id":7997,"nodeType":"Return","src":"4720:44:23"}]},"documentation":{"id":7985,"nodeType":"StructuredDocumentation","src":"4443:148:23","text":" @dev Get proposal details from root publisher\n @param proposalId ID of the proposal\n @return proposal Proposal struct"},"functionSelector":"c7f758a8","id":7999,"implemented":true,"kind":"function","modifiers":[],"name":"getProposal","nameLocation":"4605:11:23","nodeType":"FunctionDefinition","parameters":{"id":7988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7987,"mutability":"mutable","name":"proposalId","nameLocation":"4625:10:23","nodeType":"VariableDeclaration","scope":7999,"src":"4617:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7986,"name":"uint256","nodeType":"ElementaryTypeName","src":"4617:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4616:20:23"},"returnParameters":{"id":7992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7991,"mutability":"mutable","name":"proposal","nameLocation":"4700:8:23","nodeType":"VariableDeclaration","scope":7999,"src":"4660:48:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_memory_ptr","typeString":"struct GovernanceRootPublisher.Proposal"},"typeName":{"id":7990,"nodeType":"UserDefinedTypeName","pathNode":{"id":7989,"name":"GovernanceRootPublisher.Proposal","nameLocations":["4660:23:23","4684:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":8032,"src":"4660:32:23"},"referencedDeclaration":8032,"src":"4660:32:23","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_storage_ptr","typeString":"struct GovernanceRootPublisher.Proposal"}},"visibility":"internal"}],"src":"4659:50:23"},"scope":8004,"src":"4596:175:23","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"eventSelector":"a7727e8daeea8cb0ee548a1fa3caa32272453a4a058a39123abf3ec05609c783","id":8003,"name":"ActionExecuted","nameLocation":"4835:14:23","nodeType":"EventDefinition","parameters":{"id":8002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8001,"indexed":false,"mutability":"mutable","name":"actionData","nameLocation":"4856:10:23","nodeType":"VariableDeclaration","scope":8003,"src":"4850:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8000,"name":"bytes","nodeType":"ElementaryTypeName","src":"4850:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4849:18:23"},"src":"4829:39:23"}],"scope":8005,"src":"394:4476:23","usedErrors":[13,18,2750],"usedEvents":[24,7804,7810,8003]}],"src":"32:4839:23"},"id":23},"contracts/GovernanceRootPublisher.sol":{"ast":{"absolutePath":"contracts/GovernanceRootPublisher.sol","exportedSymbols":{"Context":[2684],"ERC165":[4231],"ERC20":[889],"ERC721":[2414],"ERC721Utils":[2654],"GovernanceRootPublisher":[8344],"IERC1363":[229],"IERC165":[4243],"IERC20":[967],"IERC20Errors":[279],"IERC20Metadata":[993],"IERC721":[2531],"IERC721Errors":[327],"IERC721Metadata":[2577],"LiquidStakingVault":[8906],"Ownable":[147],"ReentrancyGuard":[2805],"SafeERC20":[1457],"Strings":[4207],"WithdrawalNFT":[9104]},"id":8345,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8006,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:24"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8007,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8345,"sourceUnit":148,"src":"58:52:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/LiquidStakingVault.sol","file":"./LiquidStakingVault.sol","id":8008,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8345,"sourceUnit":8907,"src":"111:34:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8010,"name":"Ownable","nameLocations":["389:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"389:7:24"},"id":8011,"nodeType":"InheritanceSpecifier","src":"389:7:24"}],"canonicalName":"GovernanceRootPublisher","contractDependencies":[],"contractKind":"contract","documentation":{"id":8009,"nodeType":"StructuredDocumentation","src":"147:205:24","text":" @title GovernanceRootPublisher\n @dev Creates governance proposals and publishes voting power snapshots\n Handles proposal creation, snapshot taking, and root publishing for cross-chain voting"},"fullyImplemented":true,"id":8344,"linearizedBaseContracts":[8344,147,2684],"name":"GovernanceRootPublisher","nameLocation":"362:23:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"GovernanceRootPublisher.Proposal","id":8032,"members":[{"constant":false,"id":8013,"mutability":"mutable","name":"id","nameLocation":"442:2:24","nodeType":"VariableDeclaration","scope":8032,"src":"434:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8012,"name":"uint256","nodeType":"ElementaryTypeName","src":"434:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8015,"mutability":"mutable","name":"description","nameLocation":"461:11:24","nodeType":"VariableDeclaration","scope":8032,"src":"454:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8014,"name":"string","nodeType":"ElementaryTypeName","src":"454:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8017,"mutability":"mutable","name":"actionData","nameLocation":"488:10:24","nodeType":"VariableDeclaration","scope":8032,"src":"482:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":8016,"name":"bytes","nodeType":"ElementaryTypeName","src":"482:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8019,"mutability":"mutable","name":"actionDataHash","nameLocation":"516:14:24","nodeType":"VariableDeclaration","scope":8032,"src":"508:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8018,"name":"bytes32","nodeType":"ElementaryTypeName","src":"508:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8021,"mutability":"mutable","name":"snapshotBlock","nameLocation":"548:13:24","nodeType":"VariableDeclaration","scope":8032,"src":"540:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8020,"name":"uint256","nodeType":"ElementaryTypeName","src":"540:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8023,"mutability":"mutable","name":"exchangeRateSnapshot","nameLocation":"579:20:24","nodeType":"VariableDeclaration","scope":8032,"src":"571:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8022,"name":"uint256","nodeType":"ElementaryTypeName","src":"571:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8025,"mutability":"mutable","name":"votingPowerRoot","nameLocation":"617:15:24","nodeType":"VariableDeclaration","scope":8032,"src":"609:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8024,"name":"bytes32","nodeType":"ElementaryTypeName","src":"609:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8027,"mutability":"mutable","name":"rootPublished","nameLocation":"647:13:24","nodeType":"VariableDeclaration","scope":8032,"src":"642:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8026,"name":"bool","nodeType":"ElementaryTypeName","src":"642:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8029,"mutability":"mutable","name":"executed","nameLocation":"675:8:24","nodeType":"VariableDeclaration","scope":8032,"src":"670:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8028,"name":"bool","nodeType":"ElementaryTypeName","src":"670:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8031,"mutability":"mutable","name":"createdAt","nameLocation":"701:9:24","nodeType":"VariableDeclaration","scope":8032,"src":"693:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8030,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Proposal","nameLocation":"415:8:24","nodeType":"StructDefinition","scope":8344,"src":"408:309:24","visibility":"public"},{"constant":false,"functionSelector":"013cf08b","id":8037,"mutability":"mutable","name":"proposals","nameLocation":"807:9:24","nodeType":"VariableDeclaration","scope":8344,"src":"771:45:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$8032_storage_$","typeString":"mapping(uint256 => struct GovernanceRootPublisher.Proposal)"},"typeName":{"id":8036,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8033,"name":"uint256","nodeType":"ElementaryTypeName","src":"779:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"771:28:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$8032_storage_$","typeString":"mapping(uint256 => struct GovernanceRootPublisher.Proposal)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8035,"nodeType":"UserDefinedTypeName","pathNode":{"id":8034,"name":"Proposal","nameLocations":["790:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":8032,"src":"790:8:24"},"referencedDeclaration":8032,"src":"790:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_storage_ptr","typeString":"struct GovernanceRootPublisher.Proposal"}}},"visibility":"public"},{"constant":false,"id":8040,"mutability":"mutable","name":"_nextProposalId","nameLocation":"875:15:24","nodeType":"VariableDeclaration","scope":8344,"src":"859:35:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8038,"name":"uint256","nodeType":"ElementaryTypeName","src":"859:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":8039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"893:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"functionSelector":"fbfa77cf","id":8043,"mutability":"immutable","name":"vault","nameLocation":"986:5:24","nodeType":"VariableDeclaration","scope":8344,"src":"950:41:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_LiquidStakingVault_$8906","typeString":"contract LiquidStakingVault"},"typeName":{"id":8042,"nodeType":"UserDefinedTypeName","pathNode":{"id":8041,"name":"LiquidStakingVault","nameLocations":["950:18:24"],"nodeType":"IdentifierPath","referencedDeclaration":8906,"src":"950:18:24"},"referencedDeclaration":8906,"src":"950:18:24","typeDescriptions":{"typeIdentifier":"t_contract$_LiquidStakingVault_$8906","typeString":"contract LiquidStakingVault"}},"visibility":"public"},{"anonymous":false,"eventSelector":"59da9de999ff61b9b811e412df8f25ff32770a66ae28bce18473efaa6ec2bbeb","id":8057,"name":"ProposalCreated","nameLocation":"1022:15:24","nodeType":"EventDefinition","parameters":{"id":8056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8045,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"1063:10:24","nodeType":"VariableDeclaration","scope":8057,"src":"1047:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8044,"name":"uint256","nodeType":"ElementaryTypeName","src":"1047:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8047,"indexed":false,"mutability":"mutable","name":"description","nameLocation":"1090:11:24","nodeType":"VariableDeclaration","scope":8057,"src":"1083:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8046,"name":"string","nodeType":"ElementaryTypeName","src":"1083:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8049,"indexed":false,"mutability":"mutable","name":"actionData","nameLocation":"1117:10:24","nodeType":"VariableDeclaration","scope":8057,"src":"1111:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8048,"name":"bytes","nodeType":"ElementaryTypeName","src":"1111:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8051,"indexed":false,"mutability":"mutable","name":"actionDataHash","nameLocation":"1145:14:24","nodeType":"VariableDeclaration","scope":8057,"src":"1137:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1137:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8053,"indexed":false,"mutability":"mutable","name":"snapshotBlock","nameLocation":"1177:13:24","nodeType":"VariableDeclaration","scope":8057,"src":"1169:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8052,"name":"uint256","nodeType":"ElementaryTypeName","src":"1169:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8055,"indexed":false,"mutability":"mutable","name":"exchangeRateSnapshot","nameLocation":"1208:20:24","nodeType":"VariableDeclaration","scope":8057,"src":"1200:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8054,"name":"uint256","nodeType":"ElementaryTypeName","src":"1200:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1037:197:24"},"src":"1016:219:24"},{"anonymous":false,"eventSelector":"4ad88007ea0d4cb3af4700b414825af8fd184bcf884745becc7e3490810304d2","id":8063,"name":"VotingPowerRootPublished","nameLocation":"1251:24:24","nodeType":"EventDefinition","parameters":{"id":8062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8059,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"1301:10:24","nodeType":"VariableDeclaration","scope":8063,"src":"1285:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8058,"name":"uint256","nodeType":"ElementaryTypeName","src":"1285:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8061,"indexed":false,"mutability":"mutable","name":"votingPowerRoot","nameLocation":"1329:15:24","nodeType":"VariableDeclaration","scope":8063,"src":"1321:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1321:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1275:75:24"},"src":"1245:106:24"},{"anonymous":false,"eventSelector":"badbd87941bb6424ed4aa4719bf01a3319b64480e49f89018c718603239553d2","id":8069,"name":"ProposalExecuted","nameLocation":"1367:16:24","nodeType":"EventDefinition","parameters":{"id":8068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8065,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"1409:10:24","nodeType":"VariableDeclaration","scope":8069,"src":"1393:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8064,"name":"uint256","nodeType":"ElementaryTypeName","src":"1393:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8067,"indexed":false,"mutability":"mutable","name":"actionData","nameLocation":"1435:10:24","nodeType":"VariableDeclaration","scope":8069,"src":"1429:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8066,"name":"bytes","nodeType":"ElementaryTypeName","src":"1429:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1383:68:24"},"src":"1361:91:24"},{"body":{"id":8084,"nodeType":"Block","src":"1510:51:24","statements":[{"expression":{"id":8082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8078,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8043,"src":"1520:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_LiquidStakingVault_$8906","typeString":"contract LiquidStakingVault"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8080,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8071,"src":"1547:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8079,"name":"LiquidStakingVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8906,"src":"1528:18:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LiquidStakingVault_$8906_$","typeString":"type(contract LiquidStakingVault)"}},"id":8081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_LiquidStakingVault_$8906","typeString":"contract LiquidStakingVault"}},"src":"1520:34:24","typeDescriptions":{"typeIdentifier":"t_contract$_LiquidStakingVault_$8906","typeString":"contract LiquidStakingVault"}},"id":8083,"nodeType":"ExpressionStatement","src":"1520:34:24"}]},"id":8085,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":8074,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1498:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1502:6:24","memberName":"sender","nodeType":"MemberAccess","src":"1498:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8076,"kind":"baseConstructorSpecifier","modifierName":{"id":8073,"name":"Ownable","nameLocations":["1490:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1490:7:24"},"nodeType":"ModifierInvocation","src":"1490:19:24"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8071,"mutability":"mutable","name":"_vault","nameLocation":"1482:6:24","nodeType":"VariableDeclaration","scope":8085,"src":"1474:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8070,"name":"address","nodeType":"ElementaryTypeName","src":"1474:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1473:16:24"},"returnParameters":{"id":8077,"nodeType":"ParameterList","parameters":[],"src":"1510:0:24"},"scope":8344,"src":"1462:99:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8168,"nodeType":"Block","src":"1975:1129:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8100,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"1999:11:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1993:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8098,"name":"bytes","nodeType":"ElementaryTypeName","src":"1993:5:24","typeDescriptions":{}}},"id":8101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1993:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2012:6:24","memberName":"length","nodeType":"MemberAccess","src":"1993:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2021:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1993:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465736372697074696f6e2063616e6e6f7420626520656d707479","id":8105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2024:29:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5136780377cc231258678d13fe3ea7b31bc96a5f8a36a4c81f29820551bb6214","typeString":"literal_string \"Description cannot be empty\""},"value":"Description cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5136780377cc231258678d13fe3ea7b31bc96a5f8a36a4c81f29820551bb6214","typeString":"literal_string \"Description cannot be empty\""}],"id":8097,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1985:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1985:69:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8107,"nodeType":"ExpressionStatement","src":"1985:69:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8109,"name":"actionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8090,"src":"2072:10:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2083:6:24","memberName":"length","nodeType":"MemberAccess","src":"2072:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2092:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2072:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416374696f6e20646174612063616e6e6f7420626520656d707479","id":8113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2095:29:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_13390cb6ac8c0ea9ab608030d21b8caec76504526f6045e2233c880c3b675edd","typeString":"literal_string \"Action data cannot be empty\""},"value":"Action data cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13390cb6ac8c0ea9ab608030d21b8caec76504526f6045e2233c880c3b675edd","typeString":"literal_string \"Action data cannot be empty\""}],"id":8108,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2064:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2064:61:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8115,"nodeType":"ExpressionStatement","src":"2064:61:24"},{"expression":{"id":8119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8116,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"2144:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2157:17:24","subExpression":{"id":8117,"name":"_nextProposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8040,"src":"2157:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2144:30:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8120,"nodeType":"ExpressionStatement","src":"2144:30:24"},{"assignments":[8122],"declarations":[{"constant":false,"id":8122,"mutability":"mutable","name":"snapshotBlock","nameLocation":"2243:13:24","nodeType":"VariableDeclaration","scope":8168,"src":"2235:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8121,"name":"uint256","nodeType":"ElementaryTypeName","src":"2235:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8125,"initialValue":{"expression":{"id":8123,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2259:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2265:6:24","memberName":"number","nodeType":"MemberAccess","src":"2259:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2235:36:24"},{"assignments":[8127],"declarations":[{"constant":false,"id":8127,"mutability":"mutable","name":"exchangeRateSnapshot","nameLocation":"2289:20:24","nodeType":"VariableDeclaration","scope":8168,"src":"2281:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2281:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8131,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8128,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8043,"src":"2312:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_LiquidStakingVault_$8906","typeString":"contract LiquidStakingVault"}},"id":8129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2318:12:24","memberName":"exchangeRate","nodeType":"MemberAccess","referencedDeclaration":8381,"src":"2312:18:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":8130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2312:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2281:51:24"},{"assignments":[8133],"declarations":[{"constant":false,"id":8133,"mutability":"mutable","name":"actionDataHash","nameLocation":"2397:14:24","nodeType":"VariableDeclaration","scope":8168,"src":"2389:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2389:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8137,"initialValue":{"arguments":[{"id":8135,"name":"actionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8090,"src":"2424:10:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8134,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2414:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2414:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2389:46:24"},{"expression":{"id":8157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8138,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"2454:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$8032_storage_$","typeString":"mapping(uint256 => struct GovernanceRootPublisher.Proposal storage ref)"}},"id":8140,"indexExpression":{"id":8139,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"2464:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2454:21:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_storage","typeString":"struct GovernanceRootPublisher.Proposal storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8142,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"2505:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8143,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"2542:11:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8144,"name":"actionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8090,"src":"2579:10:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":8145,"name":"actionDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8133,"src":"2619:14:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8146,"name":"snapshotBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8122,"src":"2662:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8147,"name":"exchangeRateSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8127,"src":"2711:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":8150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2770:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2762:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2762:7:24","typeDescriptions":{}}},"id":8151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2762:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":8152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2801:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":8153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2830:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"expression":{"id":8154,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2860:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2866:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"2860:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8141,"name":"Proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8032,"src":"2478:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Proposal_$8032_storage_ptr_$","typeString":"type(struct GovernanceRootPublisher.Proposal storage pointer)"}},"id":8156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2501:2:24","2529:11:24","2567:10:24","2603:14:24","2647:13:24","2689:20:24","2745:15:24","2786:13:24","2820:8:24","2849:9:24"],"names":["id","description","actionData","actionDataHash","snapshotBlock","exchangeRateSnapshot","votingPowerRoot","rootPublished","executed","createdAt"],"nodeType":"FunctionCall","src":"2478:408:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_memory_ptr","typeString":"struct GovernanceRootPublisher.Proposal memory"}},"src":"2454:432:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_storage","typeString":"struct GovernanceRootPublisher.Proposal storage ref"}},"id":8158,"nodeType":"ExpressionStatement","src":"2454:432:24"},{"eventCall":{"arguments":[{"id":8160,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"2939:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8161,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"2963:11:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8162,"name":"actionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8090,"src":"2988:10:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":8163,"name":"actionDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8133,"src":"3012:14:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8164,"name":"snapshotBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8122,"src":"3040:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8165,"name":"exchangeRateSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8127,"src":"3067:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8159,"name":"ProposalCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8057,"src":"2910:15:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,string memory,bytes memory,bytes32,uint256,uint256)"}},"id":8166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2910:187:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8167,"nodeType":"EmitStatement","src":"2905:192:24"}]},"documentation":{"id":8086,"nodeType":"StructuredDocumentation","src":"1571:253:24","text":" @dev Create a new governance proposal\n @param description Human-readable description of the proposal\n @param actionData Encoded action data to execute if proposal passes\n @return proposalId ID of the created proposal"},"functionSelector":"d182fb9e","id":8169,"implemented":true,"kind":"function","modifiers":[{"id":8093,"kind":"modifierInvocation","modifierName":{"id":8092,"name":"onlyOwner","nameLocations":["1936:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1936:9:24"},"nodeType":"ModifierInvocation","src":"1936:9:24"}],"name":"createProposal","nameLocation":"1838:14:24","nodeType":"FunctionDefinition","parameters":{"id":8091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8088,"mutability":"mutable","name":"description","nameLocation":"1876:11:24","nodeType":"VariableDeclaration","scope":8169,"src":"1862:25:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8087,"name":"string","nodeType":"ElementaryTypeName","src":"1862:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8090,"mutability":"mutable","name":"actionData","nameLocation":"1910:10:24","nodeType":"VariableDeclaration","scope":8169,"src":"1897:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8089,"name":"bytes","nodeType":"ElementaryTypeName","src":"1897:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1852:74:24"},"returnParameters":{"id":8096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8095,"mutability":"mutable","name":"proposalId","nameLocation":"1963:10:24","nodeType":"VariableDeclaration","scope":8169,"src":"1955:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8094,"name":"uint256","nodeType":"ElementaryTypeName","src":"1955:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1954:20:24"},"scope":8344,"src":"1829:1275:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8227,"nodeType":"Block","src":"3412:437:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":8180,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"3430:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$8032_storage_$","typeString":"mapping(uint256 => struct GovernanceRootPublisher.Proposal storage ref)"}},"id":8182,"indexExpression":{"id":8181,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8172,"src":"3440:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3430:21:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_storage","typeString":"struct GovernanceRootPublisher.Proposal storage ref"}},"id":8183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3452:2:24","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":8013,"src":"3430:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3458:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3430:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c20646f6573206e6f74206578697374","id":8186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3461:25:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e62a544e5aebc4f7865ef71973090f3036faa05a5f7be3ea3605ab15dc232bf","typeString":"literal_string \"Proposal does not exist\""},"value":"Proposal does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8e62a544e5aebc4f7865ef71973090f3036faa05a5f7be3ea3605ab15dc232bf","typeString":"literal_string \"Proposal does not exist\""}],"id":8179,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3422:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3422:65:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8188,"nodeType":"ExpressionStatement","src":"3422:65:24"},{"expression":{"arguments":[{"id":8194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3505:36:24","subExpression":{"expression":{"baseExpression":{"id":8190,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"3506:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$8032_storage_$","typeString":"mapping(uint256 => struct GovernanceRootPublisher.Proposal storage ref)"}},"id":8192,"indexExpression":{"id":8191,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8172,"src":"3516:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3506:21:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_storage","typeString":"struct GovernanceRootPublisher.Proposal storage ref"}},"id":8193,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3528:13:24","memberName":"rootPublished","nodeType":"MemberAccess","referencedDeclaration":8027,"src":"3506:35:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f6f7420616c7265616479207075626c6973686564","id":8195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3543:24:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_625465716d2bbcf60dea1ef1dab79961ff17807d3e309a8447a933159e425ee8","typeString":"literal_string \"Root already published\""},"value":"Root already published"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_625465716d2bbcf60dea1ef1dab79961ff17807d3e309a8447a933159e425ee8","typeString":"literal_string \"Root already published\""}],"id":8189,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3497:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3497:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8197,"nodeType":"ExpressionStatement","src":"3497:71:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8199,"name":"votingPowerRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8174,"src":"3586:15:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3613:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3605:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3605:7:24","typeDescriptions":{}}},"id":8203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3605:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3586:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f6f742063616e6e6f74206265207a65726f","id":8205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3617:21:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_7fae8c25cd6c6e20d8f58331d2aa29206ef64721d3145104964788d98a7c0737","typeString":"literal_string \"Root cannot be zero\""},"value":"Root cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7fae8c25cd6c6e20d8f58331d2aa29206ef64721d3145104964788d98a7c0737","typeString":"literal_string \"Root cannot be zero\""}],"id":8198,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3578:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3578:61:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8207,"nodeType":"ExpressionStatement","src":"3578:61:24"},{"expression":{"id":8213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":8208,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"3658:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$8032_storage_$","typeString":"mapping(uint256 => struct GovernanceRootPublisher.Proposal storage ref)"}},"id":8210,"indexExpression":{"id":8209,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8172,"src":"3668:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3658:21:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_storage","typeString":"struct GovernanceRootPublisher.Proposal storage ref"}},"id":8211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3680:15:24","memberName":"votingPowerRoot","nodeType":"MemberAccess","referencedDeclaration":8025,"src":"3658:37:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8212,"name":"votingPowerRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8174,"src":"3698:15:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3658:55:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8214,"nodeType":"ExpressionStatement","src":"3658:55:24"},{"expression":{"id":8220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":8215,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"3723:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$8032_storage_$","typeString":"mapping(uint256 => struct GovernanceRootPublisher.Proposal storage ref)"}},"id":8217,"indexExpression":{"id":8216,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8172,"src":"3733:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3723:21:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_storage","typeString":"struct GovernanceRootPublisher.Proposal storage ref"}},"id":8218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3745:13:24","memberName":"rootPublished","nodeType":"MemberAccess","referencedDeclaration":8027,"src":"3723:35:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3761:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3723:42:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8221,"nodeType":"ExpressionStatement","src":"3723:42:24"},{"eventCall":{"arguments":[{"id":8223,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8172,"src":"3814:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8224,"name":"votingPowerRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8174,"src":"3826:15:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8222,"name":"VotingPowerRootPublished","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8063,"src":"3789:24:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,bytes32)"}},"id":8225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3789:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8226,"nodeType":"EmitStatement","src":"3784:58:24"}]},"documentation":{"id":8170,"nodeType":"StructuredDocumentation","src":"3114:175:24","text":" @dev Publish voting power root for a proposal\n @param proposalId ID of the proposal\n @param votingPowerRoot Merkle root of voting power snapshot"},"functionSelector":"6f17c156","id":8228,"implemented":true,"kind":"function","modifiers":[{"id":8177,"kind":"modifierInvocation","modifierName":{"id":8176,"name":"onlyOwner","nameLocations":["3402:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3402:9:24"},"nodeType":"ModifierInvocation","src":"3402:9:24"}],"name":"publishVotingPowerRoot","nameLocation":"3303:22:24","nodeType":"FunctionDefinition","parameters":{"id":8175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8172,"mutability":"mutable","name":"proposalId","nameLocation":"3343:10:24","nodeType":"VariableDeclaration","scope":8228,"src":"3335:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8171,"name":"uint256","nodeType":"ElementaryTypeName","src":"3335:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8174,"mutability":"mutable","name":"votingPowerRoot","nameLocation":"3371:15:24","nodeType":"VariableDeclaration","scope":8228,"src":"3363:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3363:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3325:67:24"},"returnParameters":{"id":8178,"nodeType":"ParameterList","parameters":[],"src":"3412:0:24"},"scope":8344,"src":"3294:555:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8276,"nodeType":"Block","src":"4046:407:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":8235,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"4064:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$8032_storage_$","typeString":"mapping(uint256 => struct GovernanceRootPublisher.Proposal storage ref)"}},"id":8237,"indexExpression":{"id":8236,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"4074:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4064:21:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_storage","typeString":"struct GovernanceRootPublisher.Proposal storage ref"}},"id":8238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4086:2:24","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":8013,"src":"4064:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4092:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4064:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c20646f6573206e6f74206578697374","id":8241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4095:25:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e62a544e5aebc4f7865ef71973090f3036faa05a5f7be3ea3605ab15dc232bf","typeString":"literal_string \"Proposal does not exist\""},"value":"Proposal does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8e62a544e5aebc4f7865ef71973090f3036faa05a5f7be3ea3605ab15dc232bf","typeString":"literal_string \"Proposal does not exist\""}],"id":8234,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4056:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4056:65:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8243,"nodeType":"ExpressionStatement","src":"4056:65:24"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":8245,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"4139:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$8032_storage_$","typeString":"mapping(uint256 => struct GovernanceRootPublisher.Proposal storage ref)"}},"id":8247,"indexExpression":{"id":8246,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"4149:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4139:21:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_storage","typeString":"struct GovernanceRootPublisher.Proposal storage ref"}},"id":8248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4161:13:24","memberName":"rootPublished","nodeType":"MemberAccess","referencedDeclaration":8027,"src":"4139:35:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f6f74206e6f74207075626c6973686564","id":8249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4176:20:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_f51d8a2ee1ed415d9e0a7f47c891529969ae72513581188f4c1a72c1e5509376","typeString":"literal_string \"Root not published\""},"value":"Root not published"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f51d8a2ee1ed415d9e0a7f47c891529969ae72513581188f4c1a72c1e5509376","typeString":"literal_string \"Root not published\""}],"id":8244,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4131:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4131:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8251,"nodeType":"ExpressionStatement","src":"4131:66:24"},{"expression":{"arguments":[{"id":8257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4215:31:24","subExpression":{"expression":{"baseExpression":{"id":8253,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"4216:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$8032_storage_$","typeString":"mapping(uint256 => struct GovernanceRootPublisher.Proposal storage ref)"}},"id":8255,"indexExpression":{"id":8254,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"4226:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4216:21:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_storage","typeString":"struct GovernanceRootPublisher.Proposal storage ref"}},"id":8256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4238:8:24","memberName":"executed","nodeType":"MemberAccess","referencedDeclaration":8029,"src":"4216:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c20616c7265616479206578656375746564","id":8258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4248:27:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd","typeString":"literal_string \"Proposal already executed\""},"value":"Proposal already executed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd","typeString":"literal_string \"Proposal already executed\""}],"id":8252,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4207:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4207:69:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8260,"nodeType":"ExpressionStatement","src":"4207:69:24"},{"expression":{"id":8266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":8261,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"4323:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$8032_storage_$","typeString":"mapping(uint256 => struct GovernanceRootPublisher.Proposal storage ref)"}},"id":8263,"indexExpression":{"id":8262,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"4333:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4323:21:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_storage","typeString":"struct GovernanceRootPublisher.Proposal storage ref"}},"id":8264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4345:8:24","memberName":"executed","nodeType":"MemberAccess","referencedDeclaration":8029,"src":"4323:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4356:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4323:37:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8267,"nodeType":"ExpressionStatement","src":"4323:37:24"},{"eventCall":{"arguments":[{"id":8269,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"4401:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":8270,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"4413:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$8032_storage_$","typeString":"mapping(uint256 => struct GovernanceRootPublisher.Proposal storage ref)"}},"id":8272,"indexExpression":{"id":8271,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"4423:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4413:21:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_storage","typeString":"struct GovernanceRootPublisher.Proposal storage ref"}},"id":8273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4435:10:24","memberName":"actionData","nodeType":"MemberAccess","referencedDeclaration":8017,"src":"4413:32:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"id":8268,"name":"ProposalExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8069,"src":"4384:16:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,bytes memory)"}},"id":8274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4384:62:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8275,"nodeType":"EmitStatement","src":"4379:67:24"}]},"documentation":{"id":8229,"nodeType":"StructuredDocumentation","src":"3859:128:24","text":" @dev Execute a proposal (called by GovernanceExecutor)\n @param proposalId ID of the proposal to execute"},"functionSelector":"0d61b519","id":8277,"implemented":true,"kind":"function","modifiers":[],"name":"executeProposal","nameLocation":"4001:15:24","nodeType":"FunctionDefinition","parameters":{"id":8232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8231,"mutability":"mutable","name":"proposalId","nameLocation":"4025:10:24","nodeType":"VariableDeclaration","scope":8277,"src":"4017:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8230,"name":"uint256","nodeType":"ElementaryTypeName","src":"4017:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4016:20:24"},"returnParameters":{"id":8233,"nodeType":"ParameterList","parameters":[],"src":"4046:0:24"},"scope":8344,"src":"3992:461:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8300,"nodeType":"Block","src":"4686:120:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":8287,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"4704:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$8032_storage_$","typeString":"mapping(uint256 => struct GovernanceRootPublisher.Proposal storage ref)"}},"id":8289,"indexExpression":{"id":8288,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8280,"src":"4714:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4704:21:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_storage","typeString":"struct GovernanceRootPublisher.Proposal storage ref"}},"id":8290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4726:2:24","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":8013,"src":"4704:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4732:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4704:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c20646f6573206e6f74206578697374","id":8293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4735:25:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e62a544e5aebc4f7865ef71973090f3036faa05a5f7be3ea3605ab15dc232bf","typeString":"literal_string \"Proposal does not exist\""},"value":"Proposal does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8e62a544e5aebc4f7865ef71973090f3036faa05a5f7be3ea3605ab15dc232bf","typeString":"literal_string \"Proposal does not exist\""}],"id":8286,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4696:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4696:65:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8295,"nodeType":"ExpressionStatement","src":"4696:65:24"},{"expression":{"baseExpression":{"id":8296,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"4778:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$8032_storage_$","typeString":"mapping(uint256 => struct GovernanceRootPublisher.Proposal storage ref)"}},"id":8298,"indexExpression":{"id":8297,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8280,"src":"4788:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4778:21:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_storage","typeString":"struct GovernanceRootPublisher.Proposal storage ref"}},"functionReturnParameters":8285,"id":8299,"nodeType":"Return","src":"4771:28:24"}]},"documentation":{"id":8278,"nodeType":"StructuredDocumentation","src":"4463:128:24","text":" @dev Get proposal details\n @param proposalId ID of the proposal\n @return proposal Proposal struct"},"functionSelector":"c7f758a8","id":8301,"implemented":true,"kind":"function","modifiers":[],"name":"getProposal","nameLocation":"4605:11:24","nodeType":"FunctionDefinition","parameters":{"id":8281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8280,"mutability":"mutable","name":"proposalId","nameLocation":"4625:10:24","nodeType":"VariableDeclaration","scope":8301,"src":"4617:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8279,"name":"uint256","nodeType":"ElementaryTypeName","src":"4617:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4616:20:24"},"returnParameters":{"id":8285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8284,"mutability":"mutable","name":"proposal","nameLocation":"4676:8:24","nodeType":"VariableDeclaration","scope":8301,"src":"4660:24:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_memory_ptr","typeString":"struct GovernanceRootPublisher.Proposal"},"typeName":{"id":8283,"nodeType":"UserDefinedTypeName","pathNode":{"id":8282,"name":"Proposal","nameLocations":["4660:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":8032,"src":"4660:8:24"},"referencedDeclaration":8032,"src":"4660:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_storage_ptr","typeString":"struct GovernanceRootPublisher.Proposal"}},"visibility":"internal"}],"src":"4659:26:24"},"scope":8344,"src":"4596:210:24","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8317,"nodeType":"Block","src":"5171:197:24","statements":[{"expression":{"arguments":[{"id":8313,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8304,"src":"5343:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8314,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8306,"src":"5349:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8311,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8043,"src":"5322:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_LiquidStakingVault_$8906","typeString":"contract LiquidStakingVault"}},"id":8312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5328:14:24","memberName":"getVotingPower","nodeType":"MemberAccess","referencedDeclaration":8835,"src":"5322:20:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":8315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8310,"id":8316,"nodeType":"Return","src":"5315:46:24"}]},"documentation":{"id":8302,"nodeType":"StructuredDocumentation","src":"4816:218:24","text":" @dev Get voting power for a user at a specific block\n @param user User address\n @param blockNumber Block number for snapshot\n @return votingPower User's voting power at the snapshot"},"functionSelector":"abebe45c","id":8318,"implemented":true,"kind":"function","modifiers":[],"name":"getVotingPowerAtBlock","nameLocation":"5048:21:24","nodeType":"FunctionDefinition","parameters":{"id":8307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8304,"mutability":"mutable","name":"user","nameLocation":"5087:4:24","nodeType":"VariableDeclaration","scope":8318,"src":"5079:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8303,"name":"address","nodeType":"ElementaryTypeName","src":"5079:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8306,"mutability":"mutable","name":"blockNumber","nameLocation":"5109:11:24","nodeType":"VariableDeclaration","scope":8318,"src":"5101:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8305,"name":"uint256","nodeType":"ElementaryTypeName","src":"5101:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5069:57:24"},"returnParameters":{"id":8310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8309,"mutability":"mutable","name":"votingPower","nameLocation":"5158:11:24","nodeType":"VariableDeclaration","scope":8318,"src":"5150:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8308,"name":"uint256","nodeType":"ElementaryTypeName","src":"5150:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5149:21:24"},"scope":8344,"src":"5039:329:24","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8326,"nodeType":"Block","src":"5489:39:24","statements":[{"expression":{"id":8324,"name":"_nextProposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8040,"src":"5506:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8323,"id":8325,"nodeType":"Return","src":"5499:22:24"}]},"documentation":{"id":8319,"nodeType":"StructuredDocumentation","src":"5378:48:24","text":" @dev Get the next proposal ID"},"functionSelector":"2ab09d14","id":8327,"implemented":true,"kind":"function","modifiers":[],"name":"nextProposalId","nameLocation":"5440:14:24","nodeType":"FunctionDefinition","parameters":{"id":8320,"nodeType":"ParameterList","parameters":[],"src":"5454:2:24"},"returnParameters":{"id":8323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8327,"src":"5480:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8321,"name":"uint256","nodeType":"ElementaryTypeName","src":"5480:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5479:9:24"},"scope":8344,"src":"5431:97:24","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8342,"nodeType":"Block","src":"5763:53:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":8335,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"5780:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$8032_storage_$","typeString":"mapping(uint256 => struct GovernanceRootPublisher.Proposal storage ref)"}},"id":8337,"indexExpression":{"id":8336,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8330,"src":"5790:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5780:21:24","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8032_storage","typeString":"struct GovernanceRootPublisher.Proposal storage ref"}},"id":8338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5802:2:24","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":8013,"src":"5780:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5808:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5780:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8334,"id":8341,"nodeType":"Return","src":"5773:36:24"}]},"documentation":{"id":8328,"nodeType":"StructuredDocumentation","src":"5538:140:24","text":" @dev Check if a proposal exists\n @param proposalId ID of the proposal\n @return exists True if proposal exists"},"functionSelector":"1374b22d","id":8343,"implemented":true,"kind":"function","modifiers":[],"name":"proposalExists","nameLocation":"5692:14:24","nodeType":"FunctionDefinition","parameters":{"id":8331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8330,"mutability":"mutable","name":"proposalId","nameLocation":"5715:10:24","nodeType":"VariableDeclaration","scope":8343,"src":"5707:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8329,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5706:20:24"},"returnParameters":{"id":8334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8333,"mutability":"mutable","name":"exists","nameLocation":"5755:6:24","nodeType":"VariableDeclaration","scope":8343,"src":"5750:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8332,"name":"bool","nodeType":"ElementaryTypeName","src":"5750:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5749:13:24"},"scope":8344,"src":"5683:133:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8345,"src":"353:5465:24","usedErrors":[13,18],"usedEvents":[24,8057,8063,8069]}],"src":"32:5787:24"},"id":24},"contracts/LiquidStakingVault.sol":{"ast":{"absolutePath":"contracts/LiquidStakingVault.sol","exportedSymbols":{"Context":[2684],"ERC165":[4231],"ERC20":[889],"ERC721":[2414],"ERC721Utils":[2654],"IERC1363":[229],"IERC165":[4243],"IERC20":[967],"IERC20Errors":[279],"IERC20Metadata":[993],"IERC721":[2531],"IERC721Errors":[327],"IERC721Metadata":[2577],"LiquidStakingVault":[8906],"Ownable":[147],"ReentrancyGuard":[2805],"SafeERC20":[1457],"Strings":[4207],"WithdrawalNFT":[9104]},"id":8907,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8346,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:25"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":8347,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8907,"sourceUnit":890,"src":"58:55:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":8348,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8907,"sourceUnit":968,"src":"114:56:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":8349,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8907,"sourceUnit":1458,"src":"171:65:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":8350,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8907,"sourceUnit":2806,"src":"237:59:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8351,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8907,"sourceUnit":148,"src":"297:52:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/WithdrawalNFT.sol","file":"./WithdrawalNFT.sol","id":8352,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8907,"sourceUnit":9105,"src":"350:29:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8354,"name":"ERC20","nameLocations":["658:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":889,"src":"658:5:25"},"id":8355,"nodeType":"InheritanceSpecifier","src":"658:5:25"},{"baseName":{"id":8356,"name":"ReentrancyGuard","nameLocations":["665:15:25"],"nodeType":"IdentifierPath","referencedDeclaration":2805,"src":"665:15:25"},"id":8357,"nodeType":"InheritanceSpecifier","src":"665:15:25"},{"baseName":{"id":8358,"name":"Ownable","nameLocations":["682:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"682:7:25"},"id":8359,"nodeType":"InheritanceSpecifier","src":"682:7:25"}],"canonicalName":"LiquidStakingVault","contractDependencies":[],"contractKind":"contract","documentation":{"id":8353,"nodeType":"StructuredDocumentation","src":"381:245:25","text":" @title LiquidStakingVault\n @dev ERC-4626-like liquid staking vault with time-locked redemptions\n Implements shares model where exchange rate = totalAssets / totalShares\n LST tokens appreciate over time as rewards are distributed"},"fullyImplemented":true,"id":8906,"linearizedBaseContracts":[8906,147,2805,889,279,993,967,2684],"name":"LiquidStakingVault","nameLocation":"636:18:25","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8363,"libraryName":{"id":8360,"name":"SafeERC20","nameLocations":["702:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":1457,"src":"702:9:25"},"nodeType":"UsingForDirective","src":"696:27:25","typeName":{"id":8362,"nodeType":"UserDefinedTypeName","pathNode":{"id":8361,"name":"IERC20","nameLocations":["716:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"716:6:25"},"referencedDeclaration":967,"src":"716:6:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"38d52e0f","id":8366,"mutability":"immutable","name":"asset","nameLocation":"753:5:25","nodeType":"VariableDeclaration","scope":8906,"src":"729:29:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":8365,"nodeType":"UserDefinedTypeName","pathNode":{"id":8364,"name":"IERC20","nameLocations":["729:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"729:6:25"},"referencedDeclaration":967,"src":"729:6:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"83453945","id":8369,"mutability":"immutable","name":"withdrawalNFT","nameLocation":"795:13:25","nodeType":"VariableDeclaration","scope":8906,"src":"764:44:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_WithdrawalNFT_$9104","typeString":"contract WithdrawalNFT"},"typeName":{"id":8368,"nodeType":"UserDefinedTypeName","pathNode":{"id":8367,"name":"WithdrawalNFT","nameLocations":["764:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":9104,"src":"764:13:25"},"referencedDeclaration":9104,"src":"764:13:25","typeDescriptions":{"typeIdentifier":"t_contract$_WithdrawalNFT_$9104","typeString":"contract WithdrawalNFT"}},"visibility":"public"},{"constant":true,"functionSelector":"d9a912ec","id":8372,"mutability":"constant","name":"UNBONDING_PERIOD","nameLocation":"843:16:25","nodeType":"VariableDeclaration","scope":8906,"src":"819:49:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8370,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"37","id":8371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"862:6:25","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"visibility":"public"},{"constant":true,"functionSelector":"aaf5eb68","id":8375,"mutability":"constant","name":"PRECISION","nameLocation":"898:9:25","nodeType":"VariableDeclaration","scope":8906,"src":"874:40:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8373,"name":"uint256","nodeType":"ElementaryTypeName","src":"874:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":8374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"910:4:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"public"},{"constant":false,"id":8377,"mutability":"mutable","name":"_totalAssets","nameLocation":"998:12:25","nodeType":"VariableDeclaration","scope":8906,"src":"982:28:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8376,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":8379,"mutability":"mutable","name":"_totalShares","nameLocation":"1069:12:25","nodeType":"VariableDeclaration","scope":8906,"src":"1053:28:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1053:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"3ba0b9a9","id":8381,"mutability":"mutable","name":"exchangeRate","nameLocation":"1178:12:25","nodeType":"VariableDeclaration","scope":8906,"src":"1163:27:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8380,"name":"uint256","nodeType":"ElementaryTypeName","src":"1163:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c8f33c91","id":8383,"mutability":"mutable","name":"lastUpdateTime","nameLocation":"1259:14:25","nodeType":"VariableDeclaration","scope":8906,"src":"1244:29:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1244:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"73a19dd210f1a7f902193214c0ee91dd35ee5b4d920cba8d519eca65a7b488ca","id":8391,"name":"Deposited","nameLocation":"1304:9:25","nodeType":"EventDefinition","parameters":{"id":8390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8385,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1330:4:25","nodeType":"VariableDeclaration","scope":8391,"src":"1314:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8384,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8387,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"1344:6:25","nodeType":"VariableDeclaration","scope":8391,"src":"1336:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8386,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8389,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"1360:6:25","nodeType":"VariableDeclaration","scope":8391,"src":"1352:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8388,"name":"uint256","nodeType":"ElementaryTypeName","src":"1352:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1313:54:25"},"src":"1298:70:25"},{"anonymous":false,"eventSelector":"29e98ba00d07f171959c4ddcd2f3020debc7c52cf537a034d7e664340d098c6c","id":8397,"name":"RewardsDistributed","nameLocation":"1379:18:25","nodeType":"EventDefinition","parameters":{"id":8396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8393,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1406:6:25","nodeType":"VariableDeclaration","scope":8397,"src":"1398:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8392,"name":"uint256","nodeType":"ElementaryTypeName","src":"1398:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8395,"indexed":false,"mutability":"mutable","name":"newExchangeRate","nameLocation":"1422:15:25","nodeType":"VariableDeclaration","scope":8397,"src":"1414:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8394,"name":"uint256","nodeType":"ElementaryTypeName","src":"1414:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1397:41:25"},"src":"1373:66:25"},{"anonymous":false,"eventSelector":"31f69201fab7912e3ec9850e3ab705964bf46d9d4276bdcbb6d05e965e5f5401","id":8405,"name":"WithdrawalInitiated","nameLocation":"1450:19:25","nodeType":"EventDefinition","parameters":{"id":8404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8399,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1486:4:25","nodeType":"VariableDeclaration","scope":8405,"src":"1470:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8398,"name":"address","nodeType":"ElementaryTypeName","src":"1470:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8401,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"1500:6:25","nodeType":"VariableDeclaration","scope":8405,"src":"1492:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8400,"name":"uint256","nodeType":"ElementaryTypeName","src":"1492:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8403,"indexed":false,"mutability":"mutable","name":"nftId","nameLocation":"1516:5:25","nodeType":"VariableDeclaration","scope":8405,"src":"1508:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1508:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1469:53:25"},"src":"1444:79:25"},{"anonymous":false,"eventSelector":"2d43eb174787155132b52ddb6b346e2dca99302eac3df4466dbeff953d3c84d1","id":8413,"name":"WithdrawalClaimed","nameLocation":"1534:17:25","nodeType":"EventDefinition","parameters":{"id":8412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8407,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1568:4:25","nodeType":"VariableDeclaration","scope":8413,"src":"1552:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8406,"name":"address","nodeType":"ElementaryTypeName","src":"1552:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8409,"indexed":false,"mutability":"mutable","name":"nftId","nameLocation":"1582:5:25","nodeType":"VariableDeclaration","scope":8413,"src":"1574:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8408,"name":"uint256","nodeType":"ElementaryTypeName","src":"1574:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8411,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"1597:6:25","nodeType":"VariableDeclaration","scope":8413,"src":"1589:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8410,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1551:53:25"},"src":"1528:77:25"},{"body":{"id":8453,"nodeType":"Block","src":"1787:187:25","statements":[{"expression":{"id":8436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8432,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8366,"src":"1797:5:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8434,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8415,"src":"1812:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8433,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"1805:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":8435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"src":"1797:22:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":8437,"nodeType":"ExpressionStatement","src":"1797:22:25"},{"expression":{"id":8442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8438,"name":"withdrawalNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8369,"src":"1829:13:25","typeDescriptions":{"typeIdentifier":"t_contract$_WithdrawalNFT_$9104","typeString":"contract WithdrawalNFT"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8440,"name":"_withdrawalNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8417,"src":"1859:14:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8439,"name":"WithdrawalNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9104,"src":"1845:13:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WithdrawalNFT_$9104_$","typeString":"type(contract WithdrawalNFT)"}},"id":8441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1845:29:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_WithdrawalNFT_$9104","typeString":"contract WithdrawalNFT"}},"src":"1829:45:25","typeDescriptions":{"typeIdentifier":"t_contract$_WithdrawalNFT_$9104","typeString":"contract WithdrawalNFT"}},"id":8443,"nodeType":"ExpressionStatement","src":"1829:45:25"},{"expression":{"id":8446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8444,"name":"exchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"1884:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8445,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"1899:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1884:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8447,"nodeType":"ExpressionStatement","src":"1884:24:25"},{"expression":{"id":8451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8448,"name":"lastUpdateTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"1935:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8449,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1952:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1958:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"1952:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1935:32:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8452,"nodeType":"ExpressionStatement","src":"1935:32:25"}]},"id":8454,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8424,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8419,"src":"1753:4:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8425,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8421,"src":"1759:6:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":8426,"kind":"baseConstructorSpecifier","modifierName":{"id":8423,"name":"ERC20","nameLocations":["1747:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":889,"src":"1747:5:25"},"nodeType":"ModifierInvocation","src":"1747:19:25"},{"arguments":[{"expression":{"id":8428,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1775:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1779:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1775:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8430,"kind":"baseConstructorSpecifier","modifierName":{"id":8427,"name":"Ownable","nameLocations":["1767:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1767:7:25"},"nodeType":"ModifierInvocation","src":"1767:19:25"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8415,"mutability":"mutable","name":"_asset","nameLocation":"1644:6:25","nodeType":"VariableDeclaration","scope":8454,"src":"1636:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8414,"name":"address","nodeType":"ElementaryTypeName","src":"1636:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8417,"mutability":"mutable","name":"_withdrawalNFT","nameLocation":"1668:14:25","nodeType":"VariableDeclaration","scope":8454,"src":"1660:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8416,"name":"address","nodeType":"ElementaryTypeName","src":"1660:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8419,"mutability":"mutable","name":"name","nameLocation":"1706:4:25","nodeType":"VariableDeclaration","scope":8454,"src":"1692:18:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8418,"name":"string","nodeType":"ElementaryTypeName","src":"1692:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8421,"mutability":"mutable","name":"symbol","nameLocation":"1734:6:25","nodeType":"VariableDeclaration","scope":8454,"src":"1720:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8420,"name":"string","nodeType":"ElementaryTypeName","src":"1720:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1626:120:25"},"returnParameters":{"id":8431,"nodeType":"ParameterList","parameters":[],"src":"1787:0:25"},"scope":8906,"src":"1615:359:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8520,"nodeType":"Block","src":"2317:597:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8467,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8457,"src":"2335:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2344:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2335:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417373657473206d757374206265203e2030","id":8470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2347:20:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ac0027c8bb7904cbef3a4015c477709a380d230acecb17eee202be5ff611aef","typeString":"literal_string \"Assets must be > 0\""},"value":"Assets must be > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2ac0027c8bb7904cbef3a4015c477709a380d230acecb17eee202be5ff611aef","typeString":"literal_string \"Assets must be > 0\""}],"id":8466,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2327:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2327:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8472,"nodeType":"ExpressionStatement","src":"2327:41:25"},{"expression":{"id":8477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8473,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8464,"src":"2446:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8475,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8457,"src":"2472:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8474,"name":"_convertToShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8858,"src":"2455:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":8476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2455:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2446:33:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8478,"nodeType":"ExpressionStatement","src":"2446:33:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8480,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8464,"src":"2497:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2506:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2497:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536861726573206d757374206265203e2030","id":8483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2509:20:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_4df2b7691b15f24e95ec6e55d9b6bf466a15f9a0e17f4791d928de1e3293f070","typeString":"literal_string \"Shares must be > 0\""},"value":"Shares must be > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4df2b7691b15f24e95ec6e55d9b6bf466a15f9a0e17f4791d928de1e3293f070","typeString":"literal_string \"Shares must be > 0\""}],"id":8479,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2489:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8485,"nodeType":"ExpressionStatement","src":"2489:41:25"},{"expression":{"arguments":[{"expression":{"id":8489,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2609:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2613:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2609:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8493,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2629:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_LiquidStakingVault_$8906","typeString":"contract LiquidStakingVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LiquidStakingVault_$8906","typeString":"contract LiquidStakingVault"}],"id":8492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2621:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8491,"name":"address","nodeType":"ElementaryTypeName","src":"2621:7:25","typeDescriptions":{}}},"id":8494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2621:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8495,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8457,"src":"2636:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8486,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8366,"src":"2586:5:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":8488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2592:16:25","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1065,"src":"2586:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":8496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2586:57:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8497,"nodeType":"ExpressionStatement","src":"2586:57:25"},{"expression":{"id":8500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8498,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8377,"src":"2686:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8499,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8457,"src":"2702:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2686:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8501,"nodeType":"ExpressionStatement","src":"2686:22:25"},{"expression":{"id":8504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8502,"name":"_totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"2718:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8503,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8464,"src":"2734:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2718:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8505,"nodeType":"ExpressionStatement","src":"2718:22:25"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8506,"name":"_updateExchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8905,"src":"2750:19:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2750:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8508,"nodeType":"ExpressionStatement","src":"2750:21:25"},{"expression":{"arguments":[{"id":8510,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8459,"src":"2831:8:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8511,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8464,"src":"2841:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8509,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"2825:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2825:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8513,"nodeType":"ExpressionStatement","src":"2825:23:25"},{"eventCall":{"arguments":[{"id":8515,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8459,"src":"2882:8:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8516,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8457,"src":"2892:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8517,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8464,"src":"2900:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8514,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8391,"src":"2872:9:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":8518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2872:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8519,"nodeType":"EmitStatement","src":"2867:40:25"}]},"documentation":{"id":8455,"nodeType":"StructuredDocumentation","src":"1984:198:25","text":" @dev Deposit assets and mint shares\n @param assets Amount of assets to deposit\n @param receiver Address to receive shares\n @return shares Amount of shares minted"},"functionSelector":"6e553f65","id":8521,"implemented":true,"kind":"function","modifiers":[{"id":8462,"kind":"modifierInvocation","modifierName":{"id":8461,"name":"nonReentrant","nameLocations":["2265:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":2769,"src":"2265:12:25"},"nodeType":"ModifierInvocation","src":"2265:12:25"}],"name":"deposit","nameLocation":"2196:7:25","nodeType":"FunctionDefinition","parameters":{"id":8460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8457,"mutability":"mutable","name":"assets","nameLocation":"2212:6:25","nodeType":"VariableDeclaration","scope":8521,"src":"2204:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8456,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8459,"mutability":"mutable","name":"receiver","nameLocation":"2228:8:25","nodeType":"VariableDeclaration","scope":8521,"src":"2220:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8458,"name":"address","nodeType":"ElementaryTypeName","src":"2220:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2203:34:25"},"returnParameters":{"id":8465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8464,"mutability":"mutable","name":"shares","nameLocation":"2304:6:25","nodeType":"VariableDeclaration","scope":8521,"src":"2296:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8463,"name":"uint256","nodeType":"ElementaryTypeName","src":"2296:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:16:25"},"scope":8906,"src":"2187:727:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8587,"nodeType":"Block","src":"3270:575:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8534,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8524,"src":"3288:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3297:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3288:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536861726573206d757374206265203e2030","id":8537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3300:20:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_4df2b7691b15f24e95ec6e55d9b6bf466a15f9a0e17f4791d928de1e3293f070","typeString":"literal_string \"Shares must be > 0\""},"value":"Shares must be > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4df2b7691b15f24e95ec6e55d9b6bf466a15f9a0e17f4791d928de1e3293f070","typeString":"literal_string \"Shares must be > 0\""}],"id":8533,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3280:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3280:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8539,"nodeType":"ExpressionStatement","src":"3280:41:25"},{"expression":{"id":8544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8540,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8531,"src":"3377:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8542,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8524,"src":"3403:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8541,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"3386:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":8543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3377:33:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8545,"nodeType":"ExpressionStatement","src":"3377:33:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8547,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8531,"src":"3428:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3437:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3428:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417373657473206d757374206265203e2030","id":8550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3440:20:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ac0027c8bb7904cbef3a4015c477709a380d230acecb17eee202be5ff611aef","typeString":"literal_string \"Assets must be > 0\""},"value":"Assets must be > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2ac0027c8bb7904cbef3a4015c477709a380d230acecb17eee202be5ff611aef","typeString":"literal_string \"Assets must be > 0\""}],"id":8546,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3420:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3420:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8552,"nodeType":"ExpressionStatement","src":"3420:41:25"},{"expression":{"arguments":[{"expression":{"id":8556,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3540:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3544:6:25","memberName":"sender","nodeType":"MemberAccess","src":"3540:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8560,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3560:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_LiquidStakingVault_$8906","typeString":"contract LiquidStakingVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LiquidStakingVault_$8906","typeString":"contract LiquidStakingVault"}],"id":8559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8558,"name":"address","nodeType":"ElementaryTypeName","src":"3552:7:25","typeDescriptions":{}}},"id":8561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8562,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8531,"src":"3567:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8553,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8366,"src":"3517:5:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":8555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3523:16:25","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1065,"src":"3517:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":8563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3517:57:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8564,"nodeType":"ExpressionStatement","src":"3517:57:25"},{"expression":{"id":8567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8565,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8377,"src":"3617:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8566,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8531,"src":"3633:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3617:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8568,"nodeType":"ExpressionStatement","src":"3617:22:25"},{"expression":{"id":8571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8569,"name":"_totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"3649:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8570,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8524,"src":"3665:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3649:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8572,"nodeType":"ExpressionStatement","src":"3649:22:25"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8573,"name":"_updateExchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8905,"src":"3681:19:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3681:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8575,"nodeType":"ExpressionStatement","src":"3681:21:25"},{"expression":{"arguments":[{"id":8577,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8526,"src":"3762:8:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8578,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8524,"src":"3772:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8576,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"3756:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3756:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8580,"nodeType":"ExpressionStatement","src":"3756:23:25"},{"eventCall":{"arguments":[{"id":8582,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8526,"src":"3813:8:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8583,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8531,"src":"3823:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8584,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8524,"src":"3831:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8581,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8391,"src":"3803:9:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":8585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3803:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8586,"nodeType":"EmitStatement","src":"3798:40:25"}]},"documentation":{"id":8522,"nodeType":"StructuredDocumentation","src":"2924:214:25","text":" @dev Mint shares for assets (alternative to deposit)\n @param shares Amount of shares to mint\n @param receiver Address to receive shares\n @return assets Amount of assets required"},"functionSelector":"94bf804d","id":8588,"implemented":true,"kind":"function","modifiers":[{"id":8529,"kind":"modifierInvocation","modifierName":{"id":8528,"name":"nonReentrant","nameLocations":["3218:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":2769,"src":"3218:12:25"},"nodeType":"ModifierInvocation","src":"3218:12:25"}],"name":"mint","nameLocation":"3152:4:25","nodeType":"FunctionDefinition","parameters":{"id":8527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8524,"mutability":"mutable","name":"shares","nameLocation":"3165:6:25","nodeType":"VariableDeclaration","scope":8588,"src":"3157:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8523,"name":"uint256","nodeType":"ElementaryTypeName","src":"3157:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8526,"mutability":"mutable","name":"receiver","nameLocation":"3181:8:25","nodeType":"VariableDeclaration","scope":8588,"src":"3173:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8525,"name":"address","nodeType":"ElementaryTypeName","src":"3173:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3156:34:25"},"returnParameters":{"id":8532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8531,"mutability":"mutable","name":"assets","nameLocation":"3257:6:25","nodeType":"VariableDeclaration","scope":8588,"src":"3249:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8530,"name":"uint256","nodeType":"ElementaryTypeName","src":"3249:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3248:16:25"},"scope":8906,"src":"3143:702:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8627,"nodeType":"Block","src":"4055:410:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8597,"name":"rewardAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8591,"src":"4073:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4088:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4073:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52657761726420616d6f756e74206d757374206265203e2030","id":8600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4091:27:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_f840076b892371486d439f117fd939212a2dabee743743b5ffa54cdecac2a621","typeString":"literal_string \"Reward amount must be > 0\""},"value":"Reward amount must be > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f840076b892371486d439f117fd939212a2dabee743743b5ffa54cdecac2a621","typeString":"literal_string \"Reward amount must be > 0\""}],"id":8596,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4065:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:54:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8602,"nodeType":"ExpressionStatement","src":"4065:54:25"},{"expression":{"arguments":[{"expression":{"id":8606,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4198:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4202:6:25","memberName":"sender","nodeType":"MemberAccess","src":"4198:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8610,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4218:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_LiquidStakingVault_$8906","typeString":"contract LiquidStakingVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LiquidStakingVault_$8906","typeString":"contract LiquidStakingVault"}],"id":8609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4210:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8608,"name":"address","nodeType":"ElementaryTypeName","src":"4210:7:25","typeDescriptions":{}}},"id":8611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4210:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8612,"name":"rewardAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8591,"src":"4225:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8603,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8366,"src":"4175:5:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":8605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4181:16:25","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1065,"src":"4175:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":8613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4175:63:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8614,"nodeType":"ExpressionStatement","src":"4175:63:25"},{"expression":{"id":8617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8615,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8377,"src":"4288:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8616,"name":"rewardAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8591,"src":"4304:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4288:28:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8618,"nodeType":"ExpressionStatement","src":"4288:28:25"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8619,"name":"_updateExchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8905,"src":"4367:19:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8621,"nodeType":"ExpressionStatement","src":"4367:21:25"},{"eventCall":{"arguments":[{"id":8623,"name":"rewardAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8591,"src":"4431:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8624,"name":"exchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"4445:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8622,"name":"RewardsDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8397,"src":"4412:18:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":8625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4412:46:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8626,"nodeType":"EmitStatement","src":"4407:51:25"}]},"documentation":{"id":8589,"nodeType":"StructuredDocumentation","src":"3855:127:25","text":" @dev Distribute rewards to increase exchange rate\n @param rewardAmount Amount of rewards to distribute"},"functionSelector":"59974e38","id":8628,"implemented":true,"kind":"function","modifiers":[{"id":8594,"kind":"modifierInvocation","modifierName":{"id":8593,"name":"onlyOwner","nameLocations":["4045:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4045:9:25"},"nodeType":"ModifierInvocation","src":"4045:9:25"}],"name":"distributeRewards","nameLocation":"3996:17:25","nodeType":"FunctionDefinition","parameters":{"id":8592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8591,"mutability":"mutable","name":"rewardAmount","nameLocation":"4022:12:25","nodeType":"VariableDeclaration","scope":8628,"src":"4014:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8590,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4013:22:25"},"returnParameters":{"id":8595,"nodeType":"ParameterList","parameters":[],"src":"4055:0:25"},"scope":8906,"src":"3987:478:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8695,"nodeType":"Block","src":"4780:686:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8639,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8631,"src":"4798:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4807:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4798:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536861726573206d757374206265203e2030","id":8642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4810:20:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_4df2b7691b15f24e95ec6e55d9b6bf466a15f9a0e17f4791d928de1e3293f070","typeString":"literal_string \"Shares must be > 0\""},"value":"Shares must be > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4df2b7691b15f24e95ec6e55d9b6bf466a15f9a0e17f4791d928de1e3293f070","typeString":"literal_string \"Shares must be > 0\""}],"id":8638,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4790:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4790:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8644,"nodeType":"ExpressionStatement","src":"4790:41:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":8647,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4859:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4863:6:25","memberName":"sender","nodeType":"MemberAccess","src":"4859:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8646,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4849:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":8649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4849:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8650,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8631,"src":"4874:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4849:31:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420736861726573","id":8652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4882:21:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665","typeString":"literal_string \"Insufficient shares\""},"value":"Insufficient shares"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665","typeString":"literal_string \"Insufficient shares\""}],"id":8645,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4841:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4841:63:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8654,"nodeType":"ExpressionStatement","src":"4841:63:25"},{"assignments":[8656],"declarations":[{"constant":false,"id":8656,"mutability":"mutable","name":"assetsOwed","nameLocation":"4995:10:25","nodeType":"VariableDeclaration","scope":8695,"src":"4987:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8655,"name":"uint256","nodeType":"ElementaryTypeName","src":"4987:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8660,"initialValue":{"arguments":[{"id":8658,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8631,"src":"5025:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8657,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"5008:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":8659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5008:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4987:45:25"},{"expression":{"arguments":[{"expression":{"id":8662,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5080:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5084:6:25","memberName":"sender","nodeType":"MemberAccess","src":"5080:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8664,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8631,"src":"5092:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8661,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"5074:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5074:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8666,"nodeType":"ExpressionStatement","src":"5074:25:25"},{"expression":{"id":8669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8667,"name":"_totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"5109:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":8668,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8631,"src":"5125:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5109:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8670,"nodeType":"ExpressionStatement","src":"5109:22:25"},{"assignments":[8672],"declarations":[{"constant":false,"id":8672,"mutability":"mutable","name":"availableAt","nameLocation":"5228:11:25","nodeType":"VariableDeclaration","scope":8695,"src":"5220:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8671,"name":"uint256","nodeType":"ElementaryTypeName","src":"5220:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8677,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8673,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5242:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5248:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"5242:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8675,"name":"UNBONDING_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8372,"src":"5260:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5242:34:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5220:56:25"},{"expression":{"id":8686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8678,"name":"nftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8636,"src":"5326:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":8681,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5353:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5357:6:25","memberName":"sender","nodeType":"MemberAccess","src":"5353:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8683,"name":"assetsOwed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8656,"src":"5365:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8684,"name":"availableAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8672,"src":"5377:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8679,"name":"withdrawalNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8369,"src":"5334:13:25","typeDescriptions":{"typeIdentifier":"t_contract$_WithdrawalNFT_$9104","typeString":"contract WithdrawalNFT"}},"id":8680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5348:4:25","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":8995,"src":"5334:18:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256,uint256) external returns (uint256)"}},"id":8685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5326:63:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8687,"nodeType":"ExpressionStatement","src":"5326:63:25"},{"eventCall":{"arguments":[{"expression":{"id":8689,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5433:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5437:6:25","memberName":"sender","nodeType":"MemberAccess","src":"5433:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8691,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8631,"src":"5445:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8692,"name":"nftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8636,"src":"5453:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8688,"name":"WithdrawalInitiated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8405,"src":"5413:19:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":8693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5413:46:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8694,"nodeType":"EmitStatement","src":"5408:51:25"}]},"documentation":{"id":8629,"nodeType":"StructuredDocumentation","src":"4475:180:25","text":" @dev Initiate withdrawal by burning shares and minting withdrawal NFT\n @param shares Amount of shares to burn\n @return nftId ID of the withdrawal NFT"},"functionSelector":"7e108d52","id":8696,"implemented":true,"kind":"function","modifiers":[{"id":8634,"kind":"modifierInvocation","modifierName":{"id":8633,"name":"nonReentrant","nameLocations":["4729:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":2769,"src":"4729:12:25"},"nodeType":"ModifierInvocation","src":"4729:12:25"}],"name":"initiateWithdraw","nameLocation":"4669:16:25","nodeType":"FunctionDefinition","parameters":{"id":8632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8631,"mutability":"mutable","name":"shares","nameLocation":"4694:6:25","nodeType":"VariableDeclaration","scope":8696,"src":"4686:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8630,"name":"uint256","nodeType":"ElementaryTypeName","src":"4686:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4685:16:25"},"returnParameters":{"id":8637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8636,"mutability":"mutable","name":"nftId","nameLocation":"4768:5:25","nodeType":"VariableDeclaration","scope":8696,"src":"4760:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8635,"name":"uint256","nodeType":"ElementaryTypeName","src":"4760:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4759:15:25"},"scope":8906,"src":"4660:806:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8753,"nodeType":"Block","src":"5641:499:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8707,"name":"nftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"5681:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8705,"name":"withdrawalNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8369,"src":"5659:13:25","typeDescriptions":{"typeIdentifier":"t_contract$_WithdrawalNFT_$9104","typeString":"contract WithdrawalNFT"}},"id":8706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5673:7:25","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1599,"src":"5659:21:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":8708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5659:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8709,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5691:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5695:6:25","memberName":"sender","nodeType":"MemberAccess","src":"5691:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5659:42:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74204e4654206f776e6572","id":8712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5703:15:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_fbc2e10076f6921a763c3f489052dd0b77e1bb855bd0a8a6901f7fbc1cc7125e","typeString":"literal_string \"Not NFT owner\""},"value":"Not NFT owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fbc2e10076f6921a763c3f489052dd0b77e1bb855bd0a8a6901f7fbc1cc7125e","typeString":"literal_string \"Not NFT owner\""}],"id":8704,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5651:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5651:68:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8714,"nodeType":"ExpressionStatement","src":"5651:68:25"},{"assignments":[8716,8718],"declarations":[{"constant":false,"id":8716,"mutability":"mutable","name":"assetsOwed","nameLocation":"5747:10:25","nodeType":"VariableDeclaration","scope":8753,"src":"5739:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8715,"name":"uint256","nodeType":"ElementaryTypeName","src":"5739:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8718,"mutability":"mutable","name":"availableAt","nameLocation":"5767:11:25","nodeType":"VariableDeclaration","scope":8753,"src":"5759:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8717,"name":"uint256","nodeType":"ElementaryTypeName","src":"5759:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8723,"initialValue":{"arguments":[{"id":8721,"name":"nftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"5814:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8719,"name":"withdrawalNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8369,"src":"5782:13:25","typeDescriptions":{"typeIdentifier":"t_contract$_WithdrawalNFT_$9104","typeString":"contract WithdrawalNFT"}},"id":8720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5796:17:25","memberName":"getWithdrawalInfo","nodeType":"MemberAccess","referencedDeclaration":9065,"src":"5782:31:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view external returns (uint256,uint256)"}},"id":8722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5782:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5738:82:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8725,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5838:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5844:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"5838:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8727,"name":"availableAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8718,"src":"5857:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5838:30:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5769746864726177616c206e6f7420617661696c61626c6520796574","id":8729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5870:30:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_baf53edc8b57f488bccae516e4d3f779a9da9a4ac912b4c8db6511a94d88b210","typeString":"literal_string \"Withdrawal not available yet\""},"value":"Withdrawal not available yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baf53edc8b57f488bccae516e4d3f779a9da9a4ac912b4c8db6511a94d88b210","typeString":"literal_string \"Withdrawal not available yet\""}],"id":8724,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5830:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5830:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8731,"nodeType":"ExpressionStatement","src":"5830:71:25"},{"expression":{"arguments":[{"id":8735,"name":"nftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"5959:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8732,"name":"withdrawalNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8369,"src":"5940:13:25","typeDescriptions":{"typeIdentifier":"t_contract$_WithdrawalNFT_$9104","typeString":"contract WithdrawalNFT"}},"id":8734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5954:4:25","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":9029,"src":"5940:18:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":8736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5940:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8737,"nodeType":"ExpressionStatement","src":"5940:25:25"},{"expression":{"arguments":[{"expression":{"id":8741,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6038:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6042:6:25","memberName":"sender","nodeType":"MemberAccess","src":"6038:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8743,"name":"assetsOwed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"6050:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8738,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8366,"src":"6019:5:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":8740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6025:12:25","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1038,"src":"6019:18:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$","typeString":"function (contract IERC20,address,uint256)"}},"id":8744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6019:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8745,"nodeType":"ExpressionStatement","src":"6019:42:25"},{"eventCall":{"arguments":[{"expression":{"id":8747,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6103:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6107:6:25","memberName":"sender","nodeType":"MemberAccess","src":"6103:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8749,"name":"nftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"6115:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8750,"name":"assetsOwed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"6122:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8746,"name":"WithdrawalClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8413,"src":"6085:17:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":8751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6085:48:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8752,"nodeType":"EmitStatement","src":"6080:53:25"}]},"documentation":{"id":8697,"nodeType":"StructuredDocumentation","src":"5476:108:25","text":" @dev Claim withdrawal after unbonding period\n @param nftId ID of the withdrawal NFT"},"functionSelector":"379607f5","id":8754,"implemented":true,"kind":"function","modifiers":[{"id":8702,"kind":"modifierInvocation","modifierName":{"id":8701,"name":"nonReentrant","nameLocations":["5628:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":2769,"src":"5628:12:25"},"nodeType":"ModifierInvocation","src":"5628:12:25"}],"name":"claim","nameLocation":"5598:5:25","nodeType":"FunctionDefinition","parameters":{"id":8700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8699,"mutability":"mutable","name":"nftId","nameLocation":"5612:5:25","nodeType":"VariableDeclaration","scope":8754,"src":"5604:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8698,"name":"uint256","nodeType":"ElementaryTypeName","src":"5604:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5603:15:25"},"returnParameters":{"id":8703,"nodeType":"ParameterList","parameters":[],"src":"5641:0:25"},"scope":8906,"src":"5589:551:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8762,"nodeType":"Block","src":"6267:36:25","statements":[{"expression":{"id":8760,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8377,"src":"6284:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8759,"id":8761,"nodeType":"Return","src":"6277:19:25"}]},"documentation":{"id":8755,"nodeType":"StructuredDocumentation","src":"6150:57:25","text":" @dev Get total assets under management"},"functionSelector":"01e1d114","id":8763,"implemented":true,"kind":"function","modifiers":[],"name":"totalAssets","nameLocation":"6221:11:25","nodeType":"FunctionDefinition","parameters":{"id":8756,"nodeType":"ParameterList","parameters":[],"src":"6232:2:25"},"returnParameters":{"id":8759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8763,"src":"6258:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8757,"name":"uint256","nodeType":"ElementaryTypeName","src":"6258:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6257:9:25"},"scope":8906,"src":"6212:91:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8771,"nodeType":"Block","src":"6425:36:25","statements":[{"expression":{"id":8769,"name":"_totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"6442:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8768,"id":8770,"nodeType":"Return","src":"6435:19:25"}]},"documentation":{"id":8764,"nodeType":"StructuredDocumentation","src":"6313:52:25","text":" @dev Get total shares outstanding"},"functionSelector":"3a98ef39","id":8772,"implemented":true,"kind":"function","modifiers":[],"name":"totalShares","nameLocation":"6379:11:25","nodeType":"FunctionDefinition","parameters":{"id":8765,"nodeType":"ParameterList","parameters":[],"src":"6390:2:25"},"returnParameters":{"id":8768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8772,"src":"6416:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8766,"name":"uint256","nodeType":"ElementaryTypeName","src":"6416:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6415:9:25"},"scope":8906,"src":"6370:91:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8784,"nodeType":"Block","src":"6625:48:25","statements":[{"expression":{"arguments":[{"id":8781,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8775,"src":"6659:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8780,"name":"_convertToShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8858,"src":"6642:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":8782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6642:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8779,"id":8783,"nodeType":"Return","src":"6635:31:25"}]},"documentation":{"id":8773,"nodeType":"StructuredDocumentation","src":"6471:76:25","text":" @dev Convert assets to shares using current exchange rate"},"functionSelector":"c6e6f592","id":8785,"implemented":true,"kind":"function","modifiers":[],"name":"convertToShares","nameLocation":"6561:15:25","nodeType":"FunctionDefinition","parameters":{"id":8776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8775,"mutability":"mutable","name":"assets","nameLocation":"6585:6:25","nodeType":"VariableDeclaration","scope":8785,"src":"6577:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8774,"name":"uint256","nodeType":"ElementaryTypeName","src":"6577:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6576:16:25"},"returnParameters":{"id":8779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8785,"src":"6616:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8777,"name":"uint256","nodeType":"ElementaryTypeName","src":"6616:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6615:9:25"},"scope":8906,"src":"6552:121:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8797,"nodeType":"Block","src":"6837:48:25","statements":[{"expression":{"arguments":[{"id":8794,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8788,"src":"6871:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8793,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"6854:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":8795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6854:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8792,"id":8796,"nodeType":"Return","src":"6847:31:25"}]},"documentation":{"id":8786,"nodeType":"StructuredDocumentation","src":"6683:76:25","text":" @dev Convert shares to assets using current exchange rate"},"functionSelector":"07a2d13a","id":8798,"implemented":true,"kind":"function","modifiers":[],"name":"convertToAssets","nameLocation":"6773:15:25","nodeType":"FunctionDefinition","parameters":{"id":8789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8788,"mutability":"mutable","name":"shares","nameLocation":"6797:6:25","nodeType":"VariableDeclaration","scope":8798,"src":"6789:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8787,"name":"uint256","nodeType":"ElementaryTypeName","src":"6789:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6788:16:25"},"returnParameters":{"id":8792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8798,"src":"6828:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8790,"name":"uint256","nodeType":"ElementaryTypeName","src":"6828:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6827:9:25"},"scope":8906,"src":"6764:121:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8834,"nodeType":"Block","src":"7113:477:25","statements":[{"assignments":[8809],"declarations":[{"constant":false,"id":8809,"mutability":"mutable","name":"assetBalance","nameLocation":"7179:12:25","nodeType":"VariableDeclaration","scope":8834,"src":"7171:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8808,"name":"uint256","nodeType":"ElementaryTypeName","src":"7171:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8814,"initialValue":{"arguments":[{"id":8812,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8801,"src":"7210:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8810,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8366,"src":"7194:5:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":8811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7200:9:25","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":924,"src":"7194:15:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":8813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7194:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7171:44:25"},{"assignments":[8816],"declarations":[{"constant":false,"id":8816,"mutability":"mutable","name":"lstBalance","nameLocation":"7339:10:25","nodeType":"VariableDeclaration","scope":8834,"src":"7331:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8815,"name":"uint256","nodeType":"ElementaryTypeName","src":"7331:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8820,"initialValue":{"arguments":[{"id":8818,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8801,"src":"7362:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8817,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"7352:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":8819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7352:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7331:36:25"},{"assignments":[8822],"declarations":[{"constant":false,"id":8822,"mutability":"mutable","name":"lstVotingPower","nameLocation":"7472:14:25","nodeType":"VariableDeclaration","scope":8834,"src":"7464:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8821,"name":"uint256","nodeType":"ElementaryTypeName","src":"7464:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8829,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8823,"name":"lstBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8816,"src":"7490:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8824,"name":"exchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"7503:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7490:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8826,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7489:27:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8827,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"7519:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7489:39:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7464:64:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8830,"name":"assetBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8809,"src":"7554:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8831,"name":"lstVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8822,"src":"7569:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7554:29:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8807,"id":8833,"nodeType":"Return","src":"7547:36:25"}]},"documentation":{"id":8799,"nodeType":"StructuredDocumentation","src":"6895:114:25","text":" @dev Get voting power for a user (assets + LST * exchange rate)\n @param user User address"},"functionSelector":"8ff400f4","id":8835,"implemented":true,"kind":"function","modifiers":[],"name":"getVotingPower","nameLocation":"7023:14:25","nodeType":"FunctionDefinition","parameters":{"id":8804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8801,"mutability":"mutable","name":"user","nameLocation":"7046:4:25","nodeType":"VariableDeclaration","scope":8835,"src":"7038:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8800,"name":"address","nodeType":"ElementaryTypeName","src":"7038:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8835,"src":"7052:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8802,"name":"uint256","nodeType":"ElementaryTypeName","src":"7052:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7037:43:25"},"returnParameters":{"id":8807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8835,"src":"7104:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8805,"name":"uint256","nodeType":"ElementaryTypeName","src":"7104:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7103:9:25"},"scope":8906,"src":"7014:576:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8857,"nodeType":"Block","src":"7748:146:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8843,"name":"_totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"7762:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7778:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7762:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8849,"nodeType":"IfStatement","src":"7758:78:25","trueBody":{"id":8848,"nodeType":"Block","src":"7781:55:25","statements":[{"expression":{"id":8846,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8838,"src":"7802:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8842,"id":8847,"nodeType":"Return","src":"7795:13:25"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8850,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8838,"src":"7853:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8851,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"7862:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7853:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7852:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8854,"name":"exchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"7875:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7852:35:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8842,"id":8856,"nodeType":"Return","src":"7845:42:25"}]},"documentation":{"id":8836,"nodeType":"StructuredDocumentation","src":"7600:69:25","text":" @dev Internal function to convert assets to shares"},"id":8858,"implemented":true,"kind":"function","modifiers":[],"name":"_convertToShares","nameLocation":"7683:16:25","nodeType":"FunctionDefinition","parameters":{"id":8839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8838,"mutability":"mutable","name":"assets","nameLocation":"7708:6:25","nodeType":"VariableDeclaration","scope":8858,"src":"7700:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8837,"name":"uint256","nodeType":"ElementaryTypeName","src":"7700:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7699:16:25"},"returnParameters":{"id":8842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8858,"src":"7739:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8840,"name":"uint256","nodeType":"ElementaryTypeName","src":"7739:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7738:9:25"},"scope":8906,"src":"7674:220:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8880,"nodeType":"Block","src":"8052:154:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8866,"name":"_totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"8066:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8082:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8066:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8872,"nodeType":"IfStatement","src":"8062:86:25","trueBody":{"id":8871,"nodeType":"Block","src":"8085:63:25","statements":[{"expression":{"id":8869,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8861,"src":"8106:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8865,"id":8870,"nodeType":"Return","src":"8099:13:25"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8873,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8861,"src":"8165:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8874,"name":"exchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"8174:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8165:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8876,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8164:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8877,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"8190:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8164:35:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8865,"id":8879,"nodeType":"Return","src":"8157:42:25"}]},"documentation":{"id":8859,"nodeType":"StructuredDocumentation","src":"7904:69:25","text":" @dev Internal function to convert shares to assets"},"id":8881,"implemented":true,"kind":"function","modifiers":[],"name":"_convertToAssets","nameLocation":"7987:16:25","nodeType":"FunctionDefinition","parameters":{"id":8862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8861,"mutability":"mutable","name":"shares","nameLocation":"8012:6:25","nodeType":"VariableDeclaration","scope":8881,"src":"8004:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8860,"name":"uint256","nodeType":"ElementaryTypeName","src":"8004:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8003:16:25"},"returnParameters":{"id":8865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8881,"src":"8043:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8863,"name":"uint256","nodeType":"ElementaryTypeName","src":"8043:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8042:9:25"},"scope":8906,"src":"7978:228:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8904,"nodeType":"Block","src":"8346:161:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8885,"name":"_totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"8360:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8375:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8360:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8898,"nodeType":"IfStatement","src":"8356:103:25","trueBody":{"id":8897,"nodeType":"Block","src":"8378:81:25","statements":[{"expression":{"id":8895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8888,"name":"exchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"8392:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8889,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8377,"src":"8408:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8890,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"8423:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8408:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8407:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8893,"name":"_totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"8436:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8407:41:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8392:56:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8896,"nodeType":"ExpressionStatement","src":"8392:56:25"}]}},{"expression":{"id":8902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8899,"name":"lastUpdateTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"8468:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8900,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8485:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8491:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"8485:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8468:32:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8903,"nodeType":"ExpressionStatement","src":"8468:32:25"}]},"documentation":{"id":8882,"nodeType":"StructuredDocumentation","src":"8216:85:25","text":" @dev Update exchange rate based on current total assets and shares"},"id":8905,"implemented":true,"kind":"function","modifiers":[],"name":"_updateExchangeRate","nameLocation":"8315:19:25","nodeType":"FunctionDefinition","parameters":{"id":8883,"nodeType":"ParameterList","parameters":[],"src":"8334:2:25"},"returnParameters":{"id":8884,"nodeType":"ParameterList","parameters":[],"src":"8346:0:25"},"scope":8906,"src":"8306:201:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":8907,"src":"627:7882:25","usedErrors":[13,18,249,254,259,268,273,278,1005,2750],"usedEvents":[24,901,910,8391,8397,8405,8413]}],"src":"32:8478:25"},"id":25},"contracts/WithdrawalNFT.sol":{"ast":{"absolutePath":"contracts/WithdrawalNFT.sol","exportedSymbols":{"Context":[2684],"ERC165":[4231],"ERC721":[2414],"ERC721Utils":[2654],"IERC165":[4243],"IERC721":[2531],"IERC721Errors":[327],"IERC721Metadata":[2577],"Ownable":[147],"Strings":[4207],"WithdrawalNFT":[9104]},"id":9105,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8908,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:26"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":8909,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9105,"sourceUnit":2415,"src":"58:57:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8910,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9105,"sourceUnit":148,"src":"116:52:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8912,"name":"ERC721","nameLocations":["366:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"366:6:26"},"id":8913,"nodeType":"InheritanceSpecifier","src":"366:6:26"},{"baseName":{"id":8914,"name":"Ownable","nameLocations":["374:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"374:7:26"},"id":8915,"nodeType":"InheritanceSpecifier","src":"374:7:26"}],"canonicalName":"WithdrawalNFT","contractDependencies":[],"contractKind":"contract","documentation":{"id":8911,"nodeType":"StructuredDocumentation","src":"170:169:26","text":" @title WithdrawalNFT\n @dev NFT representing a time-locked withdrawal claim\n Each NFT contains information about assets owed and when they become available"},"fullyImplemented":true,"id":9104,"linearizedBaseContracts":[9104,147,2414,327,2577,2531,4231,4243,2684],"name":"WithdrawalNFT","nameLocation":"349:13:26","nodeType":"ContractDefinition","nodes":[{"canonicalName":"WithdrawalNFT.WithdrawalInfo","id":8920,"members":[{"constant":false,"id":8917,"mutability":"mutable","name":"assetsOwed","nameLocation":"433:10:26","nodeType":"VariableDeclaration","scope":8920,"src":"425:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8916,"name":"uint256","nodeType":"ElementaryTypeName","src":"425:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8919,"mutability":"mutable","name":"availableAt","nameLocation":"461:11:26","nodeType":"VariableDeclaration","scope":8920,"src":"453:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8918,"name":"uint256","nodeType":"ElementaryTypeName","src":"453:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"WithdrawalInfo","nameLocation":"400:14:26","nodeType":"StructDefinition","scope":9104,"src":"393:86:26","visibility":"public"},{"constant":false,"functionSelector":"5cc07076","id":8925,"mutability":"mutable","name":"withdrawals","nameLocation":"579:11:26","nodeType":"VariableDeclaration","scope":9104,"src":"537:53:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WithdrawalInfo_$8920_storage_$","typeString":"mapping(uint256 => struct WithdrawalNFT.WithdrawalInfo)"},"typeName":{"id":8924,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8921,"name":"uint256","nodeType":"ElementaryTypeName","src":"545:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"537:34:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WithdrawalInfo_$8920_storage_$","typeString":"mapping(uint256 => struct WithdrawalNFT.WithdrawalInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8923,"nodeType":"UserDefinedTypeName","pathNode":{"id":8922,"name":"WithdrawalInfo","nameLocations":["556:14:26"],"nodeType":"IdentifierPath","referencedDeclaration":8920,"src":"556:14:26"},"referencedDeclaration":8920,"src":"556:14:26","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalInfo_$8920_storage_ptr","typeString":"struct WithdrawalNFT.WithdrawalInfo"}}},"visibility":"public"},{"constant":false,"id":8928,"mutability":"mutable","name":"_nextTokenId","nameLocation":"646:12:26","nodeType":"VariableDeclaration","scope":9104,"src":"630:32:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8926,"name":"uint256","nodeType":"ElementaryTypeName","src":"630:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":8927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"anonymous":false,"eventSelector":"833cc33f3742f30a4b77b979e34a34a35c01c28e3e146bb15a5799212e597ba0","id":8938,"name":"WithdrawalMinted","nameLocation":"693:16:26","nodeType":"EventDefinition","parameters":{"id":8937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8930,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"726:2:26","nodeType":"VariableDeclaration","scope":8938,"src":"710:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8929,"name":"address","nodeType":"ElementaryTypeName","src":"710:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8932,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"746:7:26","nodeType":"VariableDeclaration","scope":8938,"src":"730:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8931,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8934,"indexed":false,"mutability":"mutable","name":"assetsOwed","nameLocation":"763:10:26","nodeType":"VariableDeclaration","scope":8938,"src":"755:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8933,"name":"uint256","nodeType":"ElementaryTypeName","src":"755:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8936,"indexed":false,"mutability":"mutable","name":"availableAt","nameLocation":"783:11:26","nodeType":"VariableDeclaration","scope":8938,"src":"775:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8935,"name":"uint256","nodeType":"ElementaryTypeName","src":"775:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"709:86:26"},"src":"687:109:26"},{"anonymous":false,"eventSelector":"6ce5b8b269980bc0dce72c0cd3cd829d07d53e3649ea065f2b5ef971fdb17a31","id":8942,"name":"WithdrawalBurned","nameLocation":"807:16:26","nodeType":"EventDefinition","parameters":{"id":8941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8940,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"840:7:26","nodeType":"VariableDeclaration","scope":8942,"src":"824:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8939,"name":"uint256","nodeType":"ElementaryTypeName","src":"824:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"823:25:26"},"src":"801:48:26"},{"body":{"id":8953,"nodeType":"Block","src":"932:2:26","statements":[]},"id":8954,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"5769746864726177616c204e4654","id":8945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"880:16:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_cd45220a2aeb3e173c350d9e106e0193c9162a984ee6960a674c040162ae32d2","typeString":"literal_string \"Withdrawal NFT\""},"value":"Withdrawal NFT"},{"hexValue":"5749544844524157414c","id":8946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"898:12:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_738128fe393bef1bcd8a524796fff40618b938cd467c71fcf37850ab0ba4f7d7","typeString":"literal_string \"WITHDRAWAL\""},"value":"WITHDRAWAL"}],"id":8947,"kind":"baseConstructorSpecifier","modifierName":{"id":8944,"name":"ERC721","nameLocations":["873:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"873:6:26"},"nodeType":"ModifierInvocation","src":"873:38:26"},{"arguments":[{"expression":{"id":8949,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"920:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"924:6:26","memberName":"sender","nodeType":"MemberAccess","src":"920:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8951,"kind":"baseConstructorSpecifier","modifierName":{"id":8948,"name":"Ownable","nameLocations":["912:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"912:7:26"},"nodeType":"ModifierInvocation","src":"912:19:26"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8943,"nodeType":"ParameterList","parameters":[],"src":"870:2:26"},"returnParameters":{"id":8952,"nodeType":"ParameterList","parameters":[],"src":"932:0:26"},"scope":9104,"src":"859:75:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8994,"nodeType":"Block","src":"1339:298:26","statements":[{"expression":{"id":8971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8968,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8966,"src":"1349:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1359:14:26","subExpression":{"id":8969,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8928,"src":"1359:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1349:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8972,"nodeType":"ExpressionStatement","src":"1349:24:26"},{"expression":{"id":8980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8973,"name":"withdrawals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8925,"src":"1392:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WithdrawalInfo_$8920_storage_$","typeString":"mapping(uint256 => struct WithdrawalNFT.WithdrawalInfo storage ref)"}},"id":8975,"indexExpression":{"id":8974,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8966,"src":"1404:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1392:20:26","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalInfo_$8920_storage","typeString":"struct WithdrawalNFT.WithdrawalInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8977,"name":"assetsOwed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8959,"src":"1456:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8978,"name":"availableAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8961,"src":"1493:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8976,"name":"WithdrawalInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8920,"src":"1415:14:26","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_WithdrawalInfo_$8920_storage_ptr_$","typeString":"type(struct WithdrawalNFT.WithdrawalInfo storage pointer)"}},"id":8979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1444:10:26","1480:11:26"],"names":["assetsOwed","availableAt"],"nodeType":"FunctionCall","src":"1415:100:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalInfo_$8920_memory_ptr","typeString":"struct WithdrawalNFT.WithdrawalInfo memory"}},"src":"1392:123:26","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalInfo_$8920_storage","typeString":"struct WithdrawalNFT.WithdrawalInfo storage ref"}},"id":8981,"nodeType":"ExpressionStatement","src":"1392:123:26"},{"expression":{"arguments":[{"id":8983,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8957,"src":"1540:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8984,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8966,"src":"1544:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8982,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"1534:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1534:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8986,"nodeType":"ExpressionStatement","src":"1534:18:26"},{"eventCall":{"arguments":[{"id":8988,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8957,"src":"1593:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8989,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8966,"src":"1597:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8990,"name":"assetsOwed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8959,"src":"1606:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8991,"name":"availableAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8961,"src":"1618:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8987,"name":"WithdrawalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8938,"src":"1576:16:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":8992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1576:54:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8993,"nodeType":"EmitStatement","src":"1571:59:26"}]},"documentation":{"id":8955,"nodeType":"StructuredDocumentation","src":"944:246:26","text":" @dev Mint a new withdrawal NFT\n @param to Address to mint to\n @param assetsOwed Amount of assets owed\n @param availableAt Timestamp when withdrawal becomes available\n @return tokenId ID of the minted NFT"},"functionSelector":"156e29f6","id":8995,"implemented":true,"kind":"function","modifiers":[{"id":8964,"kind":"modifierInvocation","modifierName":{"id":8963,"name":"onlyOwner","nameLocations":["1289:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1289:9:26"},"nodeType":"ModifierInvocation","src":"1289:9:26"}],"name":"mint","nameLocation":"1204:4:26","nodeType":"FunctionDefinition","parameters":{"id":8962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8957,"mutability":"mutable","name":"to","nameLocation":"1217:2:26","nodeType":"VariableDeclaration","scope":8995,"src":"1209:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8956,"name":"address","nodeType":"ElementaryTypeName","src":"1209:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8959,"mutability":"mutable","name":"assetsOwed","nameLocation":"1229:10:26","nodeType":"VariableDeclaration","scope":8995,"src":"1221:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8958,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8961,"mutability":"mutable","name":"availableAt","nameLocation":"1249:11:26","nodeType":"VariableDeclaration","scope":8995,"src":"1241:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8960,"name":"uint256","nodeType":"ElementaryTypeName","src":"1241:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1208:53:26"},"returnParameters":{"id":8967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8966,"mutability":"mutable","name":"tokenId","nameLocation":"1325:7:26","nodeType":"VariableDeclaration","scope":8995,"src":"1317:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8965,"name":"uint256","nodeType":"ElementaryTypeName","src":"1317:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1316:17:26"},"scope":9104,"src":"1195:442:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9028,"nodeType":"Block","src":"1791:199:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9005,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8998,"src":"1817:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9004,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"1809:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":9006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1809:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1837:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1829:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9007,"name":"address","nodeType":"ElementaryTypeName","src":"1829:7:26","typeDescriptions":{}}},"id":9010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1809:30:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":9012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1841:22:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":9003,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1801:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1801:63:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9014,"nodeType":"ExpressionStatement","src":"1801:63:26"},{"expression":{"id":9018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1883:27:26","subExpression":{"baseExpression":{"id":9015,"name":"withdrawals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8925,"src":"1890:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WithdrawalInfo_$8920_storage_$","typeString":"mapping(uint256 => struct WithdrawalNFT.WithdrawalInfo storage ref)"}},"id":9017,"indexExpression":{"id":9016,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8998,"src":"1902:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1890:20:26","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalInfo_$8920_storage","typeString":"struct WithdrawalNFT.WithdrawalInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9019,"nodeType":"ExpressionStatement","src":"1883:27:26"},{"expression":{"arguments":[{"id":9021,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8998,"src":"1926:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9020,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"1920:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":9022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1920:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9023,"nodeType":"ExpressionStatement","src":"1920:14:26"},{"eventCall":{"arguments":[{"id":9025,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8998,"src":"1975:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9024,"name":"WithdrawalBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8942,"src":"1958:16:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":9026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1958:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9027,"nodeType":"EmitStatement","src":"1953:30:26"}]},"documentation":{"id":8996,"nodeType":"StructuredDocumentation","src":"1647:89:26","text":" @dev Burn a withdrawal NFT\n @param tokenId ID of the NFT to burn"},"functionSelector":"42966c68","id":9029,"implemented":true,"kind":"function","modifiers":[{"id":9001,"kind":"modifierInvocation","modifierName":{"id":9000,"name":"onlyOwner","nameLocations":["1781:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1781:9:26"},"nodeType":"ModifierInvocation","src":"1781:9:26"}],"name":"burn","nameLocation":"1750:4:26","nodeType":"FunctionDefinition","parameters":{"id":8999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8998,"mutability":"mutable","name":"tokenId","nameLocation":"1763:7:26","nodeType":"VariableDeclaration","scope":9029,"src":"1755:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8997,"name":"uint256","nodeType":"ElementaryTypeName","src":"1755:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1754:17:26"},"returnParameters":{"id":9002,"nodeType":"ParameterList","parameters":[],"src":"1791:0:26"},"scope":9104,"src":"1741:249:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9064,"nodeType":"Block","src":"2332:191:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9041,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9032,"src":"2358:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9040,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"2350:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":9042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2350:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2378:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2370:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9043,"name":"address","nodeType":"ElementaryTypeName","src":"2370:7:26","typeDescriptions":{}}},"id":9046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2370:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2350:30:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":9048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2382:22:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":9039,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2342:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2342:63:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9050,"nodeType":"ExpressionStatement","src":"2342:63:26"},{"assignments":[9053],"declarations":[{"constant":false,"id":9053,"mutability":"mutable","name":"info","nameLocation":"2437:4:26","nodeType":"VariableDeclaration","scope":9064,"src":"2415:26:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalInfo_$8920_memory_ptr","typeString":"struct WithdrawalNFT.WithdrawalInfo"},"typeName":{"id":9052,"nodeType":"UserDefinedTypeName","pathNode":{"id":9051,"name":"WithdrawalInfo","nameLocations":["2415:14:26"],"nodeType":"IdentifierPath","referencedDeclaration":8920,"src":"2415:14:26"},"referencedDeclaration":8920,"src":"2415:14:26","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalInfo_$8920_storage_ptr","typeString":"struct WithdrawalNFT.WithdrawalInfo"}},"visibility":"internal"}],"id":9057,"initialValue":{"baseExpression":{"id":9054,"name":"withdrawals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8925,"src":"2444:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WithdrawalInfo_$8920_storage_$","typeString":"mapping(uint256 => struct WithdrawalNFT.WithdrawalInfo storage ref)"}},"id":9056,"indexExpression":{"id":9055,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9032,"src":"2456:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2444:20:26","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalInfo_$8920_storage","typeString":"struct WithdrawalNFT.WithdrawalInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2415:49:26"},{"expression":{"components":[{"expression":{"id":9058,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"2482:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalInfo_$8920_memory_ptr","typeString":"struct WithdrawalNFT.WithdrawalInfo memory"}},"id":9059,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2487:10:26","memberName":"assetsOwed","nodeType":"MemberAccess","referencedDeclaration":8917,"src":"2482:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9060,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"2499:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalInfo_$8920_memory_ptr","typeString":"struct WithdrawalNFT.WithdrawalInfo memory"}},"id":9061,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2504:11:26","memberName":"availableAt","nodeType":"MemberAccess","referencedDeclaration":8919,"src":"2499:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9062,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2481:35:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":9038,"id":9063,"nodeType":"Return","src":"2474:42:26"}]},"documentation":{"id":9030,"nodeType":"StructuredDocumentation","src":"2000:219:26","text":" @dev Get withdrawal information for a token\n @param tokenId ID of the token\n @return assetsOwed Amount of assets owed\n @return availableAt Timestamp when withdrawal becomes available"},"functionSelector":"5dde8895","id":9065,"implemented":true,"kind":"function","modifiers":[],"name":"getWithdrawalInfo","nameLocation":"2233:17:26","nodeType":"FunctionDefinition","parameters":{"id":9033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9032,"mutability":"mutable","name":"tokenId","nameLocation":"2259:7:26","nodeType":"VariableDeclaration","scope":9065,"src":"2251:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9031,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:17:26"},"returnParameters":{"id":9038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9035,"mutability":"mutable","name":"assetsOwed","nameLocation":"2299:10:26","nodeType":"VariableDeclaration","scope":9065,"src":"2291:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9034,"name":"uint256","nodeType":"ElementaryTypeName","src":"2291:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9037,"mutability":"mutable","name":"availableAt","nameLocation":"2319:11:26","nodeType":"VariableDeclaration","scope":9065,"src":"2311:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9036,"name":"uint256","nodeType":"ElementaryTypeName","src":"2311:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:41:26"},"scope":9104,"src":"2224:299:26","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9093,"nodeType":"Block","src":"2778:148:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9075,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9068,"src":"2804:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9074,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"2796:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":9076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2796:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2824:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2816:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9077,"name":"address","nodeType":"ElementaryTypeName","src":"2816:7:26","typeDescriptions":{}}},"id":9080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2816:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2796:30:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":9082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2828:22:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":9073,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2788:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:63:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9084,"nodeType":"ExpressionStatement","src":"2788:63:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9085,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2868:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2874:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"2868:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"baseExpression":{"id":9087,"name":"withdrawals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8925,"src":"2887:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WithdrawalInfo_$8920_storage_$","typeString":"mapping(uint256 => struct WithdrawalNFT.WithdrawalInfo storage ref)"}},"id":9089,"indexExpression":{"id":9088,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9068,"src":"2899:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2887:20:26","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalInfo_$8920_storage","typeString":"struct WithdrawalNFT.WithdrawalInfo storage ref"}},"id":9090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2908:11:26","memberName":"availableAt","nodeType":"MemberAccess","referencedDeclaration":8919,"src":"2887:32:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2868:51:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9072,"id":9092,"nodeType":"Return","src":"2861:58:26"}]},"documentation":{"id":9066,"nodeType":"StructuredDocumentation","src":"2533:153:26","text":" @dev Check if a withdrawal is available\n @param tokenId ID of the token\n @return available True if withdrawal is available"},"functionSelector":"1394f102","id":9094,"implemented":true,"kind":"function","modifiers":[],"name":"isWithdrawalAvailable","nameLocation":"2700:21:26","nodeType":"FunctionDefinition","parameters":{"id":9069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9068,"mutability":"mutable","name":"tokenId","nameLocation":"2730:7:26","nodeType":"VariableDeclaration","scope":9094,"src":"2722:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9067,"name":"uint256","nodeType":"ElementaryTypeName","src":"2722:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2721:17:26"},"returnParameters":{"id":9072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9071,"mutability":"mutable","name":"available","nameLocation":"2767:9:26","nodeType":"VariableDeclaration","scope":9094,"src":"2762:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9070,"name":"bool","nodeType":"ElementaryTypeName","src":"2762:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2761:16:26"},"scope":9104,"src":"2691:235:26","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9102,"nodeType":"Block","src":"3041:36:26","statements":[{"expression":{"id":9100,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8928,"src":"3058:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9099,"id":9101,"nodeType":"Return","src":"3051:19:26"}]},"documentation":{"id":9095,"nodeType":"StructuredDocumentation","src":"2936:45:26","text":" @dev Get the next token ID"},"functionSelector":"75794a3c","id":9103,"implemented":true,"kind":"function","modifiers":[],"name":"nextTokenId","nameLocation":"2995:11:26","nodeType":"FunctionDefinition","parameters":{"id":9096,"nodeType":"ParameterList","parameters":[],"src":"3006:2:26"},"returnParameters":{"id":9099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9103,"src":"3032:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9097,"name":"uint256","nodeType":"ElementaryTypeName","src":"3032:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3031:9:26"},"scope":9104,"src":"2986:91:26","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9105,"src":"340:2739:26","usedErrors":[13,18,285,290,299,304,309,316,321,326],"usedEvents":[24,2430,2439,2448,8938,8942]}],"src":"32:3048:26"},"id":26}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087d2304e86c07eccd4f9f39f79c28cf8db16e46e5d8ee645e6e8b23c0c5e7a7e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xD2 ADDRESS 0x4E DUP7 0xC0 PUSH31 0xCCD4F9F39F79C28CF8DB16E46E5D8EE645E6E8B23C0C5E7A7E64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"698:9376:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;698:9376:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087d2304e86c07eccd4f9f39f79c28cf8db16e46e5d8ee645e6e8b23c0c5e7a7e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xD2 ADDRESS 0x4E DUP7 0xC0 PUSH31 0xCCD4F9F39F79C28CF8DB16E46E5D8EE645E6E8B23C0C5E7A7E64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"698:9376:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bedc5186332f3f0d5bf6a506dbab4912c55984f091e811dc439d0fee33175d9b64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xDC MLOAD DUP7 CALLER 0x2F EXTCODEHASH 0xD JUMPDEST 0xF6 0xA5 MOD 0xDB 0xAB 0x49 SLT 0xC5 MSIZE DUP5 CREATE SWAP2 0xE8 GT 0xDC NUMBER SWAP14 0xF 0xEE CALLER OR 0x5D SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"431:1490:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;431:1490:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bedc5186332f3f0d5bf6a506dbab4912c55984f091e811dc439d0fee33175d9b64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xDC MLOAD DUP7 CALLER 0x2F EXTCODEHASH 0xD JUMPDEST 0xF6 0xA5 MOD 0xDB 0xAB 0x49 SLT 0xC5 MSIZE DUP5 CREATE SWAP2 0xE8 GT 0xDC NUMBER SWAP14 0xF 0xEE CALLER OR 0x5D SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"431:1490:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1c86b651b296f4d0a2ef0fd743497384b12e402f602b3c0f834bc25cb2c3df064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xC8 PUSH12 0x651B296F4D0A2EF0FD743497 CODESIZE 0x4B SLT 0xE4 MUL 0xF6 MUL 0xB3 0xC0 0xF8 CALLVALUE 0xBC 0x25 0xCB 0x2C RETURNDATASIZE CREATE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18982:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:18982:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1c86b651b296f4d0a2ef0fd743497384b12e402f602b3c0f834bc25cb2c3df064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xC8 PUSH12 0x651B296F4D0A2EF0FD743497 CODESIZE 0x4B SLT 0xE4 MUL 0xF6 MUL 0xB3 0xC0 0xF8 CALLVALUE 0xBC 0x25 0xCB 0x2C RETURNDATASIZE CREATE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18982:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/GovernanceExecutor.sol":{"GovernanceExecutor":{"abi":[{"inputs":[{"internalType":"address","name":"_rootPublisher","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"actionDataHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"ActionDataHashCommitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"actionData","type":"bytes"}],"name":"ActionExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"actionDataHash","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"actionData","type":"bytes"},{"indexed":false,"internalType":"address","name":"executor","type":"address"}],"name":"ProposalExecuted","type":"event"},{"inputs":[{"internalType":"bytes32","name":"actionDataHash","type":"bytes32"}],"name":"commitActionDataHash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"committedActions","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"bytes","name":"actionData","type":"bytes"}],"name":"executeIfAuthorized","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"executedActions","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"getProposal","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"bytes","name":"actionData","type":"bytes"},{"internalType":"bytes32","name":"actionDataHash","type":"bytes32"},{"internalType":"uint256","name":"snapshotBlock","type":"uint256"},{"internalType":"uint256","name":"exchangeRateSnapshot","type":"uint256"},{"internalType":"bytes32","name":"votingPowerRoot","type":"bytes32"},{"internalType":"bool","name":"rootPublished","type":"bool"},{"internalType":"bool","name":"executed","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct GovernanceRootPublisher.Proposal","name":"proposal","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"actionDataHash","type":"bytes32"}],"name":"isActionExecuted","outputs":[{"internalType":"bool","name":"executed","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rootPublisher","outputs":[{"internalType":"contract GovernanceRootPublisher","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2758":{"entryPoint":null,"id":2758,"parameterSlots":0,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7826":{"entryPoint":null,"id":7826,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":116,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":196,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:514:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:27","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:27"},"nodeType":"YulFunctionCall","src":"143:12:27"},"nodeType":"YulExpressionStatement","src":"143:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:27"},"nodeType":"YulFunctionCall","src":"112:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:27"},"nodeType":"YulFunctionCall","src":"108:32:27"},"nodeType":"YulIf","src":"105:52:27"},{"nodeType":"YulVariableDeclaration","src":"166:29:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:27"},"nodeType":"YulFunctionCall","src":"179:16:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:27"},"nodeType":"YulFunctionCall","src":"260:12:27"},"nodeType":"YulExpressionStatement","src":"260:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:27"},"nodeType":"YulFunctionCall","src":"239:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:27"},"nodeType":"YulFunctionCall","src":"235:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:27"},"nodeType":"YulFunctionCall","src":"224:31:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:27"},"nodeType":"YulFunctionCall","src":"214:42:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:27"},"nodeType":"YulFunctionCall","src":"207:50:27"},"nodeType":"YulIf","src":"204:70:27"},{"nodeType":"YulAssignment","src":"283:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:27"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:27","type":""}],"src":"14:290:27"},{"body":{"nodeType":"YulBlock","src":"410:102:27","statements":[{"nodeType":"YulAssignment","src":"420:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"432:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"443:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"428:3:27"},"nodeType":"YulFunctionCall","src":"428:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"420:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"462:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"493:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"498:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"489:3:27"},"nodeType":"YulFunctionCall","src":"489:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"502:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"485:3:27"},"nodeType":"YulFunctionCall","src":"485:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"473:3:27"},"nodeType":"YulFunctionCall","src":"473:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"455:6:27"},"nodeType":"YulFunctionCall","src":"455:51:27"},"nodeType":"YulExpressionStatement","src":"455:51:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"379:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"390:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"401:4:27","type":""}],"src":"309:203:27"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561001057600080fd5b50604051610dd5380380610dd583398101604081905261002f916100c4565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610074565b50600180556001600160a01b03166080526100f4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d657600080fd5b81516001600160a01b03811681146100ed57600080fd5b9392505050565b608051610cb16101246000396000818161019b015281816102470152818161047001526105cd0152610cb16000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461013e578063c7f758a814610163578063ccaa416014610183578063cf43a27a14610196578063f2fde38b146101bd57600080fd5b80630fc561b7146100a357806321c49e39146100b8578063236a0579146100f05780633b1c57cb14610113578063715018a614610136575b600080fd5b6100b66100b136600461090e565b6101d0565b005b6100db6100c6366004610998565b60009081526003602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100db6100fe366004610998565b60026020526000908152604090205460ff1681565b6100db610121366004610998565b60036020526000908152604090205460ff1681565b6100b6610543565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100e7565b610176610171366004610998565b610557565b6040516100e79190610a01565b6100b6610191366004610998565b61064a565b61014b7f000000000000000000000000000000000000000000000000000000000000000081565b6100b66101cb366004610aad565b610756565b6101d8610794565b600081511161022e5760405162461bcd60e51b815260206004820152601b60248201527f416374696f6e20646174612063616e6e6f7420626520656d707479000000000060448201526064015b60405180910390fd5b6040516318feeb1560e31b8152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c7f758a890602401600060405180830381865afa158015610296573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102be9190810190610b3f565b80519091506000036103125760405162461bcd60e51b815260206004820152601760248201527f50726f706f73616c20646f6573206e6f742065786973740000000000000000006044820152606401610225565b8060e001516103585760405162461bcd60e51b8152602060048201526012602482015271149bdbdd081b9bdd081c1d589b1a5cda195960721b6044820152606401610225565b806101000151156103ab5760405162461bcd60e51b815260206004820152601960248201527f50726f706f73616c20616c7265616479206578656375746564000000000000006044820152606401610225565b81516020830120606082015181146104055760405162461bcd60e51b815260206004820152601960248201527f416374696f6e20646174612068617368206d69736d61746368000000000000006044820152606401610225565b60008181526002602052604090205460ff1661045a5760405162461bcd60e51b81526020600482015260146024820152731058dd1a5bdb881b9bdd0818dbdb5b5a5d1d195960621b6044820152606401610225565b604051630d61b51960e01b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630d61b51990602401600060405180830381600087803b1580156104bc57600080fd5b505af11580156104d0573d6000803e3d6000fd5b50505060008281526003602052604090819020805460ff19166001179055518591507f57c58e4f8d951a2c866a2b2a82f21947043bdb5591cb0ca3c4fa17bcd25563879061052390849087903390610c37565b60405180910390a2610534836107be565b505061053f60018055565b5050565b61054b6107f8565b6105556000610825565b565b6105b760405180610140016040528060008152602001606081526020016060815260200160008019168152602001600081526020016000815260200160008019168152602001600015158152602001600015158152602001600081525090565b6040516318feeb1560e31b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c7f758a890602401600060405180830381865afa15801561061c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106449190810190610b3f565b92915050565b6106526107f8565b8061069f5760405162461bcd60e51b815260206004820152601f60248201527f416374696f6e206461746120686173682063616e6e6f74206265207a65726f006044820152606401610225565b60008181526003602052604090205460ff16156106fe5760405162461bcd60e51b815260206004820152601760248201527f416374696f6e20616c72656164792065786563757465640000000000000000006044820152606401610225565b60008181526002602052604090819020805460ff191660011790555181907f932863ac8646848217bbf645e2f397111c70168cc31eb717d2a7f4f156910ad69061074b9042815260200190565b60405180910390a250565b61075e6107f8565b6001600160a01b03811661078857604051631e4fbdf760e01b815260006004820152602401610225565b61079181610825565b50565b6002600154036107b757604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b7fa7727e8daeea8cb0ee548a1fa3caa32272453a4a058a39123abf3ec05609c783816040516107ed9190610c68565b60405180910390a150565b6000546001600160a01b031633146105555760405163118cdaa760e01b8152336004820152602401610225565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156108af576108af610875565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156108de576108de610875565b604052919050565b600067ffffffffffffffff82111561090057610900610875565b50601f01601f191660200190565b6000806040838503121561092157600080fd5b82359150602083013567ffffffffffffffff81111561093f57600080fd5b8301601f8101851361095057600080fd5b803561096361095e826108e6565b6108b5565b81815286602083850101111561097857600080fd5b816020840160208301376000602083830101528093505050509250929050565b6000602082840312156109aa57600080fd5b5035919050565b60005b838110156109cc5781810151838201526020016109b4565b50506000910152565b600081518084526109ed8160208601602086016109b1565b601f01601f19169290920160200192915050565b602081528151602082015260006020830151610140806040850152610a2a6101608501836109d5565b91506040850151601f19858403016060860152610a4783826109d5565b92505060608501516080850152608085015160a085015260a085015160c085015260c085015160e085015260e0850151610100610a878187018315159052565b8601519050610120610a9c8682018315159052565b959095015193019290925250919050565b600060208284031215610abf57600080fd5b81356001600160a01b0381168114610ad657600080fd5b9392505050565b600082601f830112610aee57600080fd5b8151610afc61095e826108e6565b818152846020838601011115610b1157600080fd5b610b228260208301602087016109b1565b949350505050565b80518015158114610b3a57600080fd5b919050565b600060208284031215610b5157600080fd5b815167ffffffffffffffff80821115610b6957600080fd5b908301906101408286031215610b7e57600080fd5b610b8661088b565b82518152602083015182811115610b9c57600080fd5b610ba887828601610add565b602083015250604083015182811115610bc057600080fd5b610bcc87828601610add565b604083015250606083015160608201526080830151608082015260a083015160a082015260c083015160c0820152610c0660e08401610b2a565b60e08201526101009150610c1b828401610b2a565b9181019190915261012091820151918101919091529392505050565b838152606060208201526000610c5060608301856109d5565b905060018060a01b0383166040830152949350505050565b602081526000610ad660208301846109d556fea26469706673582212206eb62d8b20ee76b61d160103f592c3f814443c840dfed8d3db436d671283a46664736f6c63430008140033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xDD5 CODESIZE SUB DUP1 PUSH2 0xDD5 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xC4 JUMP JUMPDEST CALLER DUP1 PUSH2 0x55 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E DUP2 PUSH2 0x74 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0xF4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xCB1 PUSH2 0x124 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x19B ADD MSTORE DUP2 DUP2 PUSH2 0x247 ADD MSTORE DUP2 DUP2 PUSH2 0x470 ADD MSTORE PUSH2 0x5CD ADD MSTORE PUSH2 0xCB1 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xC7F758A8 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0xCCAA4160 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0xCF43A27A EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFC561B7 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x21C49E39 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x236A0579 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x3B1C57CB EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x136 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDB PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE7 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x998 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xA01 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x998 JUMP JUMPDEST PUSH2 0x64A JUMP JUMPDEST PUSH2 0x14B PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0xAAD JUMP JUMPDEST PUSH2 0x756 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x22E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416374696F6E20646174612063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x18FEEB15 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xC7F758A8 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x296 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2BE SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB3F JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SUB PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20646F6573206E6F74206578697374000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH1 0xE0 ADD MLOAD PUSH2 0x358 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x149BDBDD081B9BDD081C1D589B1A5CDA1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH2 0x100 ADD MLOAD ISZERO PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20616C726561647920657865637574656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x225 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD KECCAK256 PUSH1 0x60 DUP3 ADD MLOAD DUP2 EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416374696F6E20646174612068617368206D69736D6174636800000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x225 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1058DD1A5BDB881B9BDD0818DBDB5B5A5D1D1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD61B519 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xD61B519 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD DUP6 SWAP2 POP PUSH32 0x57C58E4F8D951A2C866A2B2A82F21947043BDB5591CB0CA3C4FA17BCD2556387 SWAP1 PUSH2 0x523 SWAP1 DUP5 SWAP1 DUP8 SWAP1 CALLER SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x534 DUP4 PUSH2 0x7BE JUMP JUMPDEST POP POP PUSH2 0x53F PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x54B PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x555 PUSH1 0x0 PUSH2 0x825 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5B7 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x18FEEB15 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xC7F758A8 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x61C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x644 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x652 PUSH2 0x7F8 JUMP JUMPDEST DUP1 PUSH2 0x69F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416374696F6E206461746120686173682063616E6E6F74206265207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x225 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416374696F6E20616C7265616479206578656375746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x225 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD DUP2 SWAP1 PUSH32 0x932863AC8646848217BBF645E2F397111C70168CC31EB717D2A7F4F156910AD6 SWAP1 PUSH2 0x74B SWAP1 TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x75E PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x788 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x225 JUMP JUMPDEST PUSH2 0x791 DUP2 PUSH2 0x825 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH32 0xA7727E8DAEEA8CB0EE548A1FA3CAA32272453A4A058A39123ABF3EC05609C783 DUP2 PUSH1 0x40 MLOAD PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0xC68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x225 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x8AF JUMPI PUSH2 0x8AF PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x8DE JUMPI PUSH2 0x8DE PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x900 JUMPI PUSH2 0x900 PUSH2 0x875 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x93F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x963 PUSH2 0x95E DUP3 PUSH2 0x8E6 JUMP JUMPDEST PUSH2 0x8B5 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP7 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9CC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9B4 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x9ED DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x140 DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xA2A PUSH2 0x160 DUP6 ADD DUP4 PUSH2 0x9D5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x1F NOT DUP6 DUP5 SUB ADD PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0xA47 DUP4 DUP3 PUSH2 0x9D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xE0 DUP6 ADD MLOAD PUSH2 0x100 PUSH2 0xA87 DUP2 DUP8 ADD DUP4 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST DUP7 ADD MLOAD SWAP1 POP PUSH2 0x120 PUSH2 0xA9C DUP7 DUP3 ADD DUP4 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST SWAP6 SWAP1 SWAP6 ADD MLOAD SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xAFC PUSH2 0x95E DUP3 PUSH2 0x8E6 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xB11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB22 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x9B1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH2 0x140 DUP3 DUP7 SUB SLT ISZERO PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB86 PUSH2 0x88B JUMP JUMPDEST DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0xB9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBA8 DUP8 DUP3 DUP7 ADD PUSH2 0xADD JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0xBC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBCC DUP8 DUP3 DUP7 ADD PUSH2 0xADD JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xC06 PUSH1 0xE0 DUP5 ADD PUSH2 0xB2A JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 SWAP2 POP PUSH2 0xC1B DUP3 DUP5 ADD PUSH2 0xB2A JUMP JUMPDEST SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x120 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xC50 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x9D5 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xAD6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9D5 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xB62D8B20EE76B61D160103F592C3F8 EQ PREVRANDAO EXTCODECOPY DUP5 0xD INVALID 0xD8 0xD3 0xDB NUMBER PUSH14 0x671283A46664736F6C6343000814 STOP CALLER ","sourceMap":"394:4476:23:-:0;;;1094:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1138:10;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;455:51:27;428:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1857:1:16;2061:21;;-1:-1:-1;;;;;1160:55:23::1;;::::0;394:4476;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:27:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:27;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:27:o;309:203::-;394:4476:23;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":2040,"id":84,"parameterSlots":0,"returnSlots":0},"@_executeAction_7971":{"entryPoint":1982,"id":7971,"parameterSlots":1,"returnSlots":0},"@_msgSender_2666":{"entryPoint":null,"id":2666,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_2793":{"entryPoint":null,"id":2793,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_2785":{"entryPoint":1940,"id":2785,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2085,"id":146,"parameterSlots":1,"returnSlots":0},"@commitActionDataHash_7865":{"entryPoint":1610,"id":7865,"parameterSlots":1,"returnSlots":0},"@committedActions_7790":{"entryPoint":null,"id":7790,"parameterSlots":0,"returnSlots":0},"@executeIfAuthorized_7960":{"entryPoint":464,"id":7960,"parameterSlots":2,"returnSlots":0},"@executedActions_7794":{"entryPoint":null,"id":7794,"parameterSlots":0,"returnSlots":0},"@getProposal_7999":{"entryPoint":1367,"id":7999,"parameterSlots":1,"returnSlots":1},"@isActionExecuted_7984":{"entryPoint":null,"id":7984,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1347,"id":98,"parameterSlots":0,"returnSlots":0},"@rootPublisher_7786":{"entryPoint":null,"id":7786,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":1878,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_bool_fromMemory":{"entryPoint":2858,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":2781,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2733,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":2456,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_Proposal_$8032_memory_ptr_fromMemory":{"entryPoint":2879,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_bytes_memory_ptr":{"entryPoint":2318,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":2517,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr_t_address__to_t_bytes32_t_bytes_memory_ptr_t_address__fromStack_reversed":{"entryPoint":3127,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":3176,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_GovernanceRootPublisher_$8344__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0e6ff2388bfced98140081975ac611d480e2a618c21e0a650db8f1a9f9f8f860__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_13390cb6ac8c0ea9ab608030d21b8caec76504526f6045e2233c880c3b675edd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1b9ca7587394bc2aed9077d1561bebc1e44d00041c9f659422706c199b3b6e05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e62a544e5aebc4f7865ef71973090f3036faa05a5f7be3ea3605ab15dc232bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c695b83284c1b27461bf9214fc253bb3da462e72315680f43faed3e9c3a49bb2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c81b9ff171c25a4f5900a882b68fbb0e3a066a8acc7418da49e916039e7500d8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f51d8a2ee1ed415d9e0a7f47c891529969ae72513581188f4c1a72c1e5509376__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Proposal_$8032_memory_ptr__to_t_struct$_Proposal_$8032_memory_ptr__fromStack_reversed":{"entryPoint":2561,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":2229,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_1535":{"entryPoint":2187,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":2278,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2481,"id":null,"parameterSlots":3,"returnSlots":0},"panic_error_0x41":{"entryPoint":2165,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10307:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:27"},"nodeType":"YulFunctionCall","src":"66:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:27"},"nodeType":"YulFunctionCall","src":"56:31:27"},"nodeType":"YulExpressionStatement","src":"56:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:27"},"nodeType":"YulFunctionCall","src":"96:15:27"},"nodeType":"YulExpressionStatement","src":"96:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:27"},"nodeType":"YulFunctionCall","src":"120:15:27"},"nodeType":"YulExpressionStatement","src":"120:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:27"},{"body":{"nodeType":"YulBlock","src":"192:209:27","statements":[{"nodeType":"YulAssignment","src":"202:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"218:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"212:5:27"},"nodeType":"YulFunctionCall","src":"212:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"202:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"230:37:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"252:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"260:6:27","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"248:3:27"},"nodeType":"YulFunctionCall","src":"248:19:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"234:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"342:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"344:16:27"},"nodeType":"YulFunctionCall","src":"344:18:27"},"nodeType":"YulExpressionStatement","src":"344:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"285:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"297:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"282:2:27"},"nodeType":"YulFunctionCall","src":"282:34:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"321:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"333:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"318:2:27"},"nodeType":"YulFunctionCall","src":"318:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"279:2:27"},"nodeType":"YulFunctionCall","src":"279:62:27"},"nodeType":"YulIf","src":"276:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"380:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"384:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"373:6:27"},"nodeType":"YulFunctionCall","src":"373:22:27"},"nodeType":"YulExpressionStatement","src":"373:22:27"}]},"name":"allocate_memory_1535","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"181:6:27","type":""}],"src":"146:255:27"},{"body":{"nodeType":"YulBlock","src":"451:230:27","statements":[{"nodeType":"YulAssignment","src":"461:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"477:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"471:5:27"},"nodeType":"YulFunctionCall","src":"471:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"461:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"489:58:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"511:6:27"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"527:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"533:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"523:3:27"},"nodeType":"YulFunctionCall","src":"523:13:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"542:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"538:3:27"},"nodeType":"YulFunctionCall","src":"538:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"519:3:27"},"nodeType":"YulFunctionCall","src":"519:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:27"},"nodeType":"YulFunctionCall","src":"507:40:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"493:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"622:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"624:16:27"},"nodeType":"YulFunctionCall","src":"624:18:27"},"nodeType":"YulExpressionStatement","src":"624:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"577:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"562:2:27"},"nodeType":"YulFunctionCall","src":"562:34:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"601:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"613:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"598:2:27"},"nodeType":"YulFunctionCall","src":"598:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"559:2:27"},"nodeType":"YulFunctionCall","src":"559:62:27"},"nodeType":"YulIf","src":"556:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"660:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"664:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"653:6:27"},"nodeType":"YulFunctionCall","src":"653:22:27"},"nodeType":"YulExpressionStatement","src":"653:22:27"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"431:4:27","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"440:6:27","type":""}],"src":"406:275:27"},{"body":{"nodeType":"YulBlock","src":"743:129:27","statements":[{"body":{"nodeType":"YulBlock","src":"787:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"789:16:27"},"nodeType":"YulFunctionCall","src":"789:18:27"},"nodeType":"YulExpressionStatement","src":"789:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"759:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"767:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"756:2:27"},"nodeType":"YulFunctionCall","src":"756:30:27"},"nodeType":"YulIf","src":"753:56:27"},{"nodeType":"YulAssignment","src":"818:48:27","value":{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"838:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"846:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"834:3:27"},"nodeType":"YulFunctionCall","src":"834:15:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"855:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"851:3:27"},"nodeType":"YulFunctionCall","src":"851:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"830:3:27"},"nodeType":"YulFunctionCall","src":"830:29:27"},{"kind":"number","nodeType":"YulLiteral","src":"861:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"826:3:27"},"nodeType":"YulFunctionCall","src":"826:40:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"818:4:27"}]}]},"name":"array_allocation_size_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"723:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"734:4:27","type":""}],"src":"686:186:27"},{"body":{"nodeType":"YulBlock","src":"973:643:27","statements":[{"body":{"nodeType":"YulBlock","src":"1019:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1028:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1031:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1021:6:27"},"nodeType":"YulFunctionCall","src":"1021:12:27"},"nodeType":"YulExpressionStatement","src":"1021:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"994:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1003:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"990:3:27"},"nodeType":"YulFunctionCall","src":"990:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1015:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"986:3:27"},"nodeType":"YulFunctionCall","src":"986:32:27"},"nodeType":"YulIf","src":"983:52:27"},{"nodeType":"YulAssignment","src":"1044:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1067:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1054:12:27"},"nodeType":"YulFunctionCall","src":"1054:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1044:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"1086:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1117:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1128:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1113:3:27"},"nodeType":"YulFunctionCall","src":"1113:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1100:12:27"},"nodeType":"YulFunctionCall","src":"1100:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1090:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1175:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1184:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1187:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1177:6:27"},"nodeType":"YulFunctionCall","src":"1177:12:27"},"nodeType":"YulExpressionStatement","src":"1177:12:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1147:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1155:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1144:2:27"},"nodeType":"YulFunctionCall","src":"1144:30:27"},"nodeType":"YulIf","src":"1141:50:27"},{"nodeType":"YulVariableDeclaration","src":"1200:32:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1214:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"1225:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1210:3:27"},"nodeType":"YulFunctionCall","src":"1210:22:27"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1204:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1280:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1289:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1292:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1282:6:27"},"nodeType":"YulFunctionCall","src":"1282:12:27"},"nodeType":"YulExpressionStatement","src":"1282:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1259:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"1263:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1255:3:27"},"nodeType":"YulFunctionCall","src":"1255:13:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1270:7:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1251:3:27"},"nodeType":"YulFunctionCall","src":"1251:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1244:6:27"},"nodeType":"YulFunctionCall","src":"1244:35:27"},"nodeType":"YulIf","src":"1241:55:27"},{"nodeType":"YulVariableDeclaration","src":"1305:26:27","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1328:2:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1315:12:27"},"nodeType":"YulFunctionCall","src":"1315:16:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1309:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1340:61:27","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1397:2:27"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"1369:27:27"},"nodeType":"YulFunctionCall","src":"1369:31:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1353:15:27"},"nodeType":"YulFunctionCall","src":"1353:48:27"},"variables":[{"name":"array","nodeType":"YulTypedName","src":"1344:5:27","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1417:5:27"},{"name":"_2","nodeType":"YulIdentifier","src":"1424:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1410:6:27"},"nodeType":"YulFunctionCall","src":"1410:17:27"},"nodeType":"YulExpressionStatement","src":"1410:17:27"},{"body":{"nodeType":"YulBlock","src":"1473:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1482:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1485:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1475:6:27"},"nodeType":"YulFunctionCall","src":"1475:12:27"},"nodeType":"YulExpressionStatement","src":"1475:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1450:2:27"},{"name":"_2","nodeType":"YulIdentifier","src":"1454:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1446:3:27"},"nodeType":"YulFunctionCall","src":"1446:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"1459:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1442:3:27"},"nodeType":"YulFunctionCall","src":"1442:20:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1464:7:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1439:2:27"},"nodeType":"YulFunctionCall","src":"1439:33:27"},"nodeType":"YulIf","src":"1436:53:27"},{"expression":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1515:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"1522:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1511:3:27"},"nodeType":"YulFunctionCall","src":"1511:14:27"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1531:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"1535:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1527:3:27"},"nodeType":"YulFunctionCall","src":"1527:11:27"},{"name":"_2","nodeType":"YulIdentifier","src":"1540:2:27"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1498:12:27"},"nodeType":"YulFunctionCall","src":"1498:45:27"},"nodeType":"YulExpressionStatement","src":"1498:45:27"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1567:5:27"},{"name":"_2","nodeType":"YulIdentifier","src":"1574:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1563:3:27"},"nodeType":"YulFunctionCall","src":"1563:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"1579:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1559:3:27"},"nodeType":"YulFunctionCall","src":"1559:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1584:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1552:6:27"},"nodeType":"YulFunctionCall","src":"1552:34:27"},"nodeType":"YulExpressionStatement","src":"1552:34:27"},{"nodeType":"YulAssignment","src":"1595:15:27","value":{"name":"array","nodeType":"YulIdentifier","src":"1605:5:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1595:6:27"}]}]},"name":"abi_decode_tuple_t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"931:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"942:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"954:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"962:6:27","type":""}],"src":"877:739:27"},{"body":{"nodeType":"YulBlock","src":"1691:110:27","statements":[{"body":{"nodeType":"YulBlock","src":"1737:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1746:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1749:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1739:6:27"},"nodeType":"YulFunctionCall","src":"1739:12:27"},"nodeType":"YulExpressionStatement","src":"1739:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1712:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1721:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1708:3:27"},"nodeType":"YulFunctionCall","src":"1708:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1733:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1704:3:27"},"nodeType":"YulFunctionCall","src":"1704:32:27"},"nodeType":"YulIf","src":"1701:52:27"},{"nodeType":"YulAssignment","src":"1762:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1785:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1772:12:27"},"nodeType":"YulFunctionCall","src":"1772:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1762:6:27"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1657:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1668:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1680:6:27","type":""}],"src":"1621:180:27"},{"body":{"nodeType":"YulBlock","src":"1847:50:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1864:3:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1883:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1876:6:27"},"nodeType":"YulFunctionCall","src":"1876:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1869:6:27"},"nodeType":"YulFunctionCall","src":"1869:21:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1857:6:27"},"nodeType":"YulFunctionCall","src":"1857:34:27"},"nodeType":"YulExpressionStatement","src":"1857:34:27"}]},"name":"abi_encode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1831:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1838:3:27","type":""}],"src":"1806:91:27"},{"body":{"nodeType":"YulBlock","src":"1997:92:27","statements":[{"nodeType":"YulAssignment","src":"2007:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2019:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2030:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2015:3:27"},"nodeType":"YulFunctionCall","src":"2015:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2007:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2049:9:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2074:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2067:6:27"},"nodeType":"YulFunctionCall","src":"2067:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2060:6:27"},"nodeType":"YulFunctionCall","src":"2060:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2042:6:27"},"nodeType":"YulFunctionCall","src":"2042:41:27"},"nodeType":"YulExpressionStatement","src":"2042:41:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1966:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1977:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1988:4:27","type":""}],"src":"1902:187:27"},{"body":{"nodeType":"YulBlock","src":"2195:102:27","statements":[{"nodeType":"YulAssignment","src":"2205:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2217:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2228:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2213:3:27"},"nodeType":"YulFunctionCall","src":"2213:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2205:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2247:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2262:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2278:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2283:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2274:3:27"},"nodeType":"YulFunctionCall","src":"2274:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"2287:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2270:3:27"},"nodeType":"YulFunctionCall","src":"2270:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2258:3:27"},"nodeType":"YulFunctionCall","src":"2258:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2240:6:27"},"nodeType":"YulFunctionCall","src":"2240:51:27"},"nodeType":"YulExpressionStatement","src":"2240:51:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2164:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2175:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2186:4:27","type":""}],"src":"2094:203:27"},{"body":{"nodeType":"YulBlock","src":"2372:110:27","statements":[{"body":{"nodeType":"YulBlock","src":"2418:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2427:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2430:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2420:6:27"},"nodeType":"YulFunctionCall","src":"2420:12:27"},"nodeType":"YulExpressionStatement","src":"2420:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2393:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2402:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2389:3:27"},"nodeType":"YulFunctionCall","src":"2389:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2414:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2385:3:27"},"nodeType":"YulFunctionCall","src":"2385:32:27"},"nodeType":"YulIf","src":"2382:52:27"},{"nodeType":"YulAssignment","src":"2443:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2466:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2453:12:27"},"nodeType":"YulFunctionCall","src":"2453:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2443:6:27"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2338:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2349:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2361:6:27","type":""}],"src":"2302:180:27"},{"body":{"nodeType":"YulBlock","src":"2553:184:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2563:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2572:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2567:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2632:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2657:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"2662:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2653:3:27"},"nodeType":"YulFunctionCall","src":"2653:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2676:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"2681:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2672:3:27"},"nodeType":"YulFunctionCall","src":"2672:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2666:5:27"},"nodeType":"YulFunctionCall","src":"2666:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2646:6:27"},"nodeType":"YulFunctionCall","src":"2646:39:27"},"nodeType":"YulExpressionStatement","src":"2646:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2593:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"2596:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2590:2:27"},"nodeType":"YulFunctionCall","src":"2590:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2604:19:27","statements":[{"nodeType":"YulAssignment","src":"2606:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2615:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"2618:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2611:3:27"},"nodeType":"YulFunctionCall","src":"2611:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2606:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"2586:3:27","statements":[]},"src":"2582:113:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2715:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2720:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2711:3:27"},"nodeType":"YulFunctionCall","src":"2711:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"2729:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2704:6:27"},"nodeType":"YulFunctionCall","src":"2704:27:27"},"nodeType":"YulExpressionStatement","src":"2704:27:27"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2531:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2536:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"2541:6:27","type":""}],"src":"2487:250:27"},{"body":{"nodeType":"YulBlock","src":"2792:221:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2802:26:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2822:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2816:5:27"},"nodeType":"YulFunctionCall","src":"2816:12:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2806:6:27","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2844:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2849:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2837:6:27"},"nodeType":"YulFunctionCall","src":"2837:19:27"},"nodeType":"YulExpressionStatement","src":"2837:19:27"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2904:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2911:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2900:3:27"},"nodeType":"YulFunctionCall","src":"2900:16:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2922:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"2927:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2918:3:27"},"nodeType":"YulFunctionCall","src":"2918:14:27"},{"name":"length","nodeType":"YulIdentifier","src":"2934:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2865:34:27"},"nodeType":"YulFunctionCall","src":"2865:76:27"},"nodeType":"YulExpressionStatement","src":"2865:76:27"},{"nodeType":"YulAssignment","src":"2950:57:27","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2965:3:27"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2978:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2986:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2974:3:27"},"nodeType":"YulFunctionCall","src":"2974:15:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2995:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2991:3:27"},"nodeType":"YulFunctionCall","src":"2991:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2970:3:27"},"nodeType":"YulFunctionCall","src":"2970:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2961:3:27"},"nodeType":"YulFunctionCall","src":"2961:39:27"},{"kind":"number","nodeType":"YulLiteral","src":"3002:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2957:3:27"},"nodeType":"YulFunctionCall","src":"2957:50:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2950:3:27"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2769:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2776:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2784:3:27","type":""}],"src":"2742:271:27"},{"body":{"nodeType":"YulBlock","src":"3171:1063:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3188:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3199:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3181:6:27"},"nodeType":"YulFunctionCall","src":"3181:21:27"},"nodeType":"YulExpressionStatement","src":"3181:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3222:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3233:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3218:3:27"},"nodeType":"YulFunctionCall","src":"3218:18:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3244:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3238:5:27"},"nodeType":"YulFunctionCall","src":"3238:13:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3211:6:27"},"nodeType":"YulFunctionCall","src":"3211:41:27"},"nodeType":"YulExpressionStatement","src":"3211:41:27"},{"nodeType":"YulVariableDeclaration","src":"3261:42:27","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3291:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3299:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3287:3:27"},"nodeType":"YulFunctionCall","src":"3287:15:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3281:5:27"},"nodeType":"YulFunctionCall","src":"3281:22:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3265:12:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3312:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3322:6:27","type":"","value":"0x0140"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3316:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3359:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:27"},"nodeType":"YulFunctionCall","src":"3344:18:27"},{"name":"_1","nodeType":"YulIdentifier","src":"3364:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3337:6:27"},"nodeType":"YulFunctionCall","src":"3337:30:27"},"nodeType":"YulExpressionStatement","src":"3337:30:27"},{"nodeType":"YulVariableDeclaration","src":"3376:66:27","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3408:12:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3426:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3437:3:27","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3422:3:27"},"nodeType":"YulFunctionCall","src":"3422:19:27"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3390:17:27"},"nodeType":"YulFunctionCall","src":"3390:52:27"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"3380:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3451:44:27","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3483:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3491:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:27"},"nodeType":"YulFunctionCall","src":"3479:15:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:27"},"nodeType":"YulFunctionCall","src":"3473:22:27"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"3455:14:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3515:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3526:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3511:3:27"},"nodeType":"YulFunctionCall","src":"3511:18:27"},{"arguments":[{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"3539:6:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3547:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3535:3:27"},"nodeType":"YulFunctionCall","src":"3535:22:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3563:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3559:3:27"},"nodeType":"YulFunctionCall","src":"3559:7:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3531:3:27"},"nodeType":"YulFunctionCall","src":"3531:36:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3504:6:27"},"nodeType":"YulFunctionCall","src":"3504:64:27"},"nodeType":"YulExpressionStatement","src":"3504:64:27"},{"nodeType":"YulVariableDeclaration","src":"3577:55:27","value":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"3609:14:27"},{"name":"tail_1","nodeType":"YulIdentifier","src":"3625:6:27"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3591:17:27"},"nodeType":"YulFunctionCall","src":"3591:41:27"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"3581:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3652:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3663:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3648:3:27"},"nodeType":"YulFunctionCall","src":"3648:19:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3679:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3687:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3675:3:27"},"nodeType":"YulFunctionCall","src":"3675:15:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3669:5:27"},"nodeType":"YulFunctionCall","src":"3669:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3641:6:27"},"nodeType":"YulFunctionCall","src":"3641:51:27"},"nodeType":"YulExpressionStatement","src":"3641:51:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3712:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3723:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3708:3:27"},"nodeType":"YulFunctionCall","src":"3708:19:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3739:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3747:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3735:3:27"},"nodeType":"YulFunctionCall","src":"3735:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3729:5:27"},"nodeType":"YulFunctionCall","src":"3729:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3701:6:27"},"nodeType":"YulFunctionCall","src":"3701:52:27"},"nodeType":"YulExpressionStatement","src":"3701:52:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3773:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3784:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3769:3:27"},"nodeType":"YulFunctionCall","src":"3769:19:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3800:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3808:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3796:3:27"},"nodeType":"YulFunctionCall","src":"3796:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3790:5:27"},"nodeType":"YulFunctionCall","src":"3790:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3762:6:27"},"nodeType":"YulFunctionCall","src":"3762:52:27"},"nodeType":"YulExpressionStatement","src":"3762:52:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3834:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3845:3:27","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3830:3:27"},"nodeType":"YulFunctionCall","src":"3830:19:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3861:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3869:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3857:3:27"},"nodeType":"YulFunctionCall","src":"3857:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3851:5:27"},"nodeType":"YulFunctionCall","src":"3851:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3823:6:27"},"nodeType":"YulFunctionCall","src":"3823:52:27"},"nodeType":"YulExpressionStatement","src":"3823:52:27"},{"nodeType":"YulVariableDeclaration","src":"3884:45:27","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3916:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3924:3:27","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3912:3:27"},"nodeType":"YulFunctionCall","src":"3912:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3906:5:27"},"nodeType":"YulFunctionCall","src":"3906:23:27"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"3888:14:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3938:13:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3948:3:27","type":"","value":"256"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3942:2:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"3976:14:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3996:9:27"},{"name":"_2","nodeType":"YulIdentifier","src":"4007:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3992:3:27"},"nodeType":"YulFunctionCall","src":"3992:18:27"}],"functionName":{"name":"abi_encode_bool","nodeType":"YulIdentifier","src":"3960:15:27"},"nodeType":"YulFunctionCall","src":"3960:51:27"},"nodeType":"YulExpressionStatement","src":"3960:51:27"},{"nodeType":"YulVariableDeclaration","src":"4020:44:27","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4052:6:27"},{"name":"_2","nodeType":"YulIdentifier","src":"4060:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4048:3:27"},"nodeType":"YulFunctionCall","src":"4048:15:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4042:5:27"},"nodeType":"YulFunctionCall","src":"4042:22:27"},"variables":[{"name":"memberValue0_3","nodeType":"YulTypedName","src":"4024:14:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4073:13:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4083:3:27","type":"","value":"288"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"4077:2:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_3","nodeType":"YulIdentifier","src":"4111:14:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4131:9:27"},{"name":"_3","nodeType":"YulIdentifier","src":"4142:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4127:3:27"},"nodeType":"YulFunctionCall","src":"4127:18:27"}],"functionName":{"name":"abi_encode_bool","nodeType":"YulIdentifier","src":"4095:15:27"},"nodeType":"YulFunctionCall","src":"4095:51:27"},"nodeType":"YulExpressionStatement","src":"4095:51:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4166:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"4177:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:27"},"nodeType":"YulFunctionCall","src":"4162:18:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4192:6:27"},{"name":"_3","nodeType":"YulIdentifier","src":"4200:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4188:3:27"},"nodeType":"YulFunctionCall","src":"4188:15:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4182:5:27"},"nodeType":"YulFunctionCall","src":"4182:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4155:6:27"},"nodeType":"YulFunctionCall","src":"4155:50:27"},"nodeType":"YulExpressionStatement","src":"4155:50:27"},{"nodeType":"YulAssignment","src":"4214:14:27","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"4222:6:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4214:4:27"}]}]},"name":"abi_encode_tuple_t_struct$_Proposal_$8032_memory_ptr__to_t_struct$_Proposal_$8032_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3140:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3151:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3162:4:27","type":""}],"src":"3018:1216:27"},{"body":{"nodeType":"YulBlock","src":"4372:102:27","statements":[{"nodeType":"YulAssignment","src":"4382:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4394:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4405:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4390:3:27"},"nodeType":"YulFunctionCall","src":"4390:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4382:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4424:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4439:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4455:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4460:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4451:3:27"},"nodeType":"YulFunctionCall","src":"4451:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"4464:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4447:3:27"},"nodeType":"YulFunctionCall","src":"4447:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4435:3:27"},"nodeType":"YulFunctionCall","src":"4435:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4417:6:27"},"nodeType":"YulFunctionCall","src":"4417:51:27"},"nodeType":"YulExpressionStatement","src":"4417:51:27"}]},"name":"abi_encode_tuple_t_contract$_GovernanceRootPublisher_$8344__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4341:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4352:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4363:4:27","type":""}],"src":"4239:235:27"},{"body":{"nodeType":"YulBlock","src":"4549:216:27","statements":[{"body":{"nodeType":"YulBlock","src":"4595:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4604:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4607:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4597:6:27"},"nodeType":"YulFunctionCall","src":"4597:12:27"},"nodeType":"YulExpressionStatement","src":"4597:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4570:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"4579:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4566:3:27"},"nodeType":"YulFunctionCall","src":"4566:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4591:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4562:3:27"},"nodeType":"YulFunctionCall","src":"4562:32:27"},"nodeType":"YulIf","src":"4559:52:27"},{"nodeType":"YulVariableDeclaration","src":"4620:36:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4646:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4633:12:27"},"nodeType":"YulFunctionCall","src":"4633:23:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4624:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4719:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4728:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4731:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4721:6:27"},"nodeType":"YulFunctionCall","src":"4721:12:27"},"nodeType":"YulExpressionStatement","src":"4721:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4678:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4689:5:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4704:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4709:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4700:3:27"},"nodeType":"YulFunctionCall","src":"4700:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"4713:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4696:3:27"},"nodeType":"YulFunctionCall","src":"4696:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4685:3:27"},"nodeType":"YulFunctionCall","src":"4685:31:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4675:2:27"},"nodeType":"YulFunctionCall","src":"4675:42:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4668:6:27"},"nodeType":"YulFunctionCall","src":"4668:50:27"},"nodeType":"YulIf","src":"4665:70:27"},{"nodeType":"YulAssignment","src":"4744:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"4754:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4744:6:27"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4515:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4526:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4538:6:27","type":""}],"src":"4479:286:27"},{"body":{"nodeType":"YulBlock","src":"4944:177:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4961:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4972:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4954:6:27"},"nodeType":"YulFunctionCall","src":"4954:21:27"},"nodeType":"YulExpressionStatement","src":"4954:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4995:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5006:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4991:3:27"},"nodeType":"YulFunctionCall","src":"4991:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"5011:2:27","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4984:6:27"},"nodeType":"YulFunctionCall","src":"4984:30:27"},"nodeType":"YulExpressionStatement","src":"4984:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5034:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5045:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5030:3:27"},"nodeType":"YulFunctionCall","src":"5030:18:27"},{"hexValue":"416374696f6e20646174612063616e6e6f7420626520656d707479","kind":"string","nodeType":"YulLiteral","src":"5050:29:27","type":"","value":"Action data cannot be empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5023:6:27"},"nodeType":"YulFunctionCall","src":"5023:57:27"},"nodeType":"YulExpressionStatement","src":"5023:57:27"},{"nodeType":"YulAssignment","src":"5089:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5101:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5112:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5097:3:27"},"nodeType":"YulFunctionCall","src":"5097:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5089:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_13390cb6ac8c0ea9ab608030d21b8caec76504526f6045e2233c880c3b675edd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4921:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4935:4:27","type":""}],"src":"4770:351:27"},{"body":{"nodeType":"YulBlock","src":"5227:76:27","statements":[{"nodeType":"YulAssignment","src":"5237:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5249:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5260:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5245:3:27"},"nodeType":"YulFunctionCall","src":"5245:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5237:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5279:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"5290:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5272:6:27"},"nodeType":"YulFunctionCall","src":"5272:25:27"},"nodeType":"YulExpressionStatement","src":"5272:25:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5196:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5207:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5218:4:27","type":""}],"src":"5126:177:27"},{"body":{"nodeType":"YulBlock","src":"5372:378:27","statements":[{"body":{"nodeType":"YulBlock","src":"5421:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5430:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5433:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5423:6:27"},"nodeType":"YulFunctionCall","src":"5423:12:27"},"nodeType":"YulExpressionStatement","src":"5423:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5400:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"5408:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5396:3:27"},"nodeType":"YulFunctionCall","src":"5396:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"5415:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5392:3:27"},"nodeType":"YulFunctionCall","src":"5392:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5385:6:27"},"nodeType":"YulFunctionCall","src":"5385:35:27"},"nodeType":"YulIf","src":"5382:55:27"},{"nodeType":"YulVariableDeclaration","src":"5446:23:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5462:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5456:5:27"},"nodeType":"YulFunctionCall","src":"5456:13:27"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5450:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5478:63:27","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"5537:2:27"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"5509:27:27"},"nodeType":"YulFunctionCall","src":"5509:31:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"5493:15:27"},"nodeType":"YulFunctionCall","src":"5493:48:27"},"variables":[{"name":"array_1","nodeType":"YulTypedName","src":"5482:7:27","type":""}]},{"expression":{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"5557:7:27"},{"name":"_1","nodeType":"YulIdentifier","src":"5566:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5550:6:27"},"nodeType":"YulFunctionCall","src":"5550:19:27"},"nodeType":"YulExpressionStatement","src":"5550:19:27"},{"body":{"nodeType":"YulBlock","src":"5617:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5626:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5629:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5619:6:27"},"nodeType":"YulFunctionCall","src":"5619:12:27"},"nodeType":"YulExpressionStatement","src":"5619:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5592:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"5600:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5588:3:27"},"nodeType":"YulFunctionCall","src":"5588:15:27"},{"kind":"number","nodeType":"YulLiteral","src":"5605:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5584:3:27"},"nodeType":"YulFunctionCall","src":"5584:26:27"},{"name":"end","nodeType":"YulIdentifier","src":"5612:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5581:2:27"},"nodeType":"YulFunctionCall","src":"5581:35:27"},"nodeType":"YulIf","src":"5578:55:27"},{"expression":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5681:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"5689:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5677:3:27"},"nodeType":"YulFunctionCall","src":"5677:17:27"},{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"5700:7:27"},{"kind":"number","nodeType":"YulLiteral","src":"5709:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5696:3:27"},"nodeType":"YulFunctionCall","src":"5696:18:27"},{"name":"_1","nodeType":"YulIdentifier","src":"5716:2:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5642:34:27"},"nodeType":"YulFunctionCall","src":"5642:77:27"},"nodeType":"YulExpressionStatement","src":"5642:77:27"},{"nodeType":"YulAssignment","src":"5728:16:27","value":{"name":"array_1","nodeType":"YulIdentifier","src":"5737:7:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5728:5:27"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5346:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"5354:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5362:5:27","type":""}],"src":"5308:442:27"},{"body":{"nodeType":"YulBlock","src":"5812:107:27","statements":[{"nodeType":"YulAssignment","src":"5822:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5837:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5831:5:27"},"nodeType":"YulFunctionCall","src":"5831:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5822:5:27"}]},{"body":{"nodeType":"YulBlock","src":"5897:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5906:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5909:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5899:6:27"},"nodeType":"YulFunctionCall","src":"5899:12:27"},"nodeType":"YulExpressionStatement","src":"5899:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5866:5:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5887:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5880:6:27"},"nodeType":"YulFunctionCall","src":"5880:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5873:6:27"},"nodeType":"YulFunctionCall","src":"5873:21:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5863:2:27"},"nodeType":"YulFunctionCall","src":"5863:32:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5856:6:27"},"nodeType":"YulFunctionCall","src":"5856:40:27"},"nodeType":"YulIf","src":"5853:60:27"}]},"name":"abi_decode_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5791:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5802:5:27","type":""}],"src":"5755:164:27"},{"body":{"nodeType":"YulBlock","src":"6031:1192:27","statements":[{"body":{"nodeType":"YulBlock","src":"6077:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6086:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6089:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6079:6:27"},"nodeType":"YulFunctionCall","src":"6079:12:27"},"nodeType":"YulExpressionStatement","src":"6079:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6052:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"6061:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6048:3:27"},"nodeType":"YulFunctionCall","src":"6048:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"6073:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6044:3:27"},"nodeType":"YulFunctionCall","src":"6044:32:27"},"nodeType":"YulIf","src":"6041:52:27"},{"nodeType":"YulVariableDeclaration","src":"6102:30:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6122:9:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6116:5:27"},"nodeType":"YulFunctionCall","src":"6116:16:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6106:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6141:28:27","value":{"kind":"number","nodeType":"YulLiteral","src":"6151:18:27","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6145:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6196:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6205:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6208:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6198:6:27"},"nodeType":"YulFunctionCall","src":"6198:12:27"},"nodeType":"YulExpressionStatement","src":"6198:12:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6184:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"6192:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6181:2:27"},"nodeType":"YulFunctionCall","src":"6181:14:27"},"nodeType":"YulIf","src":"6178:34:27"},{"nodeType":"YulVariableDeclaration","src":"6221:32:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6235:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6246:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6231:3:27"},"nodeType":"YulFunctionCall","src":"6231:22:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6225:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6295:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6304:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6307:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6297:6:27"},"nodeType":"YulFunctionCall","src":"6297:12:27"},"nodeType":"YulExpressionStatement","src":"6297:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6273:7:27"},{"name":"_2","nodeType":"YulIdentifier","src":"6282:2:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6269:3:27"},"nodeType":"YulFunctionCall","src":"6269:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"6287:6:27","type":"","value":"0x0140"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6265:3:27"},"nodeType":"YulFunctionCall","src":"6265:29:27"},"nodeType":"YulIf","src":"6262:49:27"},{"nodeType":"YulVariableDeclaration","src":"6320:35:27","value":{"arguments":[],"functionName":{"name":"allocate_memory_1535","nodeType":"YulIdentifier","src":"6333:20:27"},"nodeType":"YulFunctionCall","src":"6333:22:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6324:5:27","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6371:5:27"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6384:2:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6378:5:27"},"nodeType":"YulFunctionCall","src":"6378:9:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6364:6:27"},"nodeType":"YulFunctionCall","src":"6364:24:27"},"nodeType":"YulExpressionStatement","src":"6364:24:27"},{"nodeType":"YulVariableDeclaration","src":"6397:34:27","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6423:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"6427:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6419:3:27"},"nodeType":"YulFunctionCall","src":"6419:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6413:5:27"},"nodeType":"YulFunctionCall","src":"6413:18:27"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"6401:8:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6460:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6469:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6472:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6462:6:27"},"nodeType":"YulFunctionCall","src":"6462:12:27"},"nodeType":"YulExpressionStatement","src":"6462:12:27"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"6446:8:27"},{"name":"_1","nodeType":"YulIdentifier","src":"6456:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6443:2:27"},"nodeType":"YulFunctionCall","src":"6443:16:27"},"nodeType":"YulIf","src":"6440:36:27"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6496:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"6503:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6492:3:27"},"nodeType":"YulFunctionCall","src":"6492:14:27"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6541:2:27"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6545:8:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6537:3:27"},"nodeType":"YulFunctionCall","src":"6537:17:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6556:7:27"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"6508:28:27"},"nodeType":"YulFunctionCall","src":"6508:56:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6485:6:27"},"nodeType":"YulFunctionCall","src":"6485:80:27"},"nodeType":"YulExpressionStatement","src":"6485:80:27"},{"nodeType":"YulVariableDeclaration","src":"6574:34:27","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6600:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"6604:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6596:3:27"},"nodeType":"YulFunctionCall","src":"6596:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6590:5:27"},"nodeType":"YulFunctionCall","src":"6590:18:27"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"6578:8:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6637:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6646:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6649:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6639:6:27"},"nodeType":"YulFunctionCall","src":"6639:12:27"},"nodeType":"YulExpressionStatement","src":"6639:12:27"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"6623:8:27"},{"name":"_1","nodeType":"YulIdentifier","src":"6633:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6620:2:27"},"nodeType":"YulFunctionCall","src":"6620:16:27"},"nodeType":"YulIf","src":"6617:36:27"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6673:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"6680:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6669:3:27"},"nodeType":"YulFunctionCall","src":"6669:14:27"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6718:2:27"},{"name":"offset_2","nodeType":"YulIdentifier","src":"6722:8:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6714:3:27"},"nodeType":"YulFunctionCall","src":"6714:17:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6733:7:27"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"6685:28:27"},"nodeType":"YulFunctionCall","src":"6685:56:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6662:6:27"},"nodeType":"YulFunctionCall","src":"6662:80:27"},"nodeType":"YulExpressionStatement","src":"6662:80:27"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6762:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"6769:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6758:3:27"},"nodeType":"YulFunctionCall","src":"6758:14:27"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6784:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"6788:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6780:3:27"},"nodeType":"YulFunctionCall","src":"6780:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6774:5:27"},"nodeType":"YulFunctionCall","src":"6774:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6751:6:27"},"nodeType":"YulFunctionCall","src":"6751:42:27"},"nodeType":"YulExpressionStatement","src":"6751:42:27"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6813:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"6820:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6809:3:27"},"nodeType":"YulFunctionCall","src":"6809:15:27"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6836:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"6840:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6832:3:27"},"nodeType":"YulFunctionCall","src":"6832:12:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6826:5:27"},"nodeType":"YulFunctionCall","src":"6826:19:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6802:6:27"},"nodeType":"YulFunctionCall","src":"6802:44:27"},"nodeType":"YulExpressionStatement","src":"6802:44:27"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6866:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"6873:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6862:3:27"},"nodeType":"YulFunctionCall","src":"6862:15:27"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6889:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"6893:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6885:3:27"},"nodeType":"YulFunctionCall","src":"6885:12:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6879:5:27"},"nodeType":"YulFunctionCall","src":"6879:19:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6855:6:27"},"nodeType":"YulFunctionCall","src":"6855:44:27"},"nodeType":"YulExpressionStatement","src":"6855:44:27"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6919:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"6926:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6915:3:27"},"nodeType":"YulFunctionCall","src":"6915:15:27"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6942:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"6946:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6938:3:27"},"nodeType":"YulFunctionCall","src":"6938:12:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6932:5:27"},"nodeType":"YulFunctionCall","src":"6932:19:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6908:6:27"},"nodeType":"YulFunctionCall","src":"6908:44:27"},"nodeType":"YulExpressionStatement","src":"6908:44:27"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6972:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"6979:3:27","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6968:3:27"},"nodeType":"YulFunctionCall","src":"6968:15:27"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7016:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"7020:3:27","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7012:3:27"},"nodeType":"YulFunctionCall","src":"7012:12:27"}],"functionName":{"name":"abi_decode_bool_fromMemory","nodeType":"YulIdentifier","src":"6985:26:27"},"nodeType":"YulFunctionCall","src":"6985:40:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6961:6:27"},"nodeType":"YulFunctionCall","src":"6961:65:27"},"nodeType":"YulExpressionStatement","src":"6961:65:27"},{"nodeType":"YulVariableDeclaration","src":"7035:13:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7045:3:27","type":"","value":"256"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"7039:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7068:5:27"},{"name":"_3","nodeType":"YulIdentifier","src":"7075:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7064:3:27"},"nodeType":"YulFunctionCall","src":"7064:14:27"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7111:2:27"},{"name":"_3","nodeType":"YulIdentifier","src":"7115:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7107:3:27"},"nodeType":"YulFunctionCall","src":"7107:11:27"}],"functionName":{"name":"abi_decode_bool_fromMemory","nodeType":"YulIdentifier","src":"7080:26:27"},"nodeType":"YulFunctionCall","src":"7080:39:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7057:6:27"},"nodeType":"YulFunctionCall","src":"7057:63:27"},"nodeType":"YulExpressionStatement","src":"7057:63:27"},{"nodeType":"YulVariableDeclaration","src":"7129:13:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7139:3:27","type":"","value":"288"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"7133:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7162:5:27"},{"name":"_4","nodeType":"YulIdentifier","src":"7169:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7158:3:27"},"nodeType":"YulFunctionCall","src":"7158:14:27"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7184:2:27"},{"name":"_4","nodeType":"YulIdentifier","src":"7188:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7180:3:27"},"nodeType":"YulFunctionCall","src":"7180:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7174:5:27"},"nodeType":"YulFunctionCall","src":"7174:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7151:6:27"},"nodeType":"YulFunctionCall","src":"7151:42:27"},"nodeType":"YulExpressionStatement","src":"7151:42:27"},{"nodeType":"YulAssignment","src":"7202:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"7212:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7202:6:27"}]}]},"name":"abi_decode_tuple_t_struct$_Proposal_$8032_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5997:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6008:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6020:6:27","type":""}],"src":"5924:1299:27"},{"body":{"nodeType":"YulBlock","src":"7402:173:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7419:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7430:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7412:6:27"},"nodeType":"YulFunctionCall","src":"7412:21:27"},"nodeType":"YulExpressionStatement","src":"7412:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7453:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7464:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7449:3:27"},"nodeType":"YulFunctionCall","src":"7449:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"7469:2:27","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7442:6:27"},"nodeType":"YulFunctionCall","src":"7442:30:27"},"nodeType":"YulExpressionStatement","src":"7442:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7492:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7503:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7488:3:27"},"nodeType":"YulFunctionCall","src":"7488:18:27"},{"hexValue":"50726f706f73616c20646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"7508:25:27","type":"","value":"Proposal does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7481:6:27"},"nodeType":"YulFunctionCall","src":"7481:53:27"},"nodeType":"YulExpressionStatement","src":"7481:53:27"},{"nodeType":"YulAssignment","src":"7543:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7555:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7566:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7551:3:27"},"nodeType":"YulFunctionCall","src":"7551:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7543:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e62a544e5aebc4f7865ef71973090f3036faa05a5f7be3ea3605ab15dc232bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7379:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7393:4:27","type":""}],"src":"7228:347:27"},{"body":{"nodeType":"YulBlock","src":"7754:168:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7771:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7782:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7764:6:27"},"nodeType":"YulFunctionCall","src":"7764:21:27"},"nodeType":"YulExpressionStatement","src":"7764:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7805:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7816:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7801:3:27"},"nodeType":"YulFunctionCall","src":"7801:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"7821:2:27","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7794:6:27"},"nodeType":"YulFunctionCall","src":"7794:30:27"},"nodeType":"YulExpressionStatement","src":"7794:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7844:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7855:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7840:3:27"},"nodeType":"YulFunctionCall","src":"7840:18:27"},{"hexValue":"526f6f74206e6f74207075626c6973686564","kind":"string","nodeType":"YulLiteral","src":"7860:20:27","type":"","value":"Root not published"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7833:6:27"},"nodeType":"YulFunctionCall","src":"7833:48:27"},"nodeType":"YulExpressionStatement","src":"7833:48:27"},{"nodeType":"YulAssignment","src":"7890:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7902:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7913:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7898:3:27"},"nodeType":"YulFunctionCall","src":"7898:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7890:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_f51d8a2ee1ed415d9e0a7f47c891529969ae72513581188f4c1a72c1e5509376__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7731:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7745:4:27","type":""}],"src":"7580:342:27"},{"body":{"nodeType":"YulBlock","src":"8101:175:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8118:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8129:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8111:6:27"},"nodeType":"YulFunctionCall","src":"8111:21:27"},"nodeType":"YulExpressionStatement","src":"8111:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8152:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8163:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8148:3:27"},"nodeType":"YulFunctionCall","src":"8148:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"8168:2:27","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8141:6:27"},"nodeType":"YulFunctionCall","src":"8141:30:27"},"nodeType":"YulExpressionStatement","src":"8141:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8191:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8202:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8187:3:27"},"nodeType":"YulFunctionCall","src":"8187:18:27"},{"hexValue":"50726f706f73616c20616c7265616479206578656375746564","kind":"string","nodeType":"YulLiteral","src":"8207:27:27","type":"","value":"Proposal already executed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8180:6:27"},"nodeType":"YulFunctionCall","src":"8180:55:27"},"nodeType":"YulExpressionStatement","src":"8180:55:27"},{"nodeType":"YulAssignment","src":"8244:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8256:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8267:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8252:3:27"},"nodeType":"YulFunctionCall","src":"8252:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8244:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8078:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8092:4:27","type":""}],"src":"7927:349:27"},{"body":{"nodeType":"YulBlock","src":"8455:175:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8472:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8483:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8465:6:27"},"nodeType":"YulFunctionCall","src":"8465:21:27"},"nodeType":"YulExpressionStatement","src":"8465:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8506:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8517:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8502:3:27"},"nodeType":"YulFunctionCall","src":"8502:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"8522:2:27","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8495:6:27"},"nodeType":"YulFunctionCall","src":"8495:30:27"},"nodeType":"YulExpressionStatement","src":"8495:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8545:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8556:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8541:3:27"},"nodeType":"YulFunctionCall","src":"8541:18:27"},{"hexValue":"416374696f6e20646174612068617368206d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"8561:27:27","type":"","value":"Action data hash mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8534:6:27"},"nodeType":"YulFunctionCall","src":"8534:55:27"},"nodeType":"YulExpressionStatement","src":"8534:55:27"},{"nodeType":"YulAssignment","src":"8598:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8610:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8621:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8606:3:27"},"nodeType":"YulFunctionCall","src":"8606:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c81b9ff171c25a4f5900a882b68fbb0e3a066a8acc7418da49e916039e7500d8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8432:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8446:4:27","type":""}],"src":"8281:349:27"},{"body":{"nodeType":"YulBlock","src":"8809:170:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8826:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8837:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8819:6:27"},"nodeType":"YulFunctionCall","src":"8819:21:27"},"nodeType":"YulExpressionStatement","src":"8819:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8860:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8871:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8856:3:27"},"nodeType":"YulFunctionCall","src":"8856:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"8876:2:27","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8849:6:27"},"nodeType":"YulFunctionCall","src":"8849:30:27"},"nodeType":"YulExpressionStatement","src":"8849:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8899:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8910:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8895:3:27"},"nodeType":"YulFunctionCall","src":"8895:18:27"},{"hexValue":"416374696f6e206e6f7420636f6d6d6974746564","kind":"string","nodeType":"YulLiteral","src":"8915:22:27","type":"","value":"Action not committed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8888:6:27"},"nodeType":"YulFunctionCall","src":"8888:50:27"},"nodeType":"YulExpressionStatement","src":"8888:50:27"},{"nodeType":"YulAssignment","src":"8947:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8959:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8970:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8955:3:27"},"nodeType":"YulFunctionCall","src":"8955:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8947:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_1b9ca7587394bc2aed9077d1561bebc1e44d00041c9f659422706c199b3b6e05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8786:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8800:4:27","type":""}],"src":"8635:344:27"},{"body":{"nodeType":"YulBlock","src":"9159:211:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9176:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"9187:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9169:6:27"},"nodeType":"YulFunctionCall","src":"9169:25:27"},"nodeType":"YulExpressionStatement","src":"9169:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9214:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9225:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9210:3:27"},"nodeType":"YulFunctionCall","src":"9210:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"9230:2:27","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9203:6:27"},"nodeType":"YulFunctionCall","src":"9203:30:27"},"nodeType":"YulExpressionStatement","src":"9203:30:27"},{"nodeType":"YulAssignment","src":"9242:53:27","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9268:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9280:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9291:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9276:3:27"},"nodeType":"YulFunctionCall","src":"9276:18:27"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"9250:17:27"},"nodeType":"YulFunctionCall","src":"9250:45:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9242:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9315:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9326:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9311:3:27"},"nodeType":"YulFunctionCall","src":"9311:18:27"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9335:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9351:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9356:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9347:3:27"},"nodeType":"YulFunctionCall","src":"9347:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"9360:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9343:3:27"},"nodeType":"YulFunctionCall","src":"9343:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9331:3:27"},"nodeType":"YulFunctionCall","src":"9331:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9304:6:27"},"nodeType":"YulFunctionCall","src":"9304:60:27"},"nodeType":"YulExpressionStatement","src":"9304:60:27"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr_t_address__to_t_bytes32_t_bytes_memory_ptr_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9112:9:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9123:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9131:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9139:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9150:4:27","type":""}],"src":"8984:386:27"},{"body":{"nodeType":"YulBlock","src":"9549:181:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9566:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9577:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9559:6:27"},"nodeType":"YulFunctionCall","src":"9559:21:27"},"nodeType":"YulExpressionStatement","src":"9559:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9600:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9611:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9596:3:27"},"nodeType":"YulFunctionCall","src":"9596:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"9616:2:27","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9589:6:27"},"nodeType":"YulFunctionCall","src":"9589:30:27"},"nodeType":"YulExpressionStatement","src":"9589:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9639:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9650:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9635:3:27"},"nodeType":"YulFunctionCall","src":"9635:18:27"},{"hexValue":"416374696f6e206461746120686173682063616e6e6f74206265207a65726f","kind":"string","nodeType":"YulLiteral","src":"9655:33:27","type":"","value":"Action data hash cannot be zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9628:6:27"},"nodeType":"YulFunctionCall","src":"9628:61:27"},"nodeType":"YulExpressionStatement","src":"9628:61:27"},{"nodeType":"YulAssignment","src":"9698:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9710:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9721:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9706:3:27"},"nodeType":"YulFunctionCall","src":"9706:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9698:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_0e6ff2388bfced98140081975ac611d480e2a618c21e0a650db8f1a9f9f8f860__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9526:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9540:4:27","type":""}],"src":"9375:355:27"},{"body":{"nodeType":"YulBlock","src":"9909:173:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9926:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9937:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9919:6:27"},"nodeType":"YulFunctionCall","src":"9919:21:27"},"nodeType":"YulExpressionStatement","src":"9919:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9960:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9971:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9956:3:27"},"nodeType":"YulFunctionCall","src":"9956:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"9976:2:27","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9949:6:27"},"nodeType":"YulFunctionCall","src":"9949:30:27"},"nodeType":"YulExpressionStatement","src":"9949:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9999:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10010:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9995:3:27"},"nodeType":"YulFunctionCall","src":"9995:18:27"},{"hexValue":"416374696f6e20616c7265616479206578656375746564","kind":"string","nodeType":"YulLiteral","src":"10015:25:27","type":"","value":"Action already executed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9988:6:27"},"nodeType":"YulFunctionCall","src":"9988:53:27"},"nodeType":"YulExpressionStatement","src":"9988:53:27"},{"nodeType":"YulAssignment","src":"10050:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10062:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10073:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10058:3:27"},"nodeType":"YulFunctionCall","src":"10058:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10050:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c695b83284c1b27461bf9214fc253bb3da462e72315680f43faed3e9c3a49bb2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9886:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9900:4:27","type":""}],"src":"9735:347:27"},{"body":{"nodeType":"YulBlock","src":"10206:99:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10223:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10234:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10216:6:27"},"nodeType":"YulFunctionCall","src":"10216:21:27"},"nodeType":"YulExpressionStatement","src":"10216:21:27"},{"nodeType":"YulAssignment","src":"10246:53:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10272:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10284:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10295:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10280:3:27"},"nodeType":"YulFunctionCall","src":"10280:18:27"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"10254:17:27"},"nodeType":"YulFunctionCall","src":"10254:45:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10246:4:27"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10175:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10186:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10197:4:27","type":""}],"src":"10087:218:27"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_1535() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x0140)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_bytes(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(and(add(length, 31), not(31)), 0x20)\n    }\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let _2 := calldataload(_1)\n        let array := allocate_memory(array_allocation_size_bytes(_2))\n        mstore(array, _2)\n        if gt(add(add(_1, _2), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, 32), add(_1, 32), _2)\n        mstore(add(add(array, _2), 32), 0)\n        value1 := array\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_struct$_Proposal_$8032_memory_ptr__to_t_struct$_Proposal_$8032_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), mload(value0))\n        let memberValue0 := mload(add(value0, 32))\n        let _1 := 0x0140\n        mstore(add(headStart, 64), _1)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 352))\n        let memberValue0_1 := mload(add(value0, 64))\n        mstore(add(headStart, 96), add(sub(tail_1, headStart), not(31)))\n        let tail_2 := abi_encode_string(memberValue0_1, tail_1)\n        mstore(add(headStart, 128), mload(add(value0, 96)))\n        mstore(add(headStart, 160), mload(add(value0, 128)))\n        mstore(add(headStart, 192), mload(add(value0, 160)))\n        mstore(add(headStart, 224), mload(add(value0, 192)))\n        let memberValue0_2 := mload(add(value0, 224))\n        let _2 := 256\n        abi_encode_bool(memberValue0_2, add(headStart, _2))\n        let memberValue0_3 := mload(add(value0, _2))\n        let _3 := 288\n        abi_encode_bool(memberValue0_3, add(headStart, _3))\n        mstore(add(headStart, _1), mload(add(value0, _3)))\n        tail := tail_2\n    }\n    function abi_encode_tuple_t_contract$_GovernanceRootPublisher_$8344__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_13390cb6ac8c0ea9ab608030d21b8caec76504526f6045e2233c880c3b675edd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Action data cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let array_1 := allocate_memory(array_allocation_size_bytes(_1))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(offset, 0x20), add(array_1, 0x20), _1)\n        array := array_1\n    }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_Proposal_$8032_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 0x0140) { revert(0, 0) }\n        let value := allocate_memory_1535()\n        mstore(value, mload(_2))\n        let offset_1 := mload(add(_2, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(add(value, 32), abi_decode_string_fromMemory(add(_2, offset_1), dataEnd))\n        let offset_2 := mload(add(_2, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        mstore(add(value, 64), abi_decode_string_fromMemory(add(_2, offset_2), dataEnd))\n        mstore(add(value, 96), mload(add(_2, 96)))\n        mstore(add(value, 128), mload(add(_2, 128)))\n        mstore(add(value, 160), mload(add(_2, 160)))\n        mstore(add(value, 192), mload(add(_2, 192)))\n        mstore(add(value, 224), abi_decode_bool_fromMemory(add(_2, 224)))\n        let _3 := 256\n        mstore(add(value, _3), abi_decode_bool_fromMemory(add(_2, _3)))\n        let _4 := 288\n        mstore(add(value, _4), mload(add(_2, _4)))\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_8e62a544e5aebc4f7865ef71973090f3036faa05a5f7be3ea3605ab15dc232bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Proposal does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f51d8a2ee1ed415d9e0a7f47c891529969ae72513581188f4c1a72c1e5509376__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Root not published\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Proposal already executed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c81b9ff171c25a4f5900a882b68fbb0e3a066a8acc7418da49e916039e7500d8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Action data hash mismatch\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1b9ca7587394bc2aed9077d1561bebc1e44d00041c9f659422706c199b3b6e05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Action not committed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes_memory_ptr_t_address__to_t_bytes32_t_bytes_memory_ptr_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 96)\n        tail := abi_encode_string(value1, add(headStart, 96))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_0e6ff2388bfced98140081975ac611d480e2a618c21e0a650db8f1a9f9f8f860__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Action data hash cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c695b83284c1b27461bf9214fc253bb3da462e72315680f43faed3e9c3a49bb2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Action already executed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"7786":[{"length":32,"start":411},{"length":32,"start":583},{"length":32,"start":1136},{"length":32,"start":1485}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461013e578063c7f758a814610163578063ccaa416014610183578063cf43a27a14610196578063f2fde38b146101bd57600080fd5b80630fc561b7146100a357806321c49e39146100b8578063236a0579146100f05780633b1c57cb14610113578063715018a614610136575b600080fd5b6100b66100b136600461090e565b6101d0565b005b6100db6100c6366004610998565b60009081526003602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100db6100fe366004610998565b60026020526000908152604090205460ff1681565b6100db610121366004610998565b60036020526000908152604090205460ff1681565b6100b6610543565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100e7565b610176610171366004610998565b610557565b6040516100e79190610a01565b6100b6610191366004610998565b61064a565b61014b7f000000000000000000000000000000000000000000000000000000000000000081565b6100b66101cb366004610aad565b610756565b6101d8610794565b600081511161022e5760405162461bcd60e51b815260206004820152601b60248201527f416374696f6e20646174612063616e6e6f7420626520656d707479000000000060448201526064015b60405180910390fd5b6040516318feeb1560e31b8152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c7f758a890602401600060405180830381865afa158015610296573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102be9190810190610b3f565b80519091506000036103125760405162461bcd60e51b815260206004820152601760248201527f50726f706f73616c20646f6573206e6f742065786973740000000000000000006044820152606401610225565b8060e001516103585760405162461bcd60e51b8152602060048201526012602482015271149bdbdd081b9bdd081c1d589b1a5cda195960721b6044820152606401610225565b806101000151156103ab5760405162461bcd60e51b815260206004820152601960248201527f50726f706f73616c20616c7265616479206578656375746564000000000000006044820152606401610225565b81516020830120606082015181146104055760405162461bcd60e51b815260206004820152601960248201527f416374696f6e20646174612068617368206d69736d61746368000000000000006044820152606401610225565b60008181526002602052604090205460ff1661045a5760405162461bcd60e51b81526020600482015260146024820152731058dd1a5bdb881b9bdd0818dbdb5b5a5d1d195960621b6044820152606401610225565b604051630d61b51960e01b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630d61b51990602401600060405180830381600087803b1580156104bc57600080fd5b505af11580156104d0573d6000803e3d6000fd5b50505060008281526003602052604090819020805460ff19166001179055518591507f57c58e4f8d951a2c866a2b2a82f21947043bdb5591cb0ca3c4fa17bcd25563879061052390849087903390610c37565b60405180910390a2610534836107be565b505061053f60018055565b5050565b61054b6107f8565b6105556000610825565b565b6105b760405180610140016040528060008152602001606081526020016060815260200160008019168152602001600081526020016000815260200160008019168152602001600015158152602001600015158152602001600081525090565b6040516318feeb1560e31b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c7f758a890602401600060405180830381865afa15801561061c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106449190810190610b3f565b92915050565b6106526107f8565b8061069f5760405162461bcd60e51b815260206004820152601f60248201527f416374696f6e206461746120686173682063616e6e6f74206265207a65726f006044820152606401610225565b60008181526003602052604090205460ff16156106fe5760405162461bcd60e51b815260206004820152601760248201527f416374696f6e20616c72656164792065786563757465640000000000000000006044820152606401610225565b60008181526002602052604090819020805460ff191660011790555181907f932863ac8646848217bbf645e2f397111c70168cc31eb717d2a7f4f156910ad69061074b9042815260200190565b60405180910390a250565b61075e6107f8565b6001600160a01b03811661078857604051631e4fbdf760e01b815260006004820152602401610225565b61079181610825565b50565b6002600154036107b757604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b7fa7727e8daeea8cb0ee548a1fa3caa32272453a4a058a39123abf3ec05609c783816040516107ed9190610c68565b60405180910390a150565b6000546001600160a01b031633146105555760405163118cdaa760e01b8152336004820152602401610225565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156108af576108af610875565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156108de576108de610875565b604052919050565b600067ffffffffffffffff82111561090057610900610875565b50601f01601f191660200190565b6000806040838503121561092157600080fd5b82359150602083013567ffffffffffffffff81111561093f57600080fd5b8301601f8101851361095057600080fd5b803561096361095e826108e6565b6108b5565b81815286602083850101111561097857600080fd5b816020840160208301376000602083830101528093505050509250929050565b6000602082840312156109aa57600080fd5b5035919050565b60005b838110156109cc5781810151838201526020016109b4565b50506000910152565b600081518084526109ed8160208601602086016109b1565b601f01601f19169290920160200192915050565b602081528151602082015260006020830151610140806040850152610a2a6101608501836109d5565b91506040850151601f19858403016060860152610a4783826109d5565b92505060608501516080850152608085015160a085015260a085015160c085015260c085015160e085015260e0850151610100610a878187018315159052565b8601519050610120610a9c8682018315159052565b959095015193019290925250919050565b600060208284031215610abf57600080fd5b81356001600160a01b0381168114610ad657600080fd5b9392505050565b600082601f830112610aee57600080fd5b8151610afc61095e826108e6565b818152846020838601011115610b1157600080fd5b610b228260208301602087016109b1565b949350505050565b80518015158114610b3a57600080fd5b919050565b600060208284031215610b5157600080fd5b815167ffffffffffffffff80821115610b6957600080fd5b908301906101408286031215610b7e57600080fd5b610b8661088b565b82518152602083015182811115610b9c57600080fd5b610ba887828601610add565b602083015250604083015182811115610bc057600080fd5b610bcc87828601610add565b604083015250606083015160608201526080830151608082015260a083015160a082015260c083015160c0820152610c0660e08401610b2a565b60e08201526101009150610c1b828401610b2a565b9181019190915261012091820151918101919091529392505050565b838152606060208201526000610c5060608301856109d5565b905060018060a01b0383166040830152949350505050565b602081526000610ad660208301846109d556fea26469706673582212206eb62d8b20ee76b61d160103f592c3f814443c840dfed8d3db436d671283a46664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xC7F758A8 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0xCCAA4160 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0xCF43A27A EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFC561B7 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x21C49E39 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x236A0579 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x3B1C57CB EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x136 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDB PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE7 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x998 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xA01 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x998 JUMP JUMPDEST PUSH2 0x64A JUMP JUMPDEST PUSH2 0x14B PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0xAAD JUMP JUMPDEST PUSH2 0x756 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x22E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416374696F6E20646174612063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x18FEEB15 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xC7F758A8 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x296 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2BE SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB3F JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SUB PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20646F6573206E6F74206578697374000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH1 0xE0 ADD MLOAD PUSH2 0x358 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x149BDBDD081B9BDD081C1D589B1A5CDA1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH2 0x100 ADD MLOAD ISZERO PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20616C726561647920657865637574656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x225 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD KECCAK256 PUSH1 0x60 DUP3 ADD MLOAD DUP2 EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416374696F6E20646174612068617368206D69736D6174636800000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x225 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1058DD1A5BDB881B9BDD0818DBDB5B5A5D1D1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD61B519 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xD61B519 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD DUP6 SWAP2 POP PUSH32 0x57C58E4F8D951A2C866A2B2A82F21947043BDB5591CB0CA3C4FA17BCD2556387 SWAP1 PUSH2 0x523 SWAP1 DUP5 SWAP1 DUP8 SWAP1 CALLER SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x534 DUP4 PUSH2 0x7BE JUMP JUMPDEST POP POP PUSH2 0x53F PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x54B PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x555 PUSH1 0x0 PUSH2 0x825 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5B7 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x18FEEB15 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xC7F758A8 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x61C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x644 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x652 PUSH2 0x7F8 JUMP JUMPDEST DUP1 PUSH2 0x69F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416374696F6E206461746120686173682063616E6E6F74206265207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x225 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416374696F6E20616C7265616479206578656375746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x225 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD DUP2 SWAP1 PUSH32 0x932863AC8646848217BBF645E2F397111C70168CC31EB717D2A7F4F156910AD6 SWAP1 PUSH2 0x74B SWAP1 TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x75E PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x788 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x225 JUMP JUMPDEST PUSH2 0x791 DUP2 PUSH2 0x825 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH32 0xA7727E8DAEEA8CB0EE548A1FA3CAA32272453A4A058A39123ABF3EC05609C783 DUP2 PUSH1 0x40 MLOAD PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0xC68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x225 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x8AF JUMPI PUSH2 0x8AF PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x8DE JUMPI PUSH2 0x8DE PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x900 JUMPI PUSH2 0x900 PUSH2 0x875 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x93F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x963 PUSH2 0x95E DUP3 PUSH2 0x8E6 JUMP JUMPDEST PUSH2 0x8B5 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP7 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9CC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9B4 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x9ED DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x140 DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xA2A PUSH2 0x160 DUP6 ADD DUP4 PUSH2 0x9D5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x1F NOT DUP6 DUP5 SUB ADD PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0xA47 DUP4 DUP3 PUSH2 0x9D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xE0 DUP6 ADD MLOAD PUSH2 0x100 PUSH2 0xA87 DUP2 DUP8 ADD DUP4 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST DUP7 ADD MLOAD SWAP1 POP PUSH2 0x120 PUSH2 0xA9C DUP7 DUP3 ADD DUP4 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST SWAP6 SWAP1 SWAP6 ADD MLOAD SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xAFC PUSH2 0x95E DUP3 PUSH2 0x8E6 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xB11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB22 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x9B1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH2 0x140 DUP3 DUP7 SUB SLT ISZERO PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB86 PUSH2 0x88B JUMP JUMPDEST DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0xB9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBA8 DUP8 DUP3 DUP7 ADD PUSH2 0xADD JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0xBC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBCC DUP8 DUP3 DUP7 ADD PUSH2 0xADD JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xC06 PUSH1 0xE0 DUP5 ADD PUSH2 0xB2A JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 SWAP2 POP PUSH2 0xC1B DUP3 DUP5 ADD PUSH2 0xB2A JUMP JUMPDEST SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x120 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xC50 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x9D5 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xAD6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9D5 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xB62D8B20EE76B61D160103F592C3F8 EQ PREVRANDAO EXTCODECOPY DUP5 0xD INVALID 0xD8 0xD3 0xDB NUMBER PUSH14 0x671283A46664736F6C6343000814 STOP CALLER ","sourceMap":"394:4476:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1943:1224;;;;;;:::i;:::-;;:::i;:::-;;4290:143;;;;;;:::i;:::-;4363:13;4395:31;;;:15;:31;;;;;;;;;4290:143;;;;2067:14:27;;2060:22;2042:41;;2030:2;2015:18;4290:143:23;;;;;;;;634:48;;;;;;:::i;:::-;;;;;;;;;;;;;;;;750:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2293:101:0;;;:::i;1638:85::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;2258:32:27;;;2240:51;;2228:2;2213:18;1638:85:0;2094:203:27;4596:175:23;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1362:407::-;;;;;;:::i;:::-;;:::i;511:54::-;;;;;2543:215:0;;;;;;:::i;:::-;;:::i;1943:1224:23:-;2500:21:16;:19;:21::i;:::-;2099:1:23::1;2079:10;:17;:21;2071:61;;;::::0;-1:-1:-1;;;2071:61:23;;4972:2:27;2071:61:23::1;::::0;::::1;4954:21:27::0;5011:2;4991:18;;;4984:30;5050:29;5030:18;;;5023:57;5097:18;;2071:61:23::1;;;;;;;;;2234:37;::::0;-1:-1:-1;;;2234:37:23;;::::1;::::0;::::1;5272:25:27::0;;;2183:48:23::1;::::0;2234:13:::1;-1:-1:-1::0;;;;;2234:25:23::1;::::0;::::1;::::0;5245:18:27;;2234:37:23::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;2234:37:23::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;2289:11:::0;;2183:88;;-1:-1:-1;2289:11:23::1;:16:::0;2281:52:::1;;;::::0;-1:-1:-1;;;2281:52:23;;7430:2:27;2281:52:23::1;::::0;::::1;7412:21:27::0;7469:2;7449:18;;;7442:30;7508:25;7488:18;;;7481:53;7551:18;;2281:52:23::1;7228:347:27::0;2281:52:23::1;2351:8;:22;;;2343:53;;;::::0;-1:-1:-1;;;2343:53:23;;7782:2:27;2343:53:23::1;::::0;::::1;7764:21:27::0;7821:2;7801:18;;;7794:30;-1:-1:-1;;;7840:18:27;;;7833:48;7898:18;;2343:53:23::1;7580:342:27::0;2343:53:23::1;2415:8;:17;;;2414:18;2406:56;;;::::0;-1:-1:-1;;;2406:56:23;;8129:2:27;2406:56:23::1;::::0;::::1;8111:21:27::0;8168:2;8148:18;;;8141:30;8207:27;8187:18;;;8180:55;8252:18;;2406:56:23::1;7927:349:27::0;2406:56:23::1;2549:21:::0;;::::1;::::0;::::1;::::0;2606:23:::1;::::0;::::1;::::0;2588:41;::::1;2580:79;;;::::0;-1:-1:-1;;;2580:79:23;;8483:2:27;2580:79:23::1;::::0;::::1;8465:21:27::0;8522:2;8502:18;;;8495:30;8561:27;8541:18;;;8534:55;8606:18;;2580:79:23::1;8281:349:27::0;2580:79:23::1;2732:32;::::0;;;:16:::1;:32;::::0;;;;;::::1;;2724:65;;;::::0;-1:-1:-1;;;2724:65:23;;8837:2:27;2724:65:23::1;::::0;::::1;8819:21:27::0;8876:2;8856:18;;;8849:30;-1:-1:-1;;;8895:18:27;;;8888:50;8955:18;;2724:65:23::1;8635:344:27::0;2724:65:23::1;2854:41;::::0;-1:-1:-1;;;2854:41:23;;::::1;::::0;::::1;5272:25:27::0;;;2854:13:23::1;-1:-1:-1::0;;;;;2854:29:23::1;::::0;::::1;::::0;5245:18:27;;2854:41:23::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;2950:31:23::1;::::0;;;:15:::1;:31;::::0;;;;;;:38;;-1:-1:-1;;2950:38:23::1;2984:4;2950:38;::::0;;3012:68;3029:10;;-1:-1:-1;3012:68:23::1;::::0;::::1;::::0;2966:14;;3057:10;;3069::::1;::::0;3012:68:::1;:::i;:::-;;;;;;;;3134:26;3149:10;3134:14;:26::i;:::-;2061:1106;;2542:20:16::0;1857:1;3068:21;;2888:208;2542:20;1943:1224:23;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4596:175:23:-;4660:48;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4660:48:23;4727:37;;-1:-1:-1;;;4727:37:23;;;;;5272:25:27;;;4727:13:23;-1:-1:-1;;;;;4727:25:23;;;;5245:18:27;;4727:37:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4727:37:23;;;;;;;;;;;;:::i;:::-;4720:44;4596:175;-1:-1:-1;;4596:175:23:o;1362:407::-;1531:13:0;:11;:13::i;:::-;1453:14:23;1445:72:::1;;;::::0;-1:-1:-1;;;1445:72:23;;9577:2:27;1445:72:23::1;::::0;::::1;9559:21:27::0;9616:2;9596:18;;;9589:30;9655:33;9635:18;;;9628:61;9706:18;;1445:72:23::1;9375:355:27::0;1445:72:23::1;1536:31;::::0;;;:15:::1;:31;::::0;;;;;::::1;;1535:32;1527:68;;;::::0;-1:-1:-1;;;1527:68:23;;9937:2:27;1527:68:23::1;::::0;::::1;9919:21:27::0;9976:2;9956:18;;;9949:30;10015:25;9995:18;;;9988:53;10058:18;;1527:68:23::1;9735:347:27::0;1527:68:23::1;1643:32;::::0;;;:16:::1;:32;::::0;;;;;;:39;;-1:-1:-1;;1643:39:23::1;1678:4;1643:39;::::0;;1706:56;1660:14;;1706:56:::1;::::0;::::1;::::0;1746:15:::1;5272:25:27::0;;5260:2;5245:18;;5126:177;1706:56:23::1;;;;;;;;1362:407:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2240:51:27::0;2213:18;;2672:31:0::1;2094:203:27::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2575:307:16:-;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:16;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;3301:804:23:-;4072:26;4087:10;4072:26;;;;;;:::i;:::-;;;;;;;;3301:804;:::o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:14;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:14;1901:40:0;;;2240:51:27;2213:18;;1901:40:0;2094:203:27;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:127:27:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:255;218:2;212:9;260:6;248:19;;297:18;282:34;;318:22;;;279:62;276:88;;;344:18;;:::i;:::-;380:2;373:22;146:255;:::o;406:275::-;477:2;471:9;542:2;523:13;;-1:-1:-1;;519:27:27;507:40;;577:18;562:34;;598:22;;;559:62;556:88;;;624:18;;:::i;:::-;660:2;653:22;406:275;;-1:-1:-1;406:275:27:o;686:186::-;734:4;767:18;759:6;756:30;753:56;;;789:18;;:::i;:::-;-1:-1:-1;855:2:27;834:15;-1:-1:-1;;830:29:27;861:4;826:40;;686:186::o;877:739::-;954:6;962;1015:2;1003:9;994:7;990:23;986:32;983:52;;;1031:1;1028;1021:12;983:52;1067:9;1054:23;1044:33;;1128:2;1117:9;1113:18;1100:32;1155:18;1147:6;1144:30;1141:50;;;1187:1;1184;1177:12;1141:50;1210:22;;1263:4;1255:13;;1251:27;-1:-1:-1;1241:55:27;;1292:1;1289;1282:12;1241:55;1328:2;1315:16;1353:48;1369:31;1397:2;1369:31;:::i;:::-;1353:48;:::i;:::-;1424:2;1417:5;1410:17;1464:7;1459:2;1454;1450;1446:11;1442:20;1439:33;1436:53;;;1485:1;1482;1475:12;1436:53;1540:2;1535;1531;1527:11;1522:2;1515:5;1511:14;1498:45;1584:1;1579:2;1574;1567:5;1563:14;1559:23;1552:34;1605:5;1595:15;;;;;877:739;;;;;:::o;1621:180::-;1680:6;1733:2;1721:9;1712:7;1708:23;1704:32;1701:52;;;1749:1;1746;1739:12;1701:52;-1:-1:-1;1772:23:27;;1621:180;-1:-1:-1;1621:180:27:o;2487:250::-;2572:1;2582:113;2596:6;2593:1;2590:13;2582:113;;;2672:11;;;2666:18;2653:11;;;2646:39;2618:2;2611:10;2582:113;;;-1:-1:-1;;2729:1:27;2711:16;;2704:27;2487:250::o;2742:271::-;2784:3;2822:5;2816:12;2849:6;2844:3;2837:19;2865:76;2934:6;2927:4;2922:3;2918:14;2911:4;2904:5;2900:16;2865:76;:::i;:::-;2995:2;2974:15;-1:-1:-1;;2970:29:27;2961:39;;;;3002:4;2957:50;;2742:271;-1:-1:-1;;2742:271:27:o;3018:1216::-;3199:2;3188:9;3181:21;3244:6;3238:13;3233:2;3222:9;3218:18;3211:41;3162:4;3299:2;3291:6;3287:15;3281:22;3322:6;3364:2;3359;3348:9;3344:18;3337:30;3390:52;3437:3;3426:9;3422:19;3408:12;3390:52;:::i;:::-;3376:66;;3491:2;3483:6;3479:15;3473:22;3563:2;3559:7;3547:9;3539:6;3535:22;3531:36;3526:2;3515:9;3511:18;3504:64;3591:41;3625:6;3609:14;3591:41;:::i;:::-;3577:55;;;3687:2;3679:6;3675:15;3669:22;3663:3;3652:9;3648:19;3641:51;3747:3;3739:6;3735:16;3729:23;3723:3;3712:9;3708:19;3701:52;3808:3;3800:6;3796:16;3790:23;3784:3;3773:9;3769:19;3762:52;3869:3;3861:6;3857:16;3851:23;3845:3;3834:9;3830:19;3823:52;3924:3;3916:6;3912:16;3906:23;3948:3;3960:51;4007:2;3996:9;3992:18;3976:14;1876:13;1869:21;1857:34;;1806:91;3960:51;4048:15;;4042:22;;-1:-1:-1;4083:3:27;4095:51;4127:18;;;4042:22;1876:13;1869:21;1857:34;;1806:91;4095:51;4188:15;;;;4182:22;4162:18;;4155:50;;;;-1:-1:-1;4222:6:27;3018:1216;-1:-1:-1;3018:1216:27:o;4479:286::-;4538:6;4591:2;4579:9;4570:7;4566:23;4562:32;4559:52;;;4607:1;4604;4597:12;4559:52;4633:23;;-1:-1:-1;;;;;4685:31:27;;4675:42;;4665:70;;4731:1;4728;4721:12;4665:70;4754:5;4479:286;-1:-1:-1;;;4479:286:27:o;5308:442::-;5362:5;5415:3;5408:4;5400:6;5396:17;5392:27;5382:55;;5433:1;5430;5423:12;5382:55;5462:6;5456:13;5493:48;5509:31;5537:2;5509:31;:::i;5493:48::-;5566:2;5557:7;5550:19;5612:3;5605:4;5600:2;5592:6;5588:15;5584:26;5581:35;5578:55;;;5629:1;5626;5619:12;5578:55;5642:77;5716:2;5709:4;5700:7;5696:18;5689:4;5681:6;5677:17;5642:77;:::i;:::-;5737:7;5308:442;-1:-1:-1;;;;5308:442:27:o;5755:164::-;5831:13;;5880;;5873:21;5863:32;;5853:60;;5909:1;5906;5899:12;5853:60;5755:164;;;:::o;5924:1299::-;6020:6;6073:2;6061:9;6052:7;6048:23;6044:32;6041:52;;;6089:1;6086;6079:12;6041:52;6122:9;6116:16;6151:18;6192:2;6184:6;6181:14;6178:34;;;6208:1;6205;6198:12;6178:34;6231:22;;;;6287:6;6269:16;;;6265:29;6262:49;;;6307:1;6304;6297:12;6262:49;6333:22;;:::i;:::-;6384:2;6378:9;6371:5;6364:24;6427:2;6423;6419:11;6413:18;6456:2;6446:8;6443:16;6440:36;;;6472:1;6469;6462:12;6440:36;6508:56;6556:7;6545:8;6541:2;6537:17;6508:56;:::i;:::-;6503:2;6496:5;6492:14;6485:80;;6604:2;6600;6596:11;6590:18;6633:2;6623:8;6620:16;6617:36;;;6649:1;6646;6639:12;6617:36;6685:56;6733:7;6722:8;6718:2;6714:17;6685:56;:::i;:::-;6680:2;6673:5;6669:14;6662:80;;6788:2;6784;6780:11;6774:18;6769:2;6762:5;6758:14;6751:42;6840:3;6836:2;6832:12;6826:19;6820:3;6813:5;6809:15;6802:44;6893:3;6889:2;6885:12;6879:19;6873:3;6866:5;6862:15;6855:44;6946:3;6942:2;6938:12;6932:19;6926:3;6919:5;6915:15;6908:44;6985:40;7020:3;7016:2;7012:12;6985:40;:::i;:::-;6979:3;6972:5;6968:15;6961:65;7045:3;7035:13;;7080:39;7115:2;7111;7107:11;7080:39;:::i;:::-;7064:14;;;7057:63;;;;7139:3;7180:11;;;7174:18;7158:14;;;7151:42;;;;7068:5;5924:1299;-1:-1:-1;;;5924:1299:27:o;8984:386::-;9187:6;9176:9;9169:25;9230:2;9225;9214:9;9210:18;9203:30;9150:4;9250:45;9291:2;9280:9;9276:18;9268:6;9250:45;:::i;:::-;9242:53;;9360:1;9356;9351:3;9347:11;9343:19;9335:6;9331:32;9326:2;9315:9;9311:18;9304:60;8984:386;;;;;;:::o;10087:218::-;10234:2;10223:9;10216:21;10197:4;10254:45;10295:2;10284:9;10280:18;10272:6;10254:45;:::i"},"methodIdentifiers":{"commitActionDataHash(bytes32)":"ccaa4160","committedActions(bytes32)":"236a0579","executeIfAuthorized(uint256,bytes)":"0fc561b7","executedActions(bytes32)":"3b1c57cb","getProposal(uint256)":"c7f758a8","isActionExecuted(bytes32)":"21c49e39","owner()":"8da5cb5b","renounceOwnership()":"715018a6","rootPublisher()":"cf43a27a","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rootPublisher\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"actionDataHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ActionDataHashCommitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"actionData\",\"type\":\"bytes\"}],\"name\":\"ActionExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"actionDataHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"actionData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionDataHash\",\"type\":\"bytes32\"}],\"name\":\"commitActionDataHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"committedActions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"actionData\",\"type\":\"bytes\"}],\"name\":\"executeIfAuthorized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"executedActions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"actionData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"actionDataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"snapshotBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeRateSnapshot\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"votingPowerRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"rootPublished\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernanceRootPublisher.Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionDataHash\",\"type\":\"bytes32\"}],\"name\":\"isActionExecuted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rootPublisher\",\"outputs\":[{\"internalType\":\"contract GovernanceRootPublisher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Executes governance proposals on Chain A after cross-chain verification Handles proposal execution with action data hash verification\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"commitActionDataHash(bytes32)\":{\"details\":\"Commit action data hash for execution\",\"params\":{\"actionDataHash\":\"Hash of the action data to execute\"}},\"executeIfAuthorized(uint256,bytes)\":{\"details\":\"Execute a proposal if authorized\",\"params\":{\"actionData\":\"Action data to execute\",\"proposalId\":\"ID of the proposal to execute\"}},\"getProposal(uint256)\":{\"details\":\"Get proposal details from root publisher\",\"params\":{\"proposalId\":\"ID of the proposal\"},\"returns\":{\"proposal\":\"Proposal struct\"}},\"isActionExecuted(bytes32)\":{\"details\":\"Check if an action has been executed\",\"params\":{\"actionDataHash\":\"Hash of the action data\"},\"returns\":{\"executed\":\"True if action has been executed\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"GovernanceExecutor\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GovernanceExecutor.sol\":\"GovernanceExecutor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/GovernanceExecutor.sol\":{\"keccak256\":\"0x9c771180f4def75a3dfa4ee133b830bda580348ff4e1d32c835f8bd7f4b3d403\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87c8b3e5ab388d90dc8e03dfccbb65a3382e4d70c8d8e86b7f4f746488f43680\",\"dweb:/ipfs/QmQVaWhVDKMcWcSrN1rFdpRn7PugynyzZBjvH4sc9Tmpuw\"]},\"contracts/GovernanceRootPublisher.sol\":{\"keccak256\":\"0x503bc69bf3bc0e7654e2df3ce0fd88abccc87c77ff2ace69e4eb2c5e077832b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://726384e032777624f20d6c58a566f22abfb0c09b5e0866f26c2bbec0a65dad51\",\"dweb:/ipfs/QmYLXDptQRpZPGnzWUEffntnHonBiXQSeaoMrp3CoyFxkB\"]},\"contracts/LiquidStakingVault.sol\":{\"keccak256\":\"0x3c2944741fb3047d2783287e7c95b026523f333089a8b6ca2178788c0d5e91d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78457c25656d267706a5a430b4db742c53b1d3c8b01a2df0a149584cb1f7458e\",\"dweb:/ipfs/QmYrpPM6s8z83mjV9GB7P8gqX56sNabxsPwJyQGpSNHNoQ\"]},\"contracts/WithdrawalNFT.sol\":{\"keccak256\":\"0x45ee217cf8ca1652f79774ffce52c37a55200d1313503de9aeed62e14f7f8058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f5a6d2bdb7d63b79308711271e4c894d6a78766f2dbbd939836515d8c19c289\",\"dweb:/ipfs/QmVN2AidKgsRmfPpfaBVNkAVTEKU5LT8Sw6i3j4Mc8xL96\"]}},\"version\":1}"}},"contracts/GovernanceRootPublisher.sol":{"GovernanceRootPublisher":{"abi":[{"inputs":[{"internalType":"address","name":"_vault","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"},{"indexed":false,"internalType":"bytes","name":"actionData","type":"bytes"},{"indexed":false,"internalType":"bytes32","name":"actionDataHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"snapshotBlock","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"exchangeRateSnapshot","type":"uint256"}],"name":"ProposalCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"actionData","type":"bytes"}],"name":"ProposalExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"votingPowerRoot","type":"bytes32"}],"name":"VotingPowerRootPublished","type":"event"},{"inputs":[{"internalType":"string","name":"description","type":"string"},{"internalType":"bytes","name":"actionData","type":"bytes"}],"name":"createProposal","outputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"executeProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"getProposal","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"bytes","name":"actionData","type":"bytes"},{"internalType":"bytes32","name":"actionDataHash","type":"bytes32"},{"internalType":"uint256","name":"snapshotBlock","type":"uint256"},{"internalType":"uint256","name":"exchangeRateSnapshot","type":"uint256"},{"internalType":"bytes32","name":"votingPowerRoot","type":"bytes32"},{"internalType":"bool","name":"rootPublished","type":"bool"},{"internalType":"bool","name":"executed","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct GovernanceRootPublisher.Proposal","name":"proposal","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getVotingPowerAtBlock","outputs":[{"internalType":"uint256","name":"votingPower","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextProposalId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalExists","outputs":[{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"proposals","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"bytes","name":"actionData","type":"bytes"},{"internalType":"bytes32","name":"actionDataHash","type":"bytes32"},{"internalType":"uint256","name":"snapshotBlock","type":"uint256"},{"internalType":"uint256","name":"exchangeRateSnapshot","type":"uint256"},{"internalType":"bytes32","name":"votingPowerRoot","type":"bytes32"},{"internalType":"bool","name":"rootPublished","type":"bool"},{"internalType":"bool","name":"executed","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"bytes32","name":"votingPowerRoot","type":"bytes32"}],"name":"publishVotingPowerRoot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"contract LiquidStakingVault","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8085":{"entryPoint":null,"id":8085,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":117,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":197,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:514:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:27","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:27"},"nodeType":"YulFunctionCall","src":"143:12:27"},"nodeType":"YulExpressionStatement","src":"143:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:27"},"nodeType":"YulFunctionCall","src":"112:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:27"},"nodeType":"YulFunctionCall","src":"108:32:27"},"nodeType":"YulIf","src":"105:52:27"},{"nodeType":"YulVariableDeclaration","src":"166:29:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:27"},"nodeType":"YulFunctionCall","src":"179:16:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:27"},"nodeType":"YulFunctionCall","src":"260:12:27"},"nodeType":"YulExpressionStatement","src":"260:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:27"},"nodeType":"YulFunctionCall","src":"239:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:27"},"nodeType":"YulFunctionCall","src":"235:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:27"},"nodeType":"YulFunctionCall","src":"224:31:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:27"},"nodeType":"YulFunctionCall","src":"214:42:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:27"},"nodeType":"YulFunctionCall","src":"207:50:27"},"nodeType":"YulIf","src":"204:70:27"},{"nodeType":"YulAssignment","src":"283:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:27"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:27","type":""}],"src":"14:290:27"},{"body":{"nodeType":"YulBlock","src":"410:102:27","statements":[{"nodeType":"YulAssignment","src":"420:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"432:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"443:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"428:3:27"},"nodeType":"YulFunctionCall","src":"428:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"420:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"462:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"493:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"498:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"489:3:27"},"nodeType":"YulFunctionCall","src":"489:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"502:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"485:3:27"},"nodeType":"YulFunctionCall","src":"485:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"473:3:27"},"nodeType":"YulFunctionCall","src":"473:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"455:6:27"},"nodeType":"YulFunctionCall","src":"455:51:27"},"nodeType":"YulExpressionStatement","src":"455:51:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"379:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"390:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"401:4:27","type":""}],"src":"309:203:27"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a0604052600160025534801561001557600080fd5b5060405161131a38038061131a833981016040819052610034916100c5565b338061005a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61006381610075565b506001600160a01b03166080526100f5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d757600080fd5b81516001600160a01b03811681146100ee57600080fd5b9392505050565b6080516111fc61011e600039600081816101e20152818161062a015261099401526111fc6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b1461015f578063abebe45c14610184578063c7f758a814610197578063d182fb9e146101b7578063f2fde38b146101ca578063fbfa77cf146101dd57600080fd5b8063013cf08b146100b95780630d61b519146100eb5780631374b22d146101005780632ab09d14146101325780636f17c15614610144578063715018a614610157575b600080fd5b6100cc6100c7366004610c22565b610204565b6040516100e29a99989796959493929190610c81565b60405180910390f35b6100fe6100f9366004610c22565b61036a565b005b61012261010e366004610c22565b600090815260016020526040902054151590565b60405190151581526020016100e2565b6002545b6040519081526020016100e2565b6100fe610152366004610cee565b6104bc565b6100fe6105ed565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100e2565b610136610192366004610d2c565b610601565b6101aa6101a5366004610c22565b61069e565b6040516100e29190610d56565b6101366101c5366004610e8e565b6108c9565b6100fe6101d8366004610f1d565b610b67565b61016c7f000000000000000000000000000000000000000000000000000000000000000081565b60016020819052600091825260409091208054918101805461022590610f38565b80601f016020809104026020016040519081016040528092919081815260200182805461025190610f38565b801561029e5780601f106102735761010080835404028352916020019161029e565b820191906000526020600020905b81548152906001019060200180831161028157829003601f168201915b5050505050908060020180546102b390610f38565b80601f01602080910402602001604051908101604052809291908181526020018280546102df90610f38565b801561032c5780601f106103015761010080835404028352916020019161032c565b820191906000526020600020905b81548152906001019060200180831161030f57829003601f168201915b50505060038401546004850154600586015460068701546007880154600890980154969793969295509093509160ff8082169261010090920416908a565b60008181526001602052604081205490036103a05760405162461bcd60e51b815260040161039790610f72565b60405180910390fd5b60008181526001602052604090206007015460ff166103f65760405162461bcd60e51b8152602060048201526012602482015271149bdbdd081b9bdd081c1d589b1a5cda195960721b6044820152606401610397565b600081815260016020526040902060070154610100900460ff161561045d5760405162461bcd60e51b815260206004820152601960248201527f50726f706f73616c20616c7265616479206578656375746564000000000000006044820152606401610397565b6000818152600160205260409081902060078101805461ff001916610100179055905182917fbadbd87941bb6424ed4aa4719bf01a3319b64480e49f89018c718603239553d2916104b19160020190610fa9565b60405180910390a250565b6104c4610ba5565b60008281526001602052604081205490036104f15760405162461bcd60e51b815260040161039790610f72565b60008281526001602052604090206007015460ff161561054c5760405162461bcd60e51b8152602060048201526016602482015275149bdbdd08185b1c9958591e481c1d589b1a5cda195960521b6044820152606401610397565b8061058f5760405162461bcd60e51b8152602060048201526013602482015272526f6f742063616e6e6f74206265207a65726f60681b6044820152606401610397565b60008281526001602081815260409283902060068101859055600701805460ff1916909217909155905182815283917f4ad88007ea0d4cb3af4700b414825af8fd184bcf884745becc7e3490810304d2910160405180910390a25050565b6105f5610ba5565b6105ff6000610bd2565b565b6040516323fd003d60e21b81526001600160a01b038381166004830152602482018390526000917f000000000000000000000000000000000000000000000000000000000000000090911690638ff400f490604401602060405180830381865afa158015610673573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106979190611034565b9392505050565b6106fe60405180610140016040528060008152602001606081526020016060815260200160008019168152602001600081526020016000815260200160008019168152602001600015158152602001600015158152602001600081525090565b600082815260016020526040812054900361072b5760405162461bcd60e51b815260040161039790610f72565b600082815260016020818152604092839020835161014081019094528054845291820180549184019161075d90610f38565b80601f016020809104026020016040519081016040528092919081815260200182805461078990610f38565b80156107d65780601f106107ab576101008083540402835291602001916107d6565b820191906000526020600020905b8154815290600101906020018083116107b957829003601f168201915b505050505081526020016002820180546107ef90610f38565b80601f016020809104026020016040519081016040528092919081815260200182805461081b90610f38565b80156108685780601f1061083d57610100808354040283529160200191610868565b820191906000526020600020905b81548152906001019060200180831161084b57829003601f168201915b505050918352505060038201546020820152600482015460408201526005820154606082015260068201546080820152600782015460ff808216151560a084015261010090910416151560c082015260089091015460e09091015292915050565b60006108d3610ba5565b60008351116109245760405162461bcd60e51b815260206004820152601b60248201527f4465736372697074696f6e2063616e6e6f7420626520656d70747900000000006044820152606401610397565b60008251116109755760405162461bcd60e51b815260206004820152601b60248201527f416374696f6e20646174612063616e6e6f7420626520656d70747900000000006044820152606401610397565b600280549060006109858361104d565b919050559050600043905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633ba0b9a96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a149190611034565b90506000848051906020012090506040518061014001604052808581526020018781526020018681526020018281526020018481526020018381526020016000801b81526020016000151581526020016000151581526020014281525060016000868152602001908152602001600020600082015181600001556020820151816001019081610aa391906110c3565b5060408201516002820190610ab890826110c3565b50606082015160038201556080820151600482015560a0820151600582015560c0820151600682015560e08201516007820180546101008086015115150261ff00199315159390931661ffff19909116179190911790556101209091015160089091015560405184907f59da9de999ff61b9b811e412df8f25ff32770a66ae28bce18473efaa6ec2bbeb90610b569089908990869089908990611183565b60405180910390a250505092915050565b610b6f610ba5565b6001600160a01b038116610b9957604051631e4fbdf760e01b815260006004820152602401610397565b610ba281610bd2565b50565b6000546001600160a01b031633146105ff5760405163118cdaa760e01b8152336004820152602401610397565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610c3457600080fd5b5035919050565b6000815180845260005b81811015610c6157602081850181015186830182015201610c45565b506000602082860101526020601f19601f83011685010191505092915050565b60006101408c8352806020840152610c9b8184018d610c3b565b90508281036040840152610caf818c610c3b565b606084019a909a525050608081019690965260a086019490945260c0850192909252151560e08401521515610100830152610120909101529392505050565b60008060408385031215610d0157600080fd5b50508035926020909101359150565b80356001600160a01b0381168114610d2757600080fd5b919050565b60008060408385031215610d3f57600080fd5b610d4883610d10565b946020939093013593505050565b602081528151602082015260006020830151610140806040850152610d7f610160850183610c3b565b91506040850151601f19858403016060860152610d9c8382610c3b565b92505060608501516080850152608085015160a085015260a085015160c085015260c085015160e085015260e0850151610100610ddc8187018315159052565b8601519050610120610df18682018315159052565b959095015193019290925250919050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115610e3357610e33610e02565b604051601f8501601f19908116603f01168101908282118183101715610e5b57610e5b610e02565b81604052809350858152868686011115610e7457600080fd5b858560208301376000602087830101525050509392505050565b60008060408385031215610ea157600080fd5b823567ffffffffffffffff80821115610eb957600080fd5b818501915085601f830112610ecd57600080fd5b610edc86833560208501610e18565b93506020850135915080821115610ef257600080fd5b508301601f81018513610f0457600080fd5b610f1385823560208401610e18565b9150509250929050565b600060208284031215610f2f57600080fd5b61069782610d10565b600181811c90821680610f4c57607f821691505b602082108103610f6c57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526017908201527f50726f706f73616c20646f6573206e6f74206578697374000000000000000000604082015260600190565b6000602080835260008454610fbd81610f38565b80848701526040600180841660008114610fde5760018114610ff857611026565b60ff1985168984015283151560051b890183019550611026565b896000528660002060005b8581101561101e5781548b8201860152908301908801611003565b8a0184019650505b509398975050505050505050565b60006020828403121561104657600080fd5b5051919050565b60006001820161106d57634e487b7160e01b600052601160045260246000fd5b5060010190565b601f8211156110be57600081815260208120601f850160051c8101602086101561109b5750805b601f850160051c820191505b818110156110ba578281556001016110a7565b5050505b505050565b815167ffffffffffffffff8111156110dd576110dd610e02565b6110f1816110eb8454610f38565b84611074565b602080601f831160018114611126576000841561110e5750858301515b600019600386901b1c1916600185901b1785556110ba565b600085815260208120601f198616915b8281101561115557888601518255948401946001909101908401611136565b50858210156111735787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60a08152600061119660a0830188610c3b565b82810360208401526111a88188610c3b565b6040840196909652505060608101929092526080909101529291505056fea2646970667358221220f6fae53fe0aeb5c8ac19413005ef6412dae6bb5ff3d3e9d5161befbd273e0fc864736f6c63430008140033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x131A CODESIZE SUB DUP1 PUSH2 0x131A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x34 SWAP2 PUSH2 0xC5 JUMP JUMPDEST CALLER DUP1 PUSH2 0x5A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x63 DUP2 PUSH2 0x75 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0xF5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x11FC PUSH2 0x11E PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x1E2 ADD MSTORE DUP2 DUP2 PUSH2 0x62A ADD MSTORE PUSH2 0x994 ADD MSTORE PUSH2 0x11FC PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xABEBE45C EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xC7F758A8 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xD182FB9E EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xD61B519 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x1374B22D EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x2AB09D14 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x6F17C156 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x157 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0xC22 JUMP JUMPDEST PUSH2 0x204 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFE PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0xC22 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x122 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH2 0xFE PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2C JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST PUSH2 0x1AA PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC22 JUMP JUMPDEST PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xE8E JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x1D8 CALLDATASIZE PUSH1 0x4 PUSH2 0xF1D JUMP JUMPDEST PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x16C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD DUP1 SLOAD PUSH2 0x225 SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x251 SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x29E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x273 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x29E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x281 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2B3 SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2DF SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x32C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x301 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x32C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 SWAP1 SWAP9 ADD SLOAD SWAP7 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP3 PUSH2 0x100 SWAP1 SWAP3 DIV AND SWAP1 DUP11 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x3A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x397 SWAP1 PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xFF AND PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x149BDBDD081B9BDD081C1D589B1A5CDA1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x397 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x45D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20616C726561647920657865637574656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x397 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x7 DUP2 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE SWAP1 MLOAD DUP3 SWAP2 PUSH32 0xBADBD87941BB6424ED4AA4719BF01A3319B64480E49F89018C718603239553D2 SWAP2 PUSH2 0x4B1 SWAP2 PUSH1 0x2 ADD SWAP1 PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x4C4 PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x397 SWAP1 PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x149BDBDD08185B1C9958591E481C1D589B1A5CDA1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x397 JUMP JUMPDEST DUP1 PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x526F6F742063616E6E6F74206265207A65726F PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x397 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD DUP6 SWAP1 SSTORE PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP3 DUP2 MSTORE DUP4 SWAP2 PUSH32 0x4AD88007EA0D4CB3AF4700B414825AF8FD184BCF884745BECC7E3490810304D2 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x5F5 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x5FF PUSH1 0x0 PUSH2 0xBD2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23FD003D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x8FF400F4 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x673 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x697 SWAP2 SWAP1 PUSH2 0x1034 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6FE PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x72B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x397 SWAP1 PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP5 MSTORE DUP1 SLOAD DUP5 MSTORE SWAP2 DUP3 ADD DUP1 SLOAD SWAP2 DUP5 ADD SWAP2 PUSH2 0x75D SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x789 SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x7EF SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x81B SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x868 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x83D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x868 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x84B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x8 SWAP1 SWAP2 ADD SLOAD PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D3 PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465736372697074696F6E2063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x397 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0x975 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416374696F6E20646174612063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x397 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x985 DUP4 PUSH2 0x104D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 NUMBER SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3BA0B9A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA14 SWAP2 SWAP1 PUSH2 0x1034 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 SHL DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xAA3 SWAP2 SWAP1 PUSH2 0x10C3 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0xAB8 SWAP1 DUP3 PUSH2 0x10C3 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x7 DUP3 ADD DUP1 SLOAD PUSH2 0x100 DUP1 DUP7 ADD MLOAD ISZERO ISZERO MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x120 SWAP1 SWAP2 ADD MLOAD PUSH1 0x8 SWAP1 SWAP2 ADD SSTORE PUSH1 0x40 MLOAD DUP5 SWAP1 PUSH32 0x59DA9DE999FF61B9B811E412DF8F25FF32770A66AE28BCE18473EFAA6EC2BBEB SWAP1 PUSH2 0xB56 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP7 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB6F PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB99 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x397 JUMP JUMPDEST PUSH2 0xBA2 DUP2 PUSH2 0xBD2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x397 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC61 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC45 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP13 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xC9B DUP2 DUP5 ADD DUP14 PUSH2 0xC3B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xCAF DUP2 DUP13 PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP11 SWAP1 SWAP11 MSTORE POP POP PUSH1 0x80 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xA0 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xC0 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD48 DUP4 PUSH2 0xD10 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x140 DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xD7F PUSH2 0x160 DUP6 ADD DUP4 PUSH2 0xC3B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x1F NOT DUP6 DUP5 SUB ADD PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0xD9C DUP4 DUP3 PUSH2 0xC3B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xE0 DUP6 ADD MLOAD PUSH2 0x100 PUSH2 0xDDC DUP2 DUP8 ADD DUP4 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST DUP7 ADD MLOAD SWAP1 POP PUSH2 0x120 PUSH2 0xDF1 DUP7 DUP3 ADD DUP4 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST SWAP6 SWAP1 SWAP6 ADD MLOAD SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0xE33 JUMPI PUSH2 0xE33 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xE5B JUMPI PUSH2 0xE5B PUSH2 0xE02 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0xE74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xECD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEDC DUP7 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0xE18 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xEF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0xF04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF13 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0xE18 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x697 DUP3 PUSH2 0xD10 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF4C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF6C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20646F6573206E6F74206578697374000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE PUSH1 0x0 DUP5 SLOAD PUSH2 0xFBD DUP2 PUSH2 0xF38 JUMP JUMPDEST DUP1 DUP5 DUP8 ADD MSTORE PUSH1 0x40 PUSH1 0x1 DUP1 DUP5 AND PUSH1 0x0 DUP2 EQ PUSH2 0xFDE JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xFF8 JUMPI PUSH2 0x1026 JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP10 DUP5 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x5 SHL DUP10 ADD DUP4 ADD SWAP6 POP PUSH2 0x1026 JUMP JUMPDEST DUP10 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x101E JUMPI DUP2 SLOAD DUP12 DUP3 ADD DUP7 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP9 ADD PUSH2 0x1003 JUMP JUMPDEST DUP11 ADD DUP5 ADD SWAP7 POP POP JUMPDEST POP SWAP4 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1046 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x106D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x10BE JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x109B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10BA JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x10A7 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10DD JUMPI PUSH2 0x10DD PUSH2 0xE02 JUMP JUMPDEST PUSH2 0x10F1 DUP2 PUSH2 0x10EB DUP5 SLOAD PUSH2 0xF38 JUMP JUMPDEST DUP5 PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1126 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x110E JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1155 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1136 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1173 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1196 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0xC3B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11A8 DUP2 DUP9 PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 STATICCALL 0xE5 EXTCODEHASH 0xE0 0xAE 0xB5 0xC8 0xAC NOT COINBASE ADDRESS SDIV 0xEF PUSH5 0x12DAE6BB5F RETURN 0xD3 0xE9 0xD5 AND SHL 0xEF 0xBD 0x27 RETURNDATACOPY 0xF 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"353:5465:24:-:0;;;893:1;859:35;;1462:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1498:10;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;455:51:27;428:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;1520:34:24::1;;::::0;353:5465;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:27:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:27;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:27:o;309:203::-;353:5465:24;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":2981,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_2666":{"entryPoint":null,"id":2666,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":3026,"id":146,"parameterSlots":1,"returnSlots":0},"@createProposal_8169":{"entryPoint":2249,"id":8169,"parameterSlots":2,"returnSlots":1},"@executeProposal_8277":{"entryPoint":874,"id":8277,"parameterSlots":1,"returnSlots":0},"@getProposal_8301":{"entryPoint":1694,"id":8301,"parameterSlots":1,"returnSlots":1},"@getVotingPowerAtBlock_8318":{"entryPoint":1537,"id":8318,"parameterSlots":2,"returnSlots":1},"@nextProposalId_8327":{"entryPoint":null,"id":8327,"parameterSlots":0,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@proposalExists_8343":{"entryPoint":null,"id":8343,"parameterSlots":1,"returnSlots":1},"@proposals_8037":{"entryPoint":516,"id":8037,"parameterSlots":0,"returnSlots":0},"@publishVotingPowerRoot_8228":{"entryPoint":1212,"id":8228,"parameterSlots":2,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":1517,"id":98,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":2919,"id":126,"parameterSlots":1,"returnSlots":0},"@vault_8043":{"entryPoint":null,"id":8043,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":3344,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":3608,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3869,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3372,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_bytes_memory_ptr":{"entryPoint":3726,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":4148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_bytes32":{"entryPoint":3310,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":3131,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_storage__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4009,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_LiquidStakingVault_$8906__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_bytes_memory_ptr_t_bytes32_t_uint256_t_uint256__to_t_string_memory_ptr_t_bytes_memory_ptr_t_bytes32_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4483,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_stringliteral_13390cb6ac8c0ea9ab608030d21b8caec76504526f6045e2233c880c3b675edd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5136780377cc231258678d13fe3ea7b31bc96a5f8a36a4c81f29820551bb6214__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_625465716d2bbcf60dea1ef1dab79961ff17807d3e309a8447a933159e425ee8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7fae8c25cd6c6e20d8f58331d2aa29206ef64721d3145104964788d98a7c0737__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e62a544e5aebc4f7865ef71973090f3036faa05a5f7be3ea3605ab15dc232bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3954,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f51d8a2ee1ed415d9e0a7f47c891529969ae72513581188f4c1a72c1e5509376__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Proposal_$8032_memory_ptr__to_t_struct$_Proposal_$8032_memory_ptr__fromStack_reversed":{"entryPoint":3414,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_bytes_memory_ptr_t_bytes32_t_uint256_t_uint256_t_bytes32_t_bool_t_bool_t_uint256__to_t_uint256_t_string_memory_ptr_t_bytes_memory_ptr_t_bytes32_t_uint256_t_uint256_t_bytes32_t_bool_t_bool_t_uint256__fromStack_reversed":{"entryPoint":3201,"id":null,"parameterSlots":11,"returnSlots":1},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":4212,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":4291,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3896,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":4173,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":3586,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15081:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:110:27","statements":[{"body":{"nodeType":"YulBlock","src":"130:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"139:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"142:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:27"},"nodeType":"YulFunctionCall","src":"132:12:27"},"nodeType":"YulExpressionStatement","src":"132:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:27"},"nodeType":"YulFunctionCall","src":"101:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:27"},"nodeType":"YulFunctionCall","src":"97:32:27"},"nodeType":"YulIf","src":"94:52:27"},{"nodeType":"YulAssignment","src":"155:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"178:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"165:12:27"},"nodeType":"YulFunctionCall","src":"165:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"155:6:27"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:27","type":""}],"src":"14:180:27"},{"body":{"nodeType":"YulBlock","src":"249:373:27","statements":[{"nodeType":"YulVariableDeclaration","src":"259:26:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"279:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"273:5:27"},"nodeType":"YulFunctionCall","src":"273:12:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"263:6:27","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"301:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"306:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"294:6:27"},"nodeType":"YulFunctionCall","src":"294:19:27"},"nodeType":"YulExpressionStatement","src":"294:19:27"},{"nodeType":"YulVariableDeclaration","src":"322:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"331:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"326:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"393:110:27","statements":[{"nodeType":"YulVariableDeclaration","src":"407:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"417:4:27","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"411:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"449:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"454:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"445:3:27"},"nodeType":"YulFunctionCall","src":"445:11:27"},{"name":"_1","nodeType":"YulIdentifier","src":"458:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"441:3:27"},"nodeType":"YulFunctionCall","src":"441:20:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"477:5:27"},{"name":"i","nodeType":"YulIdentifier","src":"484:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"473:3:27"},"nodeType":"YulFunctionCall","src":"473:13:27"},{"name":"_1","nodeType":"YulIdentifier","src":"488:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"469:3:27"},"nodeType":"YulFunctionCall","src":"469:22:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"463:5:27"},"nodeType":"YulFunctionCall","src":"463:29:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"434:6:27"},"nodeType":"YulFunctionCall","src":"434:59:27"},"nodeType":"YulExpressionStatement","src":"434:59:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"352:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"355:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"349:2:27"},"nodeType":"YulFunctionCall","src":"349:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"363:21:27","statements":[{"nodeType":"YulAssignment","src":"365:17:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"374:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"377:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"370:3:27"},"nodeType":"YulFunctionCall","src":"370:12:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"365:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"345:3:27","statements":[]},"src":"341:162:27"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"527:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"532:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"523:3:27"},"nodeType":"YulFunctionCall","src":"523:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"541:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"519:3:27"},"nodeType":"YulFunctionCall","src":"519:27:27"},{"kind":"number","nodeType":"YulLiteral","src":"548:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"512:6:27"},"nodeType":"YulFunctionCall","src":"512:38:27"},"nodeType":"YulExpressionStatement","src":"512:38:27"},{"nodeType":"YulAssignment","src":"559:57:27","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"574:3:27"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"587:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"595:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"583:3:27"},"nodeType":"YulFunctionCall","src":"583:15:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"600:3:27"},"nodeType":"YulFunctionCall","src":"600:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"579:3:27"},"nodeType":"YulFunctionCall","src":"579:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"570:3:27"},"nodeType":"YulFunctionCall","src":"570:39:27"},{"kind":"number","nodeType":"YulLiteral","src":"611:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"566:3:27"},"nodeType":"YulFunctionCall","src":"566:50:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"559:3:27"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"226:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"233:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"241:3:27","type":""}],"src":"199:423:27"},{"body":{"nodeType":"YulBlock","src":"668:50:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"685:3:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"704:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"697:6:27"},"nodeType":"YulFunctionCall","src":"697:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"690:6:27"},"nodeType":"YulFunctionCall","src":"690:21:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"678:6:27"},"nodeType":"YulFunctionCall","src":"678:34:27"},"nodeType":"YulExpressionStatement","src":"678:34:27"}]},"name":"abi_encode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"652:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"659:3:27","type":""}],"src":"627:91:27"},{"body":{"nodeType":"YulBlock","src":"1102:618:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1112:13:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1122:3:27","type":"","value":"320"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1116:2:27","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1141:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"1152:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1134:6:27"},"nodeType":"YulFunctionCall","src":"1134:25:27"},"nodeType":"YulExpressionStatement","src":"1134:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1179:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1190:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1175:3:27"},"nodeType":"YulFunctionCall","src":"1175:18:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1195:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1168:6:27"},"nodeType":"YulFunctionCall","src":"1168:30:27"},"nodeType":"YulExpressionStatement","src":"1168:30:27"},{"nodeType":"YulVariableDeclaration","src":"1207:59:27","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1239:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1251:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1262:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1247:3:27"},"nodeType":"YulFunctionCall","src":"1247:18:27"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1221:17:27"},"nodeType":"YulFunctionCall","src":"1221:45:27"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"1211:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1286:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1297:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1282:3:27"},"nodeType":"YulFunctionCall","src":"1282:18:27"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"1306:6:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1314:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1302:3:27"},"nodeType":"YulFunctionCall","src":"1302:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1275:6:27"},"nodeType":"YulFunctionCall","src":"1275:50:27"},"nodeType":"YulExpressionStatement","src":"1275:50:27"},{"nodeType":"YulAssignment","src":"1334:41:27","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1360:6:27"},{"name":"tail_1","nodeType":"YulIdentifier","src":"1368:6:27"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1342:17:27"},"nodeType":"YulFunctionCall","src":"1342:33:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1334:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1395:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1406:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1391:3:27"},"nodeType":"YulFunctionCall","src":"1391:18:27"},{"name":"value3","nodeType":"YulIdentifier","src":"1411:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1384:6:27"},"nodeType":"YulFunctionCall","src":"1384:34:27"},"nodeType":"YulExpressionStatement","src":"1384:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1438:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1449:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1434:3:27"},"nodeType":"YulFunctionCall","src":"1434:19:27"},{"name":"value4","nodeType":"YulIdentifier","src":"1455:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1427:6:27"},"nodeType":"YulFunctionCall","src":"1427:35:27"},"nodeType":"YulExpressionStatement","src":"1427:35:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1482:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1493:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1478:3:27"},"nodeType":"YulFunctionCall","src":"1478:19:27"},{"name":"value5","nodeType":"YulIdentifier","src":"1499:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1471:6:27"},"nodeType":"YulFunctionCall","src":"1471:35:27"},"nodeType":"YulExpressionStatement","src":"1471:35:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1526:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1537:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1522:3:27"},"nodeType":"YulFunctionCall","src":"1522:19:27"},{"name":"value6","nodeType":"YulIdentifier","src":"1543:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1515:6:27"},"nodeType":"YulFunctionCall","src":"1515:35:27"},"nodeType":"YulExpressionStatement","src":"1515:35:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1570:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1581:3:27","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1566:3:27"},"nodeType":"YulFunctionCall","src":"1566:19:27"},{"arguments":[{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"1601:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1594:6:27"},"nodeType":"YulFunctionCall","src":"1594:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1587:6:27"},"nodeType":"YulFunctionCall","src":"1587:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1559:6:27"},"nodeType":"YulFunctionCall","src":"1559:51:27"},"nodeType":"YulExpressionStatement","src":"1559:51:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1630:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1641:3:27","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1626:3:27"},"nodeType":"YulFunctionCall","src":"1626:19:27"},{"arguments":[{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"1661:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1654:6:27"},"nodeType":"YulFunctionCall","src":"1654:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1647:6:27"},"nodeType":"YulFunctionCall","src":"1647:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1619:6:27"},"nodeType":"YulFunctionCall","src":"1619:51:27"},"nodeType":"YulExpressionStatement","src":"1619:51:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1690:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1701:3:27","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1686:3:27"},"nodeType":"YulFunctionCall","src":"1686:19:27"},{"name":"value9","nodeType":"YulIdentifier","src":"1707:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1679:6:27"},"nodeType":"YulFunctionCall","src":"1679:35:27"},"nodeType":"YulExpressionStatement","src":"1679:35:27"}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_bytes_memory_ptr_t_bytes32_t_uint256_t_uint256_t_bytes32_t_bool_t_bool_t_uint256__to_t_uint256_t_string_memory_ptr_t_bytes_memory_ptr_t_bytes32_t_uint256_t_uint256_t_bytes32_t_bool_t_bool_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"999:9:27","type":""},{"name":"value9","nodeType":"YulTypedName","src":"1010:6:27","type":""},{"name":"value8","nodeType":"YulTypedName","src":"1018:6:27","type":""},{"name":"value7","nodeType":"YulTypedName","src":"1026:6:27","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1034:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1042:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1050:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1058:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1066:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1074:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1082:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1093:4:27","type":""}],"src":"723:997:27"},{"body":{"nodeType":"YulBlock","src":"1820:92:27","statements":[{"nodeType":"YulAssignment","src":"1830:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1842:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1853:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1838:3:27"},"nodeType":"YulFunctionCall","src":"1838:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1830:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1872:9:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1897:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1890:6:27"},"nodeType":"YulFunctionCall","src":"1890:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1883:6:27"},"nodeType":"YulFunctionCall","src":"1883:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1865:6:27"},"nodeType":"YulFunctionCall","src":"1865:41:27"},"nodeType":"YulExpressionStatement","src":"1865:41:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1789:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1800:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1811:4:27","type":""}],"src":"1725:187:27"},{"body":{"nodeType":"YulBlock","src":"2018:76:27","statements":[{"nodeType":"YulAssignment","src":"2028:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2040:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2051:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2036:3:27"},"nodeType":"YulFunctionCall","src":"2036:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2028:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"2081:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2063:6:27"},"nodeType":"YulFunctionCall","src":"2063:25:27"},"nodeType":"YulExpressionStatement","src":"2063:25:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1987:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1998:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2009:4:27","type":""}],"src":"1917:177:27"},{"body":{"nodeType":"YulBlock","src":"2186:161:27","statements":[{"body":{"nodeType":"YulBlock","src":"2232:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2241:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2244:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2234:6:27"},"nodeType":"YulFunctionCall","src":"2234:12:27"},"nodeType":"YulExpressionStatement","src":"2234:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2207:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2216:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2203:3:27"},"nodeType":"YulFunctionCall","src":"2203:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2228:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2199:3:27"},"nodeType":"YulFunctionCall","src":"2199:32:27"},"nodeType":"YulIf","src":"2196:52:27"},{"nodeType":"YulAssignment","src":"2257:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2280:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2267:12:27"},"nodeType":"YulFunctionCall","src":"2267:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2257:6:27"}]},{"nodeType":"YulAssignment","src":"2299:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2326:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2337:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2322:3:27"},"nodeType":"YulFunctionCall","src":"2322:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2309:12:27"},"nodeType":"YulFunctionCall","src":"2309:32:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2299:6:27"}]}]},"name":"abi_decode_tuple_t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2144:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2155:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2167:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2175:6:27","type":""}],"src":"2099:248:27"},{"body":{"nodeType":"YulBlock","src":"2453:102:27","statements":[{"nodeType":"YulAssignment","src":"2463:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2475:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2486:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2471:3:27"},"nodeType":"YulFunctionCall","src":"2471:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2463:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2505:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2520:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2536:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2541:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2532:3:27"},"nodeType":"YulFunctionCall","src":"2532:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"2545:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2528:3:27"},"nodeType":"YulFunctionCall","src":"2528:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2516:3:27"},"nodeType":"YulFunctionCall","src":"2516:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2498:6:27"},"nodeType":"YulFunctionCall","src":"2498:51:27"},"nodeType":"YulExpressionStatement","src":"2498:51:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2422:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2433:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2444:4:27","type":""}],"src":"2352:203:27"},{"body":{"nodeType":"YulBlock","src":"2609:124:27","statements":[{"nodeType":"YulAssignment","src":"2619:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2641:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2628:12:27"},"nodeType":"YulFunctionCall","src":"2628:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2619:5:27"}]},{"body":{"nodeType":"YulBlock","src":"2711:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2720:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2723:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2713:6:27"},"nodeType":"YulFunctionCall","src":"2713:12:27"},"nodeType":"YulExpressionStatement","src":"2713:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2670:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2681:5:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2696:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2701:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2692:3:27"},"nodeType":"YulFunctionCall","src":"2692:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"2705:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2688:3:27"},"nodeType":"YulFunctionCall","src":"2688:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2677:3:27"},"nodeType":"YulFunctionCall","src":"2677:31:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2667:2:27"},"nodeType":"YulFunctionCall","src":"2667:42:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2660:6:27"},"nodeType":"YulFunctionCall","src":"2660:50:27"},"nodeType":"YulIf","src":"2657:70:27"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2588:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2599:5:27","type":""}],"src":"2560:173:27"},{"body":{"nodeType":"YulBlock","src":"2825:167:27","statements":[{"body":{"nodeType":"YulBlock","src":"2871:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2880:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2883:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2873:6:27"},"nodeType":"YulFunctionCall","src":"2873:12:27"},"nodeType":"YulExpressionStatement","src":"2873:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2846:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2855:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2842:3:27"},"nodeType":"YulFunctionCall","src":"2842:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2867:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2838:3:27"},"nodeType":"YulFunctionCall","src":"2838:32:27"},"nodeType":"YulIf","src":"2835:52:27"},{"nodeType":"YulAssignment","src":"2896:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2925:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2906:18:27"},"nodeType":"YulFunctionCall","src":"2906:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2896:6:27"}]},{"nodeType":"YulAssignment","src":"2944:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2971:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2982:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2967:3:27"},"nodeType":"YulFunctionCall","src":"2967:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2954:12:27"},"nodeType":"YulFunctionCall","src":"2954:32:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2944:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2783:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2794:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2806:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2814:6:27","type":""}],"src":"2738:254:27"},{"body":{"nodeType":"YulBlock","src":"3150:1063:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3167:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3178:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3160:6:27"},"nodeType":"YulFunctionCall","src":"3160:21:27"},"nodeType":"YulExpressionStatement","src":"3160:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3201:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3212:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3197:3:27"},"nodeType":"YulFunctionCall","src":"3197:18:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3223:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3217:5:27"},"nodeType":"YulFunctionCall","src":"3217:13:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3190:6:27"},"nodeType":"YulFunctionCall","src":"3190:41:27"},"nodeType":"YulExpressionStatement","src":"3190:41:27"},{"nodeType":"YulVariableDeclaration","src":"3240:42:27","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3270:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3278:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:27"},"nodeType":"YulFunctionCall","src":"3266:15:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:27"},"nodeType":"YulFunctionCall","src":"3260:22:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3244:12:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3291:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3301:6:27","type":"","value":"0x0140"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3295:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3327:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3338:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3323:3:27"},"nodeType":"YulFunctionCall","src":"3323:18:27"},{"name":"_1","nodeType":"YulIdentifier","src":"3343:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3316:6:27"},"nodeType":"YulFunctionCall","src":"3316:30:27"},"nodeType":"YulExpressionStatement","src":"3316:30:27"},{"nodeType":"YulVariableDeclaration","src":"3355:66:27","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3387:12:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3405:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3416:3:27","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3401:3:27"},"nodeType":"YulFunctionCall","src":"3401:19:27"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3369:17:27"},"nodeType":"YulFunctionCall","src":"3369:52:27"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"3359:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3430:44:27","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3462:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3470:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3458:3:27"},"nodeType":"YulFunctionCall","src":"3458:15:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3452:5:27"},"nodeType":"YulFunctionCall","src":"3452:22:27"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"3434:14:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3494:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3505:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3490:3:27"},"nodeType":"YulFunctionCall","src":"3490:18:27"},{"arguments":[{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"3518:6:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3526:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3514:3:27"},"nodeType":"YulFunctionCall","src":"3514:22:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3542:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3538:3:27"},"nodeType":"YulFunctionCall","src":"3538:7:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3510:3:27"},"nodeType":"YulFunctionCall","src":"3510:36:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3483:6:27"},"nodeType":"YulFunctionCall","src":"3483:64:27"},"nodeType":"YulExpressionStatement","src":"3483:64:27"},{"nodeType":"YulVariableDeclaration","src":"3556:55:27","value":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"3588:14:27"},{"name":"tail_1","nodeType":"YulIdentifier","src":"3604:6:27"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3570:17:27"},"nodeType":"YulFunctionCall","src":"3570:41:27"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"3560:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3631:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3642:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3627:3:27"},"nodeType":"YulFunctionCall","src":"3627:19:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3658:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3666:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3654:3:27"},"nodeType":"YulFunctionCall","src":"3654:15:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3648:5:27"},"nodeType":"YulFunctionCall","src":"3648:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3620:6:27"},"nodeType":"YulFunctionCall","src":"3620:51:27"},"nodeType":"YulExpressionStatement","src":"3620:51:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3691:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3702:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3687:3:27"},"nodeType":"YulFunctionCall","src":"3687:19:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3718:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3726:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3714:3:27"},"nodeType":"YulFunctionCall","src":"3714:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3708:5:27"},"nodeType":"YulFunctionCall","src":"3708:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3680:6:27"},"nodeType":"YulFunctionCall","src":"3680:52:27"},"nodeType":"YulExpressionStatement","src":"3680:52:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3752:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3763:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3748:3:27"},"nodeType":"YulFunctionCall","src":"3748:19:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3779:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3787:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3775:3:27"},"nodeType":"YulFunctionCall","src":"3775:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3769:5:27"},"nodeType":"YulFunctionCall","src":"3769:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3741:6:27"},"nodeType":"YulFunctionCall","src":"3741:52:27"},"nodeType":"YulExpressionStatement","src":"3741:52:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3813:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3824:3:27","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3809:3:27"},"nodeType":"YulFunctionCall","src":"3809:19:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3840:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3848:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3836:3:27"},"nodeType":"YulFunctionCall","src":"3836:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3830:5:27"},"nodeType":"YulFunctionCall","src":"3830:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3802:6:27"},"nodeType":"YulFunctionCall","src":"3802:52:27"},"nodeType":"YulExpressionStatement","src":"3802:52:27"},{"nodeType":"YulVariableDeclaration","src":"3863:45:27","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3895:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3903:3:27","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3891:3:27"},"nodeType":"YulFunctionCall","src":"3891:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3885:5:27"},"nodeType":"YulFunctionCall","src":"3885:23:27"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"3867:14:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3917:13:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3927:3:27","type":"","value":"256"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3921:2:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"3955:14:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3975:9:27"},{"name":"_2","nodeType":"YulIdentifier","src":"3986:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3971:3:27"},"nodeType":"YulFunctionCall","src":"3971:18:27"}],"functionName":{"name":"abi_encode_bool","nodeType":"YulIdentifier","src":"3939:15:27"},"nodeType":"YulFunctionCall","src":"3939:51:27"},"nodeType":"YulExpressionStatement","src":"3939:51:27"},{"nodeType":"YulVariableDeclaration","src":"3999:44:27","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4031:6:27"},{"name":"_2","nodeType":"YulIdentifier","src":"4039:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4027:3:27"},"nodeType":"YulFunctionCall","src":"4027:15:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4021:5:27"},"nodeType":"YulFunctionCall","src":"4021:22:27"},"variables":[{"name":"memberValue0_3","nodeType":"YulTypedName","src":"4003:14:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4052:13:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4062:3:27","type":"","value":"288"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"4056:2:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_3","nodeType":"YulIdentifier","src":"4090:14:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:27"},{"name":"_3","nodeType":"YulIdentifier","src":"4121:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:27"},"nodeType":"YulFunctionCall","src":"4106:18:27"}],"functionName":{"name":"abi_encode_bool","nodeType":"YulIdentifier","src":"4074:15:27"},"nodeType":"YulFunctionCall","src":"4074:51:27"},"nodeType":"YulExpressionStatement","src":"4074:51:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4145:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"4156:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4141:3:27"},"nodeType":"YulFunctionCall","src":"4141:18:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4171:6:27"},{"name":"_3","nodeType":"YulIdentifier","src":"4179:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4167:3:27"},"nodeType":"YulFunctionCall","src":"4167:15:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4161:5:27"},"nodeType":"YulFunctionCall","src":"4161:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4134:6:27"},"nodeType":"YulFunctionCall","src":"4134:50:27"},"nodeType":"YulExpressionStatement","src":"4134:50:27"},{"nodeType":"YulAssignment","src":"4193:14:27","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"4201:6:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4193:4:27"}]}]},"name":"abi_encode_tuple_t_struct$_Proposal_$8032_memory_ptr__to_t_struct$_Proposal_$8032_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3119:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3130:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3141:4:27","type":""}],"src":"2997:1216:27"},{"body":{"nodeType":"YulBlock","src":"4250:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4267:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4274:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4279:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4270:3:27"},"nodeType":"YulFunctionCall","src":"4270:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4260:6:27"},"nodeType":"YulFunctionCall","src":"4260:31:27"},"nodeType":"YulExpressionStatement","src":"4260:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4307:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4310:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4300:6:27"},"nodeType":"YulFunctionCall","src":"4300:15:27"},"nodeType":"YulExpressionStatement","src":"4300:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4331:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4334:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4324:6:27"},"nodeType":"YulFunctionCall","src":"4324:15:27"},"nodeType":"YulExpressionStatement","src":"4324:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"4218:127:27"},{"body":{"nodeType":"YulBlock","src":"4425:557:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4435:28:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4445:18:27","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4439:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4490:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4492:16:27"},"nodeType":"YulFunctionCall","src":"4492:18:27"},"nodeType":"YulExpressionStatement","src":"4492:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4478:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"4486:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4475:2:27"},"nodeType":"YulFunctionCall","src":"4475:14:27"},"nodeType":"YulIf","src":"4472:40:27"},{"nodeType":"YulVariableDeclaration","src":"4521:17:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4535:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4531:3:27"},"nodeType":"YulFunctionCall","src":"4531:7:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4525:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4547:23:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4567:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4561:5:27"},"nodeType":"YulFunctionCall","src":"4561:9:27"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4551:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4579:73:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4601:6:27"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4625:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4633:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4621:3:27"},"nodeType":"YulFunctionCall","src":"4621:15:27"},{"name":"_2","nodeType":"YulIdentifier","src":"4638:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4617:3:27"},"nodeType":"YulFunctionCall","src":"4617:24:27"},{"kind":"number","nodeType":"YulLiteral","src":"4643:2:27","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4613:3:27"},"nodeType":"YulFunctionCall","src":"4613:33:27"},{"name":"_2","nodeType":"YulIdentifier","src":"4648:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4609:3:27"},"nodeType":"YulFunctionCall","src":"4609:42:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4597:3:27"},"nodeType":"YulFunctionCall","src":"4597:55:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4583:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4711:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4713:16:27"},"nodeType":"YulFunctionCall","src":"4713:18:27"},"nodeType":"YulExpressionStatement","src":"4713:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4670:10:27"},{"name":"_1","nodeType":"YulIdentifier","src":"4682:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4667:2:27"},"nodeType":"YulFunctionCall","src":"4667:18:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4690:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4702:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4687:2:27"},"nodeType":"YulFunctionCall","src":"4687:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4664:2:27"},"nodeType":"YulFunctionCall","src":"4664:46:27"},"nodeType":"YulIf","src":"4661:72:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4749:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4753:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4742:6:27"},"nodeType":"YulFunctionCall","src":"4742:22:27"},"nodeType":"YulExpressionStatement","src":"4742:22:27"},{"nodeType":"YulAssignment","src":"4773:15:27","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"4782:6:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4773:5:27"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4804:6:27"},{"name":"length","nodeType":"YulIdentifier","src":"4812:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4797:6:27"},"nodeType":"YulFunctionCall","src":"4797:22:27"},"nodeType":"YulExpressionStatement","src":"4797:22:27"},{"body":{"nodeType":"YulBlock","src":"4857:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4866:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4869:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4859:6:27"},"nodeType":"YulFunctionCall","src":"4859:12:27"},"nodeType":"YulExpressionStatement","src":"4859:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4838:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"4843:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4834:3:27"},"nodeType":"YulFunctionCall","src":"4834:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"4852:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4831:2:27"},"nodeType":"YulFunctionCall","src":"4831:25:27"},"nodeType":"YulIf","src":"4828:45:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4899:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4907:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4895:3:27"},"nodeType":"YulFunctionCall","src":"4895:17:27"},{"name":"src","nodeType":"YulIdentifier","src":"4914:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"4919:6:27"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4882:12:27"},"nodeType":"YulFunctionCall","src":"4882:44:27"},"nodeType":"YulExpressionStatement","src":"4882:44:27"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4950:6:27"},{"name":"length","nodeType":"YulIdentifier","src":"4958:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4946:3:27"},"nodeType":"YulFunctionCall","src":"4946:19:27"},{"kind":"number","nodeType":"YulLiteral","src":"4967:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4942:3:27"},"nodeType":"YulFunctionCall","src":"4942:30:27"},{"kind":"number","nodeType":"YulLiteral","src":"4974:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4935:6:27"},"nodeType":"YulFunctionCall","src":"4935:41:27"},"nodeType":"YulExpressionStatement","src":"4935:41:27"}]},"name":"abi_decode_available_length_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4394:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"4399:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"4407:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4415:5:27","type":""}],"src":"4350:632:27"},{"body":{"nodeType":"YulBlock","src":"5093:700:27","statements":[{"body":{"nodeType":"YulBlock","src":"5139:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5148:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5151:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5141:6:27"},"nodeType":"YulFunctionCall","src":"5141:12:27"},"nodeType":"YulExpressionStatement","src":"5141:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5114:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5123:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5110:3:27"},"nodeType":"YulFunctionCall","src":"5110:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5135:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5106:3:27"},"nodeType":"YulFunctionCall","src":"5106:32:27"},"nodeType":"YulIf","src":"5103:52:27"},{"nodeType":"YulVariableDeclaration","src":"5164:37:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5191:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5178:12:27"},"nodeType":"YulFunctionCall","src":"5178:23:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5168:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5210:28:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5220:18:27","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5214:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"5265:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5274:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5277:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5267:6:27"},"nodeType":"YulFunctionCall","src":"5267:12:27"},"nodeType":"YulExpressionStatement","src":"5267:12:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5253:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"5261:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5250:2:27"},"nodeType":"YulFunctionCall","src":"5250:14:27"},"nodeType":"YulIf","src":"5247:34:27"},{"nodeType":"YulVariableDeclaration","src":"5290:32:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5304:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5315:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5300:3:27"},"nodeType":"YulFunctionCall","src":"5300:22:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5294:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"5370:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5379:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5382:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5372:6:27"},"nodeType":"YulFunctionCall","src":"5372:12:27"},"nodeType":"YulExpressionStatement","src":"5372:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5349:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"5353:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5345:3:27"},"nodeType":"YulFunctionCall","src":"5345:13:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5360:7:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5341:3:27"},"nodeType":"YulFunctionCall","src":"5341:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5334:6:27"},"nodeType":"YulFunctionCall","src":"5334:35:27"},"nodeType":"YulIf","src":"5331:55:27"},{"nodeType":"YulAssignment","src":"5395:86:27","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5444:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"5448:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5440:3:27"},"nodeType":"YulFunctionCall","src":"5440:13:27"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5468:2:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5455:12:27"},"nodeType":"YulFunctionCall","src":"5455:16:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5473:7:27"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"5405:34:27"},"nodeType":"YulFunctionCall","src":"5405:76:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5395:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"5490:50:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5523:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5534:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5519:3:27"},"nodeType":"YulFunctionCall","src":"5519:20:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5506:12:27"},"nodeType":"YulFunctionCall","src":"5506:34:27"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"5494:8:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"5569:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5578:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5581:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5571:6:27"},"nodeType":"YulFunctionCall","src":"5571:12:27"},"nodeType":"YulExpressionStatement","src":"5571:12:27"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"5555:8:27"},{"name":"_1","nodeType":"YulIdentifier","src":"5565:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5552:2:27"},"nodeType":"YulFunctionCall","src":"5552:16:27"},"nodeType":"YulIf","src":"5549:36:27"},{"nodeType":"YulVariableDeclaration","src":"5594:34:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5608:9:27"},{"name":"offset_1","nodeType":"YulIdentifier","src":"5619:8:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5604:3:27"},"nodeType":"YulFunctionCall","src":"5604:24:27"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5598:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"5676:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5685:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5688:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5678:6:27"},"nodeType":"YulFunctionCall","src":"5678:12:27"},"nodeType":"YulExpressionStatement","src":"5678:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5655:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"5659:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5651:3:27"},"nodeType":"YulFunctionCall","src":"5651:13:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5666:7:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5647:3:27"},"nodeType":"YulFunctionCall","src":"5647:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5640:6:27"},"nodeType":"YulFunctionCall","src":"5640:35:27"},"nodeType":"YulIf","src":"5637:55:27"},{"nodeType":"YulAssignment","src":"5701:86:27","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5750:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"5754:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5746:3:27"},"nodeType":"YulFunctionCall","src":"5746:13:27"},{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5774:2:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5761:12:27"},"nodeType":"YulFunctionCall","src":"5761:16:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5779:7:27"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"5711:34:27"},"nodeType":"YulFunctionCall","src":"5711:76:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5701:6:27"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5051:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5062:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5074:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5082:6:27","type":""}],"src":"4987:806:27"},{"body":{"nodeType":"YulBlock","src":"5868:116:27","statements":[{"body":{"nodeType":"YulBlock","src":"5914:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5923:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5926:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5916:6:27"},"nodeType":"YulFunctionCall","src":"5916:12:27"},"nodeType":"YulExpressionStatement","src":"5916:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5889:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5898:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5885:3:27"},"nodeType":"YulFunctionCall","src":"5885:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5910:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5881:3:27"},"nodeType":"YulFunctionCall","src":"5881:32:27"},"nodeType":"YulIf","src":"5878:52:27"},{"nodeType":"YulAssignment","src":"5939:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5968:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5949:18:27"},"nodeType":"YulFunctionCall","src":"5949:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5939:6:27"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5834:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5845:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5857:6:27","type":""}],"src":"5798:186:27"},{"body":{"nodeType":"YulBlock","src":"6117:102:27","statements":[{"nodeType":"YulAssignment","src":"6127:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6139:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6150:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6135:3:27"},"nodeType":"YulFunctionCall","src":"6135:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6127:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6169:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6184:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6200:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6205:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6196:3:27"},"nodeType":"YulFunctionCall","src":"6196:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"6209:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6192:3:27"},"nodeType":"YulFunctionCall","src":"6192:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6180:3:27"},"nodeType":"YulFunctionCall","src":"6180:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6162:6:27"},"nodeType":"YulFunctionCall","src":"6162:51:27"},"nodeType":"YulExpressionStatement","src":"6162:51:27"}]},"name":"abi_encode_tuple_t_contract$_LiquidStakingVault_$8906__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6086:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6097:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6108:4:27","type":""}],"src":"5989:230:27"},{"body":{"nodeType":"YulBlock","src":"6279:325:27","statements":[{"nodeType":"YulAssignment","src":"6289:22:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6303:1:27","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"6306:4:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6299:3:27"},"nodeType":"YulFunctionCall","src":"6299:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6289:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"6320:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6350:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"6356:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6346:3:27"},"nodeType":"YulFunctionCall","src":"6346:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6324:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6397:31:27","statements":[{"nodeType":"YulAssignment","src":"6399:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6413:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6421:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6409:3:27"},"nodeType":"YulFunctionCall","src":"6409:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6399:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6377:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6370:6:27"},"nodeType":"YulFunctionCall","src":"6370:26:27"},"nodeType":"YulIf","src":"6367:61:27"},{"body":{"nodeType":"YulBlock","src":"6487:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6508:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6515:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6520:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6511:3:27"},"nodeType":"YulFunctionCall","src":"6511:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6501:6:27"},"nodeType":"YulFunctionCall","src":"6501:31:27"},"nodeType":"YulExpressionStatement","src":"6501:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6552:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6555:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6545:6:27"},"nodeType":"YulFunctionCall","src":"6545:15:27"},"nodeType":"YulExpressionStatement","src":"6545:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6580:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6583:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6573:6:27"},"nodeType":"YulFunctionCall","src":"6573:15:27"},"nodeType":"YulExpressionStatement","src":"6573:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6443:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6466:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6474:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6463:2:27"},"nodeType":"YulFunctionCall","src":"6463:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6440:2:27"},"nodeType":"YulFunctionCall","src":"6440:38:27"},"nodeType":"YulIf","src":"6437:161:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6259:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6268:6:27","type":""}],"src":"6224:380:27"},{"body":{"nodeType":"YulBlock","src":"6783:173:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6800:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6811:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6793:6:27"},"nodeType":"YulFunctionCall","src":"6793:21:27"},"nodeType":"YulExpressionStatement","src":"6793:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6834:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6845:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6830:3:27"},"nodeType":"YulFunctionCall","src":"6830:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"6850:2:27","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6823:6:27"},"nodeType":"YulFunctionCall","src":"6823:30:27"},"nodeType":"YulExpressionStatement","src":"6823:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6873:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6884:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6869:3:27"},"nodeType":"YulFunctionCall","src":"6869:18:27"},{"hexValue":"50726f706f73616c20646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"6889:25:27","type":"","value":"Proposal does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6862:6:27"},"nodeType":"YulFunctionCall","src":"6862:53:27"},"nodeType":"YulExpressionStatement","src":"6862:53:27"},{"nodeType":"YulAssignment","src":"6924:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6936:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6947:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6932:3:27"},"nodeType":"YulFunctionCall","src":"6932:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6924:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e62a544e5aebc4f7865ef71973090f3036faa05a5f7be3ea3605ab15dc232bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6760:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6774:4:27","type":""}],"src":"6609:347:27"},{"body":{"nodeType":"YulBlock","src":"7135:168:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7152:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7163:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7145:6:27"},"nodeType":"YulFunctionCall","src":"7145:21:27"},"nodeType":"YulExpressionStatement","src":"7145:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7186:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7197:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7182:3:27"},"nodeType":"YulFunctionCall","src":"7182:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"7202:2:27","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7175:6:27"},"nodeType":"YulFunctionCall","src":"7175:30:27"},"nodeType":"YulExpressionStatement","src":"7175:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7225:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7236:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7221:3:27"},"nodeType":"YulFunctionCall","src":"7221:18:27"},{"hexValue":"526f6f74206e6f74207075626c6973686564","kind":"string","nodeType":"YulLiteral","src":"7241:20:27","type":"","value":"Root not published"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7214:6:27"},"nodeType":"YulFunctionCall","src":"7214:48:27"},"nodeType":"YulExpressionStatement","src":"7214:48:27"},{"nodeType":"YulAssignment","src":"7271:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7283:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7294:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7279:3:27"},"nodeType":"YulFunctionCall","src":"7279:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7271:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_f51d8a2ee1ed415d9e0a7f47c891529969ae72513581188f4c1a72c1e5509376__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7112:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7126:4:27","type":""}],"src":"6961:342:27"},{"body":{"nodeType":"YulBlock","src":"7482:175:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7499:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7510:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7492:6:27"},"nodeType":"YulFunctionCall","src":"7492:21:27"},"nodeType":"YulExpressionStatement","src":"7492:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7533:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7544:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7529:3:27"},"nodeType":"YulFunctionCall","src":"7529:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"7549:2:27","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7522:6:27"},"nodeType":"YulFunctionCall","src":"7522:30:27"},"nodeType":"YulExpressionStatement","src":"7522:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7572:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7583:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7568:3:27"},"nodeType":"YulFunctionCall","src":"7568:18:27"},{"hexValue":"50726f706f73616c20616c7265616479206578656375746564","kind":"string","nodeType":"YulLiteral","src":"7588:27:27","type":"","value":"Proposal already executed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7561:6:27"},"nodeType":"YulFunctionCall","src":"7561:55:27"},"nodeType":"YulExpressionStatement","src":"7561:55:27"},{"nodeType":"YulAssignment","src":"7625:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7637:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7648:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7633:3:27"},"nodeType":"YulFunctionCall","src":"7633:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7625:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7459:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7473:4:27","type":""}],"src":"7308:349:27"},{"body":{"nodeType":"YulBlock","src":"7717:65:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7734:1:27","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"7737:3:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7727:6:27"},"nodeType":"YulFunctionCall","src":"7727:14:27"},"nodeType":"YulExpressionStatement","src":"7727:14:27"},{"nodeType":"YulAssignment","src":"7750:26:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7768:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7771:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7758:9:27"},"nodeType":"YulFunctionCall","src":"7758:18:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7750:4:27"}]}]},"name":"array_dataslot_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7700:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7708:4:27","type":""}],"src":"7662:120:27"},{"body":{"nodeType":"YulBlock","src":"7903:845:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7913:12:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7923:2:27","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7917:2:27","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7941:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"7952:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7934:6:27"},"nodeType":"YulFunctionCall","src":"7934:21:27"},"nodeType":"YulExpressionStatement","src":"7934:21:27"},{"nodeType":"YulVariableDeclaration","src":"7964:12:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7975:1:27","type":"","value":"0"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"7968:3:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7985:30:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8008:6:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8002:5:27"},"nodeType":"YulFunctionCall","src":"8002:13:27"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"7989:9:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8024:50:27","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"8064:9:27"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"8038:25:27"},"nodeType":"YulFunctionCall","src":"8038:36:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8028:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8094:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"8105:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8090:3:27"},"nodeType":"YulFunctionCall","src":"8090:18:27"},{"name":"length","nodeType":"YulIdentifier","src":"8110:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8083:6:27"},"nodeType":"YulFunctionCall","src":"8083:34:27"},"nodeType":"YulExpressionStatement","src":"8083:34:27"},{"nodeType":"YulVariableDeclaration","src":"8126:12:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8136:2:27","type":"","value":"64"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"8130:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8147:11:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8157:1:27","type":"","value":"1"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"8151:2:27","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"8208:151:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8233:9:27"},{"name":"_2","nodeType":"YulIdentifier","src":"8244:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8229:3:27"},"nodeType":"YulFunctionCall","src":"8229:18:27"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"8253:9:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8268:3:27","type":"","value":"255"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8264:3:27"},"nodeType":"YulFunctionCall","src":"8264:8:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8249:3:27"},"nodeType":"YulFunctionCall","src":"8249:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8222:6:27"},"nodeType":"YulFunctionCall","src":"8222:52:27"},"nodeType":"YulExpressionStatement","src":"8222:52:27"},{"nodeType":"YulAssignment","src":"8287:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8302:9:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8317:1:27","type":"","value":"5"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8334:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8327:6:27"},"nodeType":"YulFunctionCall","src":"8327:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8320:6:27"},"nodeType":"YulFunctionCall","src":"8320:22:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8313:3:27"},"nodeType":"YulFunctionCall","src":"8313:30:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8298:3:27"},"nodeType":"YulFunctionCall","src":"8298:46:27"},{"name":"_2","nodeType":"YulIdentifier","src":"8346:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8294:3:27"},"nodeType":"YulFunctionCall","src":"8294:55:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8287:3:27"}]}]},"nodeType":"YulCase","src":"8201:158:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8206:1:27","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"8375:347:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8396:1:27","type":"","value":"0"},{"name":"value0","nodeType":"YulIdentifier","src":"8399:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8389:6:27"},"nodeType":"YulFunctionCall","src":"8389:17:27"},"nodeType":"YulExpressionStatement","src":"8389:17:27"},{"nodeType":"YulVariableDeclaration","src":"8419:31:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8444:1:27","type":"","value":"0"},{"name":"_1","nodeType":"YulIdentifier","src":"8447:2:27"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8434:9:27"},"nodeType":"YulFunctionCall","src":"8434:16:27"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"8423:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8463:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8472:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8467:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"8540:126:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8573:9:27"},{"name":"i","nodeType":"YulIdentifier","src":"8584:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8569:3:27"},"nodeType":"YulFunctionCall","src":"8569:17:27"},{"name":"_2","nodeType":"YulIdentifier","src":"8588:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8565:3:27"},"nodeType":"YulFunctionCall","src":"8565:26:27"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"8599:7:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8593:5:27"},"nodeType":"YulFunctionCall","src":"8593:14:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8558:6:27"},"nodeType":"YulFunctionCall","src":"8558:50:27"},"nodeType":"YulExpressionStatement","src":"8558:50:27"},{"nodeType":"YulAssignment","src":"8625:27:27","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"8640:7:27"},{"name":"_3","nodeType":"YulIdentifier","src":"8649:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8636:3:27"},"nodeType":"YulFunctionCall","src":"8636:16:27"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"8625:7:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8497:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"8500:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8494:2:27"},"nodeType":"YulFunctionCall","src":"8494:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8508:19:27","statements":[{"nodeType":"YulAssignment","src":"8510:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8519:1:27"},{"name":"_1","nodeType":"YulIdentifier","src":"8522:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8515:3:27"},"nodeType":"YulFunctionCall","src":"8515:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8510:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"8490:3:27","statements":[]},"src":"8486:180:27"},{"nodeType":"YulAssignment","src":"8679:33:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8694:9:27"},{"name":"i","nodeType":"YulIdentifier","src":"8705:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8690:3:27"},"nodeType":"YulFunctionCall","src":"8690:17:27"},{"name":"_2","nodeType":"YulIdentifier","src":"8709:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8686:3:27"},"nodeType":"YulFunctionCall","src":"8686:26:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8679:3:27"}]}]},"nodeType":"YulCase","src":"8368:354:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8373:1:27","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"8178:9:27"},{"name":"_3","nodeType":"YulIdentifier","src":"8189:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8174:3:27"},"nodeType":"YulFunctionCall","src":"8174:18:27"},"nodeType":"YulSwitch","src":"8167:555:27"},{"nodeType":"YulAssignment","src":"8731:11:27","value":{"name":"ret","nodeType":"YulIdentifier","src":"8739:3:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8731:4:27"}]}]},"name":"abi_encode_tuple_t_bytes_storage__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7872:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7883:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7894:4:27","type":""}],"src":"7787:961:27"},{"body":{"nodeType":"YulBlock","src":"8927:172:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8944:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8955:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8937:6:27"},"nodeType":"YulFunctionCall","src":"8937:21:27"},"nodeType":"YulExpressionStatement","src":"8937:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8978:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8989:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8974:3:27"},"nodeType":"YulFunctionCall","src":"8974:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"8994:2:27","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8967:6:27"},"nodeType":"YulFunctionCall","src":"8967:30:27"},"nodeType":"YulExpressionStatement","src":"8967:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9017:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9028:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9013:3:27"},"nodeType":"YulFunctionCall","src":"9013:18:27"},{"hexValue":"526f6f7420616c7265616479207075626c6973686564","kind":"string","nodeType":"YulLiteral","src":"9033:24:27","type":"","value":"Root already published"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9006:6:27"},"nodeType":"YulFunctionCall","src":"9006:52:27"},"nodeType":"YulExpressionStatement","src":"9006:52:27"},{"nodeType":"YulAssignment","src":"9067:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9079:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9090:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9075:3:27"},"nodeType":"YulFunctionCall","src":"9075:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9067:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_625465716d2bbcf60dea1ef1dab79961ff17807d3e309a8447a933159e425ee8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8904:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8918:4:27","type":""}],"src":"8753:346:27"},{"body":{"nodeType":"YulBlock","src":"9278:169:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9295:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9306:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9288:6:27"},"nodeType":"YulFunctionCall","src":"9288:21:27"},"nodeType":"YulExpressionStatement","src":"9288:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9329:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9340:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9325:3:27"},"nodeType":"YulFunctionCall","src":"9325:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"9345:2:27","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9318:6:27"},"nodeType":"YulFunctionCall","src":"9318:30:27"},"nodeType":"YulExpressionStatement","src":"9318:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9368:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9379:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9364:3:27"},"nodeType":"YulFunctionCall","src":"9364:18:27"},{"hexValue":"526f6f742063616e6e6f74206265207a65726f","kind":"string","nodeType":"YulLiteral","src":"9384:21:27","type":"","value":"Root cannot be zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9357:6:27"},"nodeType":"YulFunctionCall","src":"9357:49:27"},"nodeType":"YulExpressionStatement","src":"9357:49:27"},{"nodeType":"YulAssignment","src":"9415:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9427:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9438:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9423:3:27"},"nodeType":"YulFunctionCall","src":"9423:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9415:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_7fae8c25cd6c6e20d8f58331d2aa29206ef64721d3145104964788d98a7c0737__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9255:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9269:4:27","type":""}],"src":"9104:343:27"},{"body":{"nodeType":"YulBlock","src":"9553:76:27","statements":[{"nodeType":"YulAssignment","src":"9563:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9575:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9586:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9571:3:27"},"nodeType":"YulFunctionCall","src":"9571:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9563:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9605:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"9616:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9598:6:27"},"nodeType":"YulFunctionCall","src":"9598:25:27"},"nodeType":"YulExpressionStatement","src":"9598:25:27"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9522:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9533:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9544:4:27","type":""}],"src":"9452:177:27"},{"body":{"nodeType":"YulBlock","src":"9763:145:27","statements":[{"nodeType":"YulAssignment","src":"9773:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9785:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9796:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9781:3:27"},"nodeType":"YulFunctionCall","src":"9781:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9773:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9815:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9830:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9846:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9851:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9842:3:27"},"nodeType":"YulFunctionCall","src":"9842:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"9855:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9838:3:27"},"nodeType":"YulFunctionCall","src":"9838:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9826:3:27"},"nodeType":"YulFunctionCall","src":"9826:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9808:6:27"},"nodeType":"YulFunctionCall","src":"9808:51:27"},"nodeType":"YulExpressionStatement","src":"9808:51:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9879:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9890:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9875:3:27"},"nodeType":"YulFunctionCall","src":"9875:18:27"},{"name":"value1","nodeType":"YulIdentifier","src":"9895:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9868:6:27"},"nodeType":"YulFunctionCall","src":"9868:34:27"},"nodeType":"YulExpressionStatement","src":"9868:34:27"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9724:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9735:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9743:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9754:4:27","type":""}],"src":"9634:274:27"},{"body":{"nodeType":"YulBlock","src":"9994:103:27","statements":[{"body":{"nodeType":"YulBlock","src":"10040:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10049:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10052:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10042:6:27"},"nodeType":"YulFunctionCall","src":"10042:12:27"},"nodeType":"YulExpressionStatement","src":"10042:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10015:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"10024:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10011:3:27"},"nodeType":"YulFunctionCall","src":"10011:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"10036:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10007:3:27"},"nodeType":"YulFunctionCall","src":"10007:32:27"},"nodeType":"YulIf","src":"10004:52:27"},{"nodeType":"YulAssignment","src":"10065:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10081:9:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10075:5:27"},"nodeType":"YulFunctionCall","src":"10075:16:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10065:6:27"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9960:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9971:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9983:6:27","type":""}],"src":"9913:184:27"},{"body":{"nodeType":"YulBlock","src":"10276:177:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10293:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10304:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10286:6:27"},"nodeType":"YulFunctionCall","src":"10286:21:27"},"nodeType":"YulExpressionStatement","src":"10286:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10327:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10338:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10323:3:27"},"nodeType":"YulFunctionCall","src":"10323:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"10343:2:27","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10316:6:27"},"nodeType":"YulFunctionCall","src":"10316:30:27"},"nodeType":"YulExpressionStatement","src":"10316:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10366:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10377:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10362:3:27"},"nodeType":"YulFunctionCall","src":"10362:18:27"},{"hexValue":"4465736372697074696f6e2063616e6e6f7420626520656d707479","kind":"string","nodeType":"YulLiteral","src":"10382:29:27","type":"","value":"Description cannot be empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10355:6:27"},"nodeType":"YulFunctionCall","src":"10355:57:27"},"nodeType":"YulExpressionStatement","src":"10355:57:27"},{"nodeType":"YulAssignment","src":"10421:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10433:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10444:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10429:3:27"},"nodeType":"YulFunctionCall","src":"10429:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10421:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_5136780377cc231258678d13fe3ea7b31bc96a5f8a36a4c81f29820551bb6214__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10253:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10267:4:27","type":""}],"src":"10102:351:27"},{"body":{"nodeType":"YulBlock","src":"10632:177:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10649:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10660:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10642:6:27"},"nodeType":"YulFunctionCall","src":"10642:21:27"},"nodeType":"YulExpressionStatement","src":"10642:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10683:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10694:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10679:3:27"},"nodeType":"YulFunctionCall","src":"10679:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"10699:2:27","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10672:6:27"},"nodeType":"YulFunctionCall","src":"10672:30:27"},"nodeType":"YulExpressionStatement","src":"10672:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10722:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10733:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10718:3:27"},"nodeType":"YulFunctionCall","src":"10718:18:27"},{"hexValue":"416374696f6e20646174612063616e6e6f7420626520656d707479","kind":"string","nodeType":"YulLiteral","src":"10738:29:27","type":"","value":"Action data cannot be empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10711:6:27"},"nodeType":"YulFunctionCall","src":"10711:57:27"},"nodeType":"YulExpressionStatement","src":"10711:57:27"},{"nodeType":"YulAssignment","src":"10777:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10789:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10800:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10785:3:27"},"nodeType":"YulFunctionCall","src":"10785:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10777:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_13390cb6ac8c0ea9ab608030d21b8caec76504526f6045e2233c880c3b675edd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10609:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10623:4:27","type":""}],"src":"10458:351:27"},{"body":{"nodeType":"YulBlock","src":"10861:185:27","statements":[{"body":{"nodeType":"YulBlock","src":"10900:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10921:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10928:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10933:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10924:3:27"},"nodeType":"YulFunctionCall","src":"10924:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10914:6:27"},"nodeType":"YulFunctionCall","src":"10914:31:27"},"nodeType":"YulExpressionStatement","src":"10914:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10965:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10968:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10958:6:27"},"nodeType":"YulFunctionCall","src":"10958:15:27"},"nodeType":"YulExpressionStatement","src":"10958:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10993:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10996:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10986:6:27"},"nodeType":"YulFunctionCall","src":"10986:15:27"},"nodeType":"YulExpressionStatement","src":"10986:15:27"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10877:5:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10888:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10884:3:27"},"nodeType":"YulFunctionCall","src":"10884:6:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10874:2:27"},"nodeType":"YulFunctionCall","src":"10874:17:27"},"nodeType":"YulIf","src":"10871:140:27"},{"nodeType":"YulAssignment","src":"11020:20:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11031:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"11038:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11027:3:27"},"nodeType":"YulFunctionCall","src":"11027:13:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11020:3:27"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10843:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10853:3:27","type":""}],"src":"10814:232:27"},{"body":{"nodeType":"YulBlock","src":"11132:464:27","statements":[{"body":{"nodeType":"YulBlock","src":"11165:425:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11179:11:27","value":{"kind":"number","nodeType":"YulLiteral","src":"11189:1:27","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11183:2:27","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11210:2:27"},{"name":"array","nodeType":"YulIdentifier","src":"11214:5:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11203:6:27"},"nodeType":"YulFunctionCall","src":"11203:17:27"},"nodeType":"YulExpressionStatement","src":"11203:17:27"},{"nodeType":"YulVariableDeclaration","src":"11233:31:27","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11255:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"11259:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"11245:9:27"},"nodeType":"YulFunctionCall","src":"11245:19:27"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"11237:4:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11277:57:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11300:4:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11310:1:27","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"11317:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"11329:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11313:3:27"},"nodeType":"YulFunctionCall","src":"11313:19:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11306:3:27"},"nodeType":"YulFunctionCall","src":"11306:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11296:3:27"},"nodeType":"YulFunctionCall","src":"11296:38:27"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"11281:11:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"11371:23:27","statements":[{"nodeType":"YulAssignment","src":"11373:19:27","value":{"name":"data","nodeType":"YulIdentifier","src":"11388:4:27"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"11373:11:27"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"11353:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"11365:4:27","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11350:2:27"},"nodeType":"YulFunctionCall","src":"11350:20:27"},"nodeType":"YulIf","src":"11347:47:27"},{"nodeType":"YulVariableDeclaration","src":"11407:41:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11421:4:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11431:1:27","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"11438:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11443:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11434:3:27"},"nodeType":"YulFunctionCall","src":"11434:12:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11427:3:27"},"nodeType":"YulFunctionCall","src":"11427:20:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11417:3:27"},"nodeType":"YulFunctionCall","src":"11417:31:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"11411:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11461:24:27","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"11474:11:27"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"11465:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"11559:21:27","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"11568:5:27"},{"name":"_1","nodeType":"YulIdentifier","src":"11575:2:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"11561:6:27"},"nodeType":"YulFunctionCall","src":"11561:17:27"},"nodeType":"YulExpressionStatement","src":"11561:17:27"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"11509:5:27"},{"name":"_2","nodeType":"YulIdentifier","src":"11516:2:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11506:2:27"},"nodeType":"YulFunctionCall","src":"11506:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11520:26:27","statements":[{"nodeType":"YulAssignment","src":"11522:22:27","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"11535:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"11542:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11531:3:27"},"nodeType":"YulFunctionCall","src":"11531:13:27"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"11522:5:27"}]}]},"pre":{"nodeType":"YulBlock","src":"11502:3:27","statements":[]},"src":"11498:82:27"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"11148:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11153:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11145:2:27"},"nodeType":"YulFunctionCall","src":"11145:11:27"},"nodeType":"YulIf","src":"11142:448:27"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"11104:5:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"11111:3:27","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"11116:10:27","type":""}],"src":"11051:545:27"},{"body":{"nodeType":"YulBlock","src":"11686:81:27","statements":[{"nodeType":"YulAssignment","src":"11696:65:27","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11711:4:27"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11729:1:27","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"11732:3:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11725:3:27"},"nodeType":"YulFunctionCall","src":"11725:11:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11742:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11738:3:27"},"nodeType":"YulFunctionCall","src":"11738:6:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11721:3:27"},"nodeType":"YulFunctionCall","src":"11721:24:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11717:3:27"},"nodeType":"YulFunctionCall","src":"11717:29:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11707:3:27"},"nodeType":"YulFunctionCall","src":"11707:40:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11753:1:27","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"11756:3:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11749:3:27"},"nodeType":"YulFunctionCall","src":"11749:11:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11704:2:27"},"nodeType":"YulFunctionCall","src":"11704:57:27"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"11696:4:27"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11663:4:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"11669:3:27","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"11677:4:27","type":""}],"src":"11601:166:27"},{"body":{"nodeType":"YulBlock","src":"11868:1255:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11878:24:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11898:3:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11892:5:27"},"nodeType":"YulFunctionCall","src":"11892:10:27"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"11882:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"11945:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11947:16:27"},"nodeType":"YulFunctionCall","src":"11947:18:27"},"nodeType":"YulExpressionStatement","src":"11947:18:27"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11917:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"11925:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11914:2:27"},"nodeType":"YulFunctionCall","src":"11914:30:27"},"nodeType":"YulIf","src":"11911:56:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12020:4:27"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12058:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"12052:5:27"},"nodeType":"YulFunctionCall","src":"12052:11:27"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"12026:25:27"},"nodeType":"YulFunctionCall","src":"12026:38:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"12066:6:27"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"11976:43:27"},"nodeType":"YulFunctionCall","src":"11976:97:27"},"nodeType":"YulExpressionStatement","src":"11976:97:27"},{"nodeType":"YulVariableDeclaration","src":"12082:18:27","value":{"kind":"number","nodeType":"YulLiteral","src":"12099:1:27","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"12086:9:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12109:23:27","value":{"kind":"number","nodeType":"YulLiteral","src":"12128:4:27","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"12113:11:27","type":""}]},{"nodeType":"YulAssignment","src":"12141:24:27","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"12154:11:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12141:9:27"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"12211:655:27","statements":[{"nodeType":"YulVariableDeclaration","src":"12225:35:27","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12244:6:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12256:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12252:3:27"},"nodeType":"YulFunctionCall","src":"12252:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12240:3:27"},"nodeType":"YulFunctionCall","src":"12240:20:27"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"12229:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12273:48:27","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12316:4:27"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"12287:28:27"},"nodeType":"YulFunctionCall","src":"12287:34:27"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"12277:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12334:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"12343:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12338:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"12421:172:27","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12446:6:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12464:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12469:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12460:3:27"},"nodeType":"YulFunctionCall","src":"12460:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12454:5:27"},"nodeType":"YulFunctionCall","src":"12454:26:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12439:6:27"},"nodeType":"YulFunctionCall","src":"12439:42:27"},"nodeType":"YulExpressionStatement","src":"12439:42:27"},{"nodeType":"YulAssignment","src":"12498:24:27","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12512:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12520:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12508:3:27"},"nodeType":"YulFunctionCall","src":"12508:14:27"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12498:6:27"}]},{"nodeType":"YulAssignment","src":"12539:40:27","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12556:9:27"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"12567:11:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12552:3:27"},"nodeType":"YulFunctionCall","src":"12552:27:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12539:9:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12368:1:27"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"12371:7:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12365:2:27"},"nodeType":"YulFunctionCall","src":"12365:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12380:28:27","statements":[{"nodeType":"YulAssignment","src":"12382:24:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12391:1:27"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"12394:11:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12387:3:27"},"nodeType":"YulFunctionCall","src":"12387:19:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12382:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"12361:3:27","statements":[]},"src":"12357:236:27"},{"body":{"nodeType":"YulBlock","src":"12641:166:27","statements":[{"nodeType":"YulVariableDeclaration","src":"12659:43:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12686:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12691:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12682:3:27"},"nodeType":"YulFunctionCall","src":"12682:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12676:5:27"},"nodeType":"YulFunctionCall","src":"12676:26:27"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"12663:9:27","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12726:6:27"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"12738:9:27"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12765:1:27","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"12768:6:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12761:3:27"},"nodeType":"YulFunctionCall","src":"12761:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"12777:3:27","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12757:3:27"},"nodeType":"YulFunctionCall","src":"12757:24:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12787:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12783:3:27"},"nodeType":"YulFunctionCall","src":"12783:6:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"12753:3:27"},"nodeType":"YulFunctionCall","src":"12753:37:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12749:3:27"},"nodeType":"YulFunctionCall","src":"12749:42:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12734:3:27"},"nodeType":"YulFunctionCall","src":"12734:58:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12719:6:27"},"nodeType":"YulFunctionCall","src":"12719:74:27"},"nodeType":"YulExpressionStatement","src":"12719:74:27"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"12612:7:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"12621:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12609:2:27"},"nodeType":"YulFunctionCall","src":"12609:19:27"},"nodeType":"YulIf","src":"12606:201:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12827:4:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12841:1:27","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"12844:6:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12837:3:27"},"nodeType":"YulFunctionCall","src":"12837:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"12853:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12833:3:27"},"nodeType":"YulFunctionCall","src":"12833:22:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12820:6:27"},"nodeType":"YulFunctionCall","src":"12820:36:27"},"nodeType":"YulExpressionStatement","src":"12820:36:27"}]},"nodeType":"YulCase","src":"12204:662:27","value":{"kind":"number","nodeType":"YulLiteral","src":"12209:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"12883:234:27","statements":[{"nodeType":"YulVariableDeclaration","src":"12897:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"12910:1:27","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12901:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"12946:67:27","statements":[{"nodeType":"YulAssignment","src":"12964:35:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12983:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12988:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12979:3:27"},"nodeType":"YulFunctionCall","src":"12979:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12973:5:27"},"nodeType":"YulFunctionCall","src":"12973:26:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12964:5:27"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"12927:6:27"},"nodeType":"YulIf","src":"12924:89:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13033:4:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13092:5:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"13099:6:27"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"13039:52:27"},"nodeType":"YulFunctionCall","src":"13039:67:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13026:6:27"},"nodeType":"YulFunctionCall","src":"13026:81:27"},"nodeType":"YulExpressionStatement","src":"13026:81:27"}]},"nodeType":"YulCase","src":"12875:242:27","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12184:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12192:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12181:2:27"},"nodeType":"YulFunctionCall","src":"12181:14:27"},"nodeType":"YulSwitch","src":"12174:943:27"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"11853:4:27","type":""},{"name":"src","nodeType":"YulTypedName","src":"11859:3:27","type":""}],"src":"11772:1351:27"},{"body":{"nodeType":"YulBlock","src":"13222:1255:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13232:24:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13252:3:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13246:5:27"},"nodeType":"YulFunctionCall","src":"13246:10:27"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"13236:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"13299:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13301:16:27"},"nodeType":"YulFunctionCall","src":"13301:18:27"},"nodeType":"YulExpressionStatement","src":"13301:18:27"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13271:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"13279:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13268:2:27"},"nodeType":"YulFunctionCall","src":"13268:30:27"},"nodeType":"YulIf","src":"13265:56:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13374:4:27"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13412:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"13406:5:27"},"nodeType":"YulFunctionCall","src":"13406:11:27"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"13380:25:27"},"nodeType":"YulFunctionCall","src":"13380:38:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"13420:6:27"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"13330:43:27"},"nodeType":"YulFunctionCall","src":"13330:97:27"},"nodeType":"YulExpressionStatement","src":"13330:97:27"},{"nodeType":"YulVariableDeclaration","src":"13436:18:27","value":{"kind":"number","nodeType":"YulLiteral","src":"13453:1:27","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"13440:9:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13463:23:27","value":{"kind":"number","nodeType":"YulLiteral","src":"13482:4:27","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"13467:11:27","type":""}]},{"nodeType":"YulAssignment","src":"13495:24:27","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"13508:11:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"13495:9:27"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"13565:655:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13579:35:27","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13598:6:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13610:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13606:3:27"},"nodeType":"YulFunctionCall","src":"13606:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13594:3:27"},"nodeType":"YulFunctionCall","src":"13594:20:27"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"13583:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13627:48:27","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13670:4:27"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"13641:28:27"},"nodeType":"YulFunctionCall","src":"13641:34:27"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"13631:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13688:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"13697:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13692:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"13775:172:27","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13800:6:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13818:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"13823:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13814:3:27"},"nodeType":"YulFunctionCall","src":"13814:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13808:5:27"},"nodeType":"YulFunctionCall","src":"13808:26:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13793:6:27"},"nodeType":"YulFunctionCall","src":"13793:42:27"},"nodeType":"YulExpressionStatement","src":"13793:42:27"},{"nodeType":"YulAssignment","src":"13852:24:27","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13866:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"13874:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13862:3:27"},"nodeType":"YulFunctionCall","src":"13862:14:27"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13852:6:27"}]},{"nodeType":"YulAssignment","src":"13893:40:27","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"13910:9:27"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"13921:11:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13906:3:27"},"nodeType":"YulFunctionCall","src":"13906:27:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"13893:9:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13722:1:27"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"13725:7:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13719:2:27"},"nodeType":"YulFunctionCall","src":"13719:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13734:28:27","statements":[{"nodeType":"YulAssignment","src":"13736:24:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13745:1:27"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"13748:11:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13741:3:27"},"nodeType":"YulFunctionCall","src":"13741:19:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13736:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"13715:3:27","statements":[]},"src":"13711:236:27"},{"body":{"nodeType":"YulBlock","src":"13995:166:27","statements":[{"nodeType":"YulVariableDeclaration","src":"14013:43:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14040:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"14045:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14036:3:27"},"nodeType":"YulFunctionCall","src":"14036:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14030:5:27"},"nodeType":"YulFunctionCall","src":"14030:26:27"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"14017:9:27","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14080:6:27"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"14092:9:27"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14119:1:27","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"14122:6:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14115:3:27"},"nodeType":"YulFunctionCall","src":"14115:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"14131:3:27","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14111:3:27"},"nodeType":"YulFunctionCall","src":"14111:24:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14141:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14137:3:27"},"nodeType":"YulFunctionCall","src":"14137:6:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14107:3:27"},"nodeType":"YulFunctionCall","src":"14107:37:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14103:3:27"},"nodeType":"YulFunctionCall","src":"14103:42:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14088:3:27"},"nodeType":"YulFunctionCall","src":"14088:58:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14073:6:27"},"nodeType":"YulFunctionCall","src":"14073:74:27"},"nodeType":"YulExpressionStatement","src":"14073:74:27"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"13966:7:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"13975:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13963:2:27"},"nodeType":"YulFunctionCall","src":"13963:19:27"},"nodeType":"YulIf","src":"13960:201:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14181:4:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14195:1:27","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"14198:6:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14191:3:27"},"nodeType":"YulFunctionCall","src":"14191:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"14207:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14187:3:27"},"nodeType":"YulFunctionCall","src":"14187:22:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14174:6:27"},"nodeType":"YulFunctionCall","src":"14174:36:27"},"nodeType":"YulExpressionStatement","src":"14174:36:27"}]},"nodeType":"YulCase","src":"13558:662:27","value":{"kind":"number","nodeType":"YulLiteral","src":"13563:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"14237:234:27","statements":[{"nodeType":"YulVariableDeclaration","src":"14251:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"14264:1:27","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"14255:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"14300:67:27","statements":[{"nodeType":"YulAssignment","src":"14318:35:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14337:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"14342:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14333:3:27"},"nodeType":"YulFunctionCall","src":"14333:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14327:5:27"},"nodeType":"YulFunctionCall","src":"14327:26:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14318:5:27"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"14281:6:27"},"nodeType":"YulIf","src":"14278:89:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14387:4:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14446:5:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"14453:6:27"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"14393:52:27"},"nodeType":"YulFunctionCall","src":"14393:67:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14380:6:27"},"nodeType":"YulFunctionCall","src":"14380:81:27"},"nodeType":"YulExpressionStatement","src":"14380:81:27"}]},"nodeType":"YulCase","src":"14229:242:27","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13538:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"13546:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13535:2:27"},"nodeType":"YulFunctionCall","src":"13535:14:27"},"nodeType":"YulSwitch","src":"13528:943:27"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"13207:4:27","type":""},{"name":"src","nodeType":"YulTypedName","src":"13213:3:27","type":""}],"src":"13128:1349:27"},{"body":{"nodeType":"YulBlock","src":"14733:346:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14750:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14761:3:27","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14743:6:27"},"nodeType":"YulFunctionCall","src":"14743:22:27"},"nodeType":"YulExpressionStatement","src":"14743:22:27"},{"nodeType":"YulVariableDeclaration","src":"14774:60:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14806:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14818:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14829:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14814:3:27"},"nodeType":"YulFunctionCall","src":"14814:19:27"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"14788:17:27"},"nodeType":"YulFunctionCall","src":"14788:46:27"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"14778:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14854:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14865:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14850:3:27"},"nodeType":"YulFunctionCall","src":"14850:18:27"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"14874:6:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"14882:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14870:3:27"},"nodeType":"YulFunctionCall","src":"14870:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14843:6:27"},"nodeType":"YulFunctionCall","src":"14843:50:27"},"nodeType":"YulExpressionStatement","src":"14843:50:27"},{"nodeType":"YulAssignment","src":"14902:41:27","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14928:6:27"},{"name":"tail_1","nodeType":"YulIdentifier","src":"14936:6:27"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"14910:17:27"},"nodeType":"YulFunctionCall","src":"14910:33:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14902:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14963:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14974:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14959:3:27"},"nodeType":"YulFunctionCall","src":"14959:18:27"},{"name":"value2","nodeType":"YulIdentifier","src":"14979:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14952:6:27"},"nodeType":"YulFunctionCall","src":"14952:34:27"},"nodeType":"YulExpressionStatement","src":"14952:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15006:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15017:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15002:3:27"},"nodeType":"YulFunctionCall","src":"15002:18:27"},{"name":"value3","nodeType":"YulIdentifier","src":"15022:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14995:6:27"},"nodeType":"YulFunctionCall","src":"14995:34:27"},"nodeType":"YulExpressionStatement","src":"14995:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15049:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15060:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15045:3:27"},"nodeType":"YulFunctionCall","src":"15045:19:27"},{"name":"value4","nodeType":"YulIdentifier","src":"15066:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15038:6:27"},"nodeType":"YulFunctionCall","src":"15038:35:27"},"nodeType":"YulExpressionStatement","src":"15038:35:27"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_bytes_memory_ptr_t_bytes32_t_uint256_t_uint256__to_t_string_memory_ptr_t_bytes_memory_ptr_t_bytes32_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14670:9:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"14681:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14689:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14697:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14705:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14713:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14724:4:27","type":""}],"src":"14482:597:27"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_bytes_memory_ptr_t_bytes32_t_uint256_t_uint256_t_bytes32_t_bool_t_bool_t_uint256__to_t_uint256_t_string_memory_ptr_t_bytes_memory_ptr_t_bytes32_t_uint256_t_uint256_t_bytes32_t_bool_t_bool_t_uint256__fromStack_reversed(headStart, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 320\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), _1)\n        let tail_1 := abi_encode_string(value1, add(headStart, _1))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), iszero(iszero(value7)))\n        mstore(add(headStart, 256), iszero(iszero(value8)))\n        mstore(add(headStart, 288), value9)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_struct$_Proposal_$8032_memory_ptr__to_t_struct$_Proposal_$8032_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), mload(value0))\n        let memberValue0 := mload(add(value0, 32))\n        let _1 := 0x0140\n        mstore(add(headStart, 64), _1)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 352))\n        let memberValue0_1 := mload(add(value0, 64))\n        mstore(add(headStart, 96), add(sub(tail_1, headStart), not(31)))\n        let tail_2 := abi_encode_string(memberValue0_1, tail_1)\n        mstore(add(headStart, 128), mload(add(value0, 96)))\n        mstore(add(headStart, 160), mload(add(value0, 128)))\n        mstore(add(headStart, 192), mload(add(value0, 160)))\n        mstore(add(headStart, 224), mload(add(value0, 192)))\n        let memberValue0_2 := mload(add(value0, 224))\n        let _2 := 256\n        abi_encode_bool(memberValue0_2, add(headStart, _2))\n        let memberValue0_3 := mload(add(value0, _2))\n        let _3 := 288\n        abi_encode_bool(memberValue0_3, add(headStart, _3))\n        mstore(add(headStart, _1), mload(add(value0, _3)))\n        tail := tail_2\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_string(add(_2, 0x20), calldataload(_2), dataEnd)\n        let offset_1 := calldataload(add(headStart, 0x20))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let _3 := add(headStart, offset_1)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_string(add(_3, 0x20), calldataload(_3), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_contract$_LiquidStakingVault_$8906__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_8e62a544e5aebc4f7865ef71973090f3036faa05a5f7be3ea3605ab15dc232bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Proposal does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f51d8a2ee1ed415d9e0a7f47c891529969ae72513581188f4c1a72c1e5509376__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Root not published\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Proposal already executed\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_t_bytes_storage__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        mstore(add(headStart, _1), length)\n        let _2 := 64\n        let _3 := 1\n        switch and(slotValue, _3)\n        case 0 {\n            mstore(add(headStart, _2), and(slotValue, not(255)))\n            ret := add(add(headStart, shl(5, iszero(iszero(length)))), _2)\n        }\n        case 1 {\n            mstore(0, value0)\n            let dataPos := keccak256(0, _1)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _1) }\n            {\n                mstore(add(add(headStart, i), _2), sload(dataPos))\n                dataPos := add(dataPos, _3)\n            }\n            ret := add(add(headStart, i), _2)\n        }\n        tail := ret\n    }\n    function abi_encode_tuple_t_stringliteral_625465716d2bbcf60dea1ef1dab79961ff17807d3e309a8447a933159e425ee8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Root already published\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7fae8c25cd6c6e20d8f58331d2aa29206ef64721d3145104964788d98a7c0737__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Root cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_5136780377cc231258678d13fe3ea7b31bc96a5f8a36a4c81f29820551bb6214__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Description cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_13390cb6ac8c0ea9ab608030d21b8caec76504526f6045e2233c880c3b675edd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Action data cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_bytes_memory_ptr_t_bytes32_t_uint256_t_uint256__to_t_string_memory_ptr_t_bytes_memory_ptr_t_bytes32_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 160)\n        let tail_1 := abi_encode_string(value0, add(headStart, 160))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"8043":[{"length":32,"start":482},{"length":32,"start":1578},{"length":32,"start":2452}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b1461015f578063abebe45c14610184578063c7f758a814610197578063d182fb9e146101b7578063f2fde38b146101ca578063fbfa77cf146101dd57600080fd5b8063013cf08b146100b95780630d61b519146100eb5780631374b22d146101005780632ab09d14146101325780636f17c15614610144578063715018a614610157575b600080fd5b6100cc6100c7366004610c22565b610204565b6040516100e29a99989796959493929190610c81565b60405180910390f35b6100fe6100f9366004610c22565b61036a565b005b61012261010e366004610c22565b600090815260016020526040902054151590565b60405190151581526020016100e2565b6002545b6040519081526020016100e2565b6100fe610152366004610cee565b6104bc565b6100fe6105ed565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100e2565b610136610192366004610d2c565b610601565b6101aa6101a5366004610c22565b61069e565b6040516100e29190610d56565b6101366101c5366004610e8e565b6108c9565b6100fe6101d8366004610f1d565b610b67565b61016c7f000000000000000000000000000000000000000000000000000000000000000081565b60016020819052600091825260409091208054918101805461022590610f38565b80601f016020809104026020016040519081016040528092919081815260200182805461025190610f38565b801561029e5780601f106102735761010080835404028352916020019161029e565b820191906000526020600020905b81548152906001019060200180831161028157829003601f168201915b5050505050908060020180546102b390610f38565b80601f01602080910402602001604051908101604052809291908181526020018280546102df90610f38565b801561032c5780601f106103015761010080835404028352916020019161032c565b820191906000526020600020905b81548152906001019060200180831161030f57829003601f168201915b50505060038401546004850154600586015460068701546007880154600890980154969793969295509093509160ff8082169261010090920416908a565b60008181526001602052604081205490036103a05760405162461bcd60e51b815260040161039790610f72565b60405180910390fd5b60008181526001602052604090206007015460ff166103f65760405162461bcd60e51b8152602060048201526012602482015271149bdbdd081b9bdd081c1d589b1a5cda195960721b6044820152606401610397565b600081815260016020526040902060070154610100900460ff161561045d5760405162461bcd60e51b815260206004820152601960248201527f50726f706f73616c20616c7265616479206578656375746564000000000000006044820152606401610397565b6000818152600160205260409081902060078101805461ff001916610100179055905182917fbadbd87941bb6424ed4aa4719bf01a3319b64480e49f89018c718603239553d2916104b19160020190610fa9565b60405180910390a250565b6104c4610ba5565b60008281526001602052604081205490036104f15760405162461bcd60e51b815260040161039790610f72565b60008281526001602052604090206007015460ff161561054c5760405162461bcd60e51b8152602060048201526016602482015275149bdbdd08185b1c9958591e481c1d589b1a5cda195960521b6044820152606401610397565b8061058f5760405162461bcd60e51b8152602060048201526013602482015272526f6f742063616e6e6f74206265207a65726f60681b6044820152606401610397565b60008281526001602081815260409283902060068101859055600701805460ff1916909217909155905182815283917f4ad88007ea0d4cb3af4700b414825af8fd184bcf884745becc7e3490810304d2910160405180910390a25050565b6105f5610ba5565b6105ff6000610bd2565b565b6040516323fd003d60e21b81526001600160a01b038381166004830152602482018390526000917f000000000000000000000000000000000000000000000000000000000000000090911690638ff400f490604401602060405180830381865afa158015610673573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106979190611034565b9392505050565b6106fe60405180610140016040528060008152602001606081526020016060815260200160008019168152602001600081526020016000815260200160008019168152602001600015158152602001600015158152602001600081525090565b600082815260016020526040812054900361072b5760405162461bcd60e51b815260040161039790610f72565b600082815260016020818152604092839020835161014081019094528054845291820180549184019161075d90610f38565b80601f016020809104026020016040519081016040528092919081815260200182805461078990610f38565b80156107d65780601f106107ab576101008083540402835291602001916107d6565b820191906000526020600020905b8154815290600101906020018083116107b957829003601f168201915b505050505081526020016002820180546107ef90610f38565b80601f016020809104026020016040519081016040528092919081815260200182805461081b90610f38565b80156108685780601f1061083d57610100808354040283529160200191610868565b820191906000526020600020905b81548152906001019060200180831161084b57829003601f168201915b505050918352505060038201546020820152600482015460408201526005820154606082015260068201546080820152600782015460ff808216151560a084015261010090910416151560c082015260089091015460e09091015292915050565b60006108d3610ba5565b60008351116109245760405162461bcd60e51b815260206004820152601b60248201527f4465736372697074696f6e2063616e6e6f7420626520656d70747900000000006044820152606401610397565b60008251116109755760405162461bcd60e51b815260206004820152601b60248201527f416374696f6e20646174612063616e6e6f7420626520656d70747900000000006044820152606401610397565b600280549060006109858361104d565b919050559050600043905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633ba0b9a96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a149190611034565b90506000848051906020012090506040518061014001604052808581526020018781526020018681526020018281526020018481526020018381526020016000801b81526020016000151581526020016000151581526020014281525060016000868152602001908152602001600020600082015181600001556020820151816001019081610aa391906110c3565b5060408201516002820190610ab890826110c3565b50606082015160038201556080820151600482015560a0820151600582015560c0820151600682015560e08201516007820180546101008086015115150261ff00199315159390931661ffff19909116179190911790556101209091015160089091015560405184907f59da9de999ff61b9b811e412df8f25ff32770a66ae28bce18473efaa6ec2bbeb90610b569089908990869089908990611183565b60405180910390a250505092915050565b610b6f610ba5565b6001600160a01b038116610b9957604051631e4fbdf760e01b815260006004820152602401610397565b610ba281610bd2565b50565b6000546001600160a01b031633146105ff5760405163118cdaa760e01b8152336004820152602401610397565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610c3457600080fd5b5035919050565b6000815180845260005b81811015610c6157602081850181015186830182015201610c45565b506000602082860101526020601f19601f83011685010191505092915050565b60006101408c8352806020840152610c9b8184018d610c3b565b90508281036040840152610caf818c610c3b565b606084019a909a525050608081019690965260a086019490945260c0850192909252151560e08401521515610100830152610120909101529392505050565b60008060408385031215610d0157600080fd5b50508035926020909101359150565b80356001600160a01b0381168114610d2757600080fd5b919050565b60008060408385031215610d3f57600080fd5b610d4883610d10565b946020939093013593505050565b602081528151602082015260006020830151610140806040850152610d7f610160850183610c3b565b91506040850151601f19858403016060860152610d9c8382610c3b565b92505060608501516080850152608085015160a085015260a085015160c085015260c085015160e085015260e0850151610100610ddc8187018315159052565b8601519050610120610df18682018315159052565b959095015193019290925250919050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115610e3357610e33610e02565b604051601f8501601f19908116603f01168101908282118183101715610e5b57610e5b610e02565b81604052809350858152868686011115610e7457600080fd5b858560208301376000602087830101525050509392505050565b60008060408385031215610ea157600080fd5b823567ffffffffffffffff80821115610eb957600080fd5b818501915085601f830112610ecd57600080fd5b610edc86833560208501610e18565b93506020850135915080821115610ef257600080fd5b508301601f81018513610f0457600080fd5b610f1385823560208401610e18565b9150509250929050565b600060208284031215610f2f57600080fd5b61069782610d10565b600181811c90821680610f4c57607f821691505b602082108103610f6c57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526017908201527f50726f706f73616c20646f6573206e6f74206578697374000000000000000000604082015260600190565b6000602080835260008454610fbd81610f38565b80848701526040600180841660008114610fde5760018114610ff857611026565b60ff1985168984015283151560051b890183019550611026565b896000528660002060005b8581101561101e5781548b8201860152908301908801611003565b8a0184019650505b509398975050505050505050565b60006020828403121561104657600080fd5b5051919050565b60006001820161106d57634e487b7160e01b600052601160045260246000fd5b5060010190565b601f8211156110be57600081815260208120601f850160051c8101602086101561109b5750805b601f850160051c820191505b818110156110ba578281556001016110a7565b5050505b505050565b815167ffffffffffffffff8111156110dd576110dd610e02565b6110f1816110eb8454610f38565b84611074565b602080601f831160018114611126576000841561110e5750858301515b600019600386901b1c1916600185901b1785556110ba565b600085815260208120601f198616915b8281101561115557888601518255948401946001909101908401611136565b50858210156111735787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60a08152600061119660a0830188610c3b565b82810360208401526111a88188610c3b565b6040840196909652505060608101929092526080909101529291505056fea2646970667358221220f6fae53fe0aeb5c8ac19413005ef6412dae6bb5ff3d3e9d5161befbd273e0fc864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xABEBE45C EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xC7F758A8 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xD182FB9E EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xD61B519 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x1374B22D EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x2AB09D14 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x6F17C156 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x157 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0xC22 JUMP JUMPDEST PUSH2 0x204 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFE PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0xC22 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x122 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH2 0xFE PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2C JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST PUSH2 0x1AA PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC22 JUMP JUMPDEST PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xE8E JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x1D8 CALLDATASIZE PUSH1 0x4 PUSH2 0xF1D JUMP JUMPDEST PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x16C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD DUP1 SLOAD PUSH2 0x225 SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x251 SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x29E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x273 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x29E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x281 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2B3 SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2DF SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x32C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x301 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x32C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 SWAP1 SWAP9 ADD SLOAD SWAP7 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP3 PUSH2 0x100 SWAP1 SWAP3 DIV AND SWAP1 DUP11 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x3A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x397 SWAP1 PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xFF AND PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x149BDBDD081B9BDD081C1D589B1A5CDA1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x397 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x45D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20616C726561647920657865637574656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x397 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x7 DUP2 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE SWAP1 MLOAD DUP3 SWAP2 PUSH32 0xBADBD87941BB6424ED4AA4719BF01A3319B64480E49F89018C718603239553D2 SWAP2 PUSH2 0x4B1 SWAP2 PUSH1 0x2 ADD SWAP1 PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x4C4 PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x397 SWAP1 PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x149BDBDD08185B1C9958591E481C1D589B1A5CDA1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x397 JUMP JUMPDEST DUP1 PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x526F6F742063616E6E6F74206265207A65726F PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x397 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD DUP6 SWAP1 SSTORE PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP3 DUP2 MSTORE DUP4 SWAP2 PUSH32 0x4AD88007EA0D4CB3AF4700B414825AF8FD184BCF884745BECC7E3490810304D2 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x5F5 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x5FF PUSH1 0x0 PUSH2 0xBD2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23FD003D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x8FF400F4 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x673 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x697 SWAP2 SWAP1 PUSH2 0x1034 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6FE PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x72B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x397 SWAP1 PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP5 MSTORE DUP1 SLOAD DUP5 MSTORE SWAP2 DUP3 ADD DUP1 SLOAD SWAP2 DUP5 ADD SWAP2 PUSH2 0x75D SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x789 SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x7EF SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x81B SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x868 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x83D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x868 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x84B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x8 SWAP1 SWAP2 ADD SLOAD PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D3 PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465736372697074696F6E2063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x397 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0x975 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416374696F6E20646174612063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x397 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x985 DUP4 PUSH2 0x104D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 NUMBER SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3BA0B9A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA14 SWAP2 SWAP1 PUSH2 0x1034 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 SHL DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xAA3 SWAP2 SWAP1 PUSH2 0x10C3 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0xAB8 SWAP1 DUP3 PUSH2 0x10C3 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x7 DUP3 ADD DUP1 SLOAD PUSH2 0x100 DUP1 DUP7 ADD MLOAD ISZERO ISZERO MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x120 SWAP1 SWAP2 ADD MLOAD PUSH1 0x8 SWAP1 SWAP2 ADD SSTORE PUSH1 0x40 MLOAD DUP5 SWAP1 PUSH32 0x59DA9DE999FF61B9B811E412DF8F25FF32770A66AE28BCE18473EFAA6EC2BBEB SWAP1 PUSH2 0xB56 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP7 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB6F PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB99 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x397 JUMP JUMPDEST PUSH2 0xBA2 DUP2 PUSH2 0xBD2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x397 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC61 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC45 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP13 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xC9B DUP2 DUP5 ADD DUP14 PUSH2 0xC3B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xCAF DUP2 DUP13 PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP11 SWAP1 SWAP11 MSTORE POP POP PUSH1 0x80 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xA0 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xC0 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD48 DUP4 PUSH2 0xD10 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x140 DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xD7F PUSH2 0x160 DUP6 ADD DUP4 PUSH2 0xC3B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x1F NOT DUP6 DUP5 SUB ADD PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0xD9C DUP4 DUP3 PUSH2 0xC3B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xE0 DUP6 ADD MLOAD PUSH2 0x100 PUSH2 0xDDC DUP2 DUP8 ADD DUP4 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST DUP7 ADD MLOAD SWAP1 POP PUSH2 0x120 PUSH2 0xDF1 DUP7 DUP3 ADD DUP4 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST SWAP6 SWAP1 SWAP6 ADD MLOAD SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0xE33 JUMPI PUSH2 0xE33 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xE5B JUMPI PUSH2 0xE5B PUSH2 0xE02 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0xE74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xECD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEDC DUP7 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0xE18 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xEF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0xF04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF13 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0xE18 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x697 DUP3 PUSH2 0xD10 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF4C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF6C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20646F6573206E6F74206578697374000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE PUSH1 0x0 DUP5 SLOAD PUSH2 0xFBD DUP2 PUSH2 0xF38 JUMP JUMPDEST DUP1 DUP5 DUP8 ADD MSTORE PUSH1 0x40 PUSH1 0x1 DUP1 DUP5 AND PUSH1 0x0 DUP2 EQ PUSH2 0xFDE JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xFF8 JUMPI PUSH2 0x1026 JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP10 DUP5 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x5 SHL DUP10 ADD DUP4 ADD SWAP6 POP PUSH2 0x1026 JUMP JUMPDEST DUP10 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x101E JUMPI DUP2 SLOAD DUP12 DUP3 ADD DUP7 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP9 ADD PUSH2 0x1003 JUMP JUMPDEST DUP11 ADD DUP5 ADD SWAP7 POP POP JUMPDEST POP SWAP4 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1046 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x106D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x10BE JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x109B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10BA JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x10A7 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10DD JUMPI PUSH2 0x10DD PUSH2 0xE02 JUMP JUMPDEST PUSH2 0x10F1 DUP2 PUSH2 0x10EB DUP5 SLOAD PUSH2 0xF38 JUMP JUMPDEST DUP5 PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1126 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x110E JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1155 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1136 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1173 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1196 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0xC3B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11A8 DUP2 DUP9 PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 STATICCALL 0xE5 EXTCODEHASH 0xE0 0xAE 0xB5 0xC8 0xAC NOT COINBASE ADDRESS SDIV 0xEF PUSH5 0x12DAE6BB5F RETURN 0xD3 0xE9 0xD5 AND SHL 0xEF 0xBD 0x27 RETURNDATACOPY 0xF 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"353:5465:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;771:45;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;3992:461;;;;;;:::i;:::-;;:::i;:::-;;5683:133;;;;;;:::i;:::-;5750:11;5780:21;;;:9;:21;;;;;:24;:29;;;5683:133;;;;1890:14:27;;1883:22;1865:41;;1853:2;1838:18;5683:133:24;1725:187:27;5431:97:24;5506:15;;5431:97;;;2063:25:27;;;2051:2;2036:18;5431:97:24;1917:177:27;3294:555:24;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;1638:85::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;2516:32:27;;;2498:51;;2486:2;2471:18;1638:85:0;2352:203:27;5039:329:24;;;;;;:::i;:::-;;:::i;4596:210::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1829:1275::-;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;950:41:24:-;;;;;771:45;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;771:45:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;771:45:24;;-1:-1:-1;771:45:24;;;;;;;;;;;;;:::o;3992:461::-;4064:21;;;;:9;:21;;;;;:24;:29;;4056:65;;;;-1:-1:-1;;;4056:65:24;;;;;;;:::i;:::-;;;;;;;;;4139:21;;;;:9;:21;;;;;:35;;;;;4131:66;;;;-1:-1:-1;;;4131:66:24;;7163:2:27;4131:66:24;;;7145:21:27;7202:2;7182:18;;;7175:30;-1:-1:-1;;;7221:18:27;;;7214:48;7279:18;;4131:66:24;6961:342:27;4131:66:24;4216:21;;;;:9;:21;;;;;:30;;;;;;;;4215:31;4207:69;;;;-1:-1:-1;;;4207:69:24;;7510:2:27;4207:69:24;;;7492:21:27;7549:2;7529:18;;;7522:30;7588:27;7568:18;;;7561:55;7633:18;;4207:69:24;7308:349:27;4207:69:24;4323:21;;;;4356:4;4323:21;;;;;;;:30;;;:37;;-1:-1:-1;;4323:37:24;;;;;4384:62;;4333:10;;4384:62;;;;4413:32;;;4384:62;:::i;:::-;;;;;;;;3992:461;:::o;3294:555::-;1531:13:0;:11;:13::i;:::-;3430:21:24::1;::::0;;;:9:::1;:21;::::0;;;;:24;:29;;3422:65:::1;;;;-1:-1:-1::0;;;3422:65:24::1;;;;;;;:::i;:::-;3506:21;::::0;;;:9:::1;:21;::::0;;;;:35:::1;;::::0;::::1;;3505:36;3497:71;;;::::0;-1:-1:-1;;;3497:71:24;;8955:2:27;3497:71:24::1;::::0;::::1;8937:21:27::0;8994:2;8974:18;;;8967:30;-1:-1:-1;;;9013:18:27;;;9006:52;9075:18;;3497:71:24::1;8753:346:27::0;3497:71:24::1;3586:15:::0;3578:61:::1;;;::::0;-1:-1:-1;;;3578:61:24;;9306:2:27;3578:61:24::1;::::0;::::1;9288:21:27::0;9345:2;9325:18;;;9318:30;-1:-1:-1;;;9364:18:27;;;9357:49;9423:18;;3578:61:24::1;9104:343:27::0;3578:61:24::1;3658:21;::::0;;;:9:::1;:21;::::0;;;;;;;;:37:::1;::::0;::::1;:55:::0;;;3723:35:::1;;:42:::0;;-1:-1:-1;;3723:42:24::1;::::0;;::::1;::::0;;;3789:53;;2063:25:27;;;3658:21:24;;3789:53:::1;::::0;2036:18:27;3789:53:24::1;;;;;;;3294:555:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5039:329:24:-;5322:39;;-1:-1:-1;;;5322:39:24;;-1:-1:-1;;;;;9826:32:27;;;5322:39:24;;;9808:51:27;9875:18;;;9868:34;;;5150:19:24;;5322:5;:20;;;;;;9781:18:27;;5322:39:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5315:46;5039:329;-1:-1:-1;;;5039:329:24:o;4596:210::-;4660:24;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4660:24:24;4704:21;;;;:9;:21;;;;;:24;:29;;4696:65;;;;-1:-1:-1;;;4696:65:24;;;;;;;:::i;:::-;4778:21;;;;:9;:21;;;;;;;;;4771:28;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4771:28:24;;;-1:-1:-1;;4771:28:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4596:210;-1:-1:-1;;4596:210:24:o;1829:1275::-;1955:18;1531:13:0;:11;:13::i;:::-;2021:1:24::1;1999:11;1993:25;:29;1985:69;;;::::0;-1:-1:-1;;;1985:69:24;;10304:2:27;1985:69:24::1;::::0;::::1;10286:21:27::0;10343:2;10323:18;;;10316:30;10382:29;10362:18;;;10355:57;10429:18;;1985:69:24::1;10102:351:27::0;1985:69:24::1;2092:1;2072:10;:17;:21;2064:61;;;::::0;-1:-1:-1;;;2064:61:24;;10660:2:27;2064:61:24::1;::::0;::::1;10642:21:27::0;10699:2;10679:18;;;10672:30;10738:29;10718:18;;;10711:57;10785:18;;2064:61:24::1;10458:351:27::0;2064:61:24::1;2157:15;:17:::0;;;:15:::1;:17;::::0;::::1;:::i;:::-;;;;;2144:30;;2235:21;2259:12;2235:36;;2281:28;2312:5;-1:-1:-1::0;;;;;2312:18:24::1;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2281:51;;2389:22;2424:10;2414:21;;;;;;2389:46;;2478:408;;;;;;;;2505:10;2478:408;;;;2542:11;2478:408;;;;2579:10;2478:408;;;;2619:14;2478:408;;;;2662:13;2478:408;;;;2711:20;2478:408;;;;2770:1;2762:10:::0;::::1;2478:408;;;;2801:5;2478:408;;;;;;2830:5;2478:408;;;;;;2860:15;2478:408;;::::0;2454:9:::1;:21;2464:10;2454:21;;;;;;;;;;;:432;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;2454:432:24::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;2454:432:24::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;;-1:-1:-1::0;;2454:432:24;::::1;;::::0;;;;-1:-1:-1;;2454:432:24;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;2910:187:::1;::::0;2939:10;;2910:187:::1;::::0;::::1;::::0;2963:11;;2988:10;;3012:14;;3040:13;;3067:20;;2910:187:::1;:::i;:::-;;;;;;;;1975:1129;;;1829:1275:::0;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2498:51:27::0;2471:18;;2672:31:0::1;2352:203:27::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:14;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:14;1901:40:0;;;2498:51:27;2471:18;;1901:40:0;2352:203:27;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:180:27:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:27;;14:180;-1:-1:-1;14:180:27:o;199:423::-;241:3;279:5;273:12;306:6;301:3;294:19;331:1;341:162;355:6;352:1;349:13;341:162;;;417:4;473:13;;;469:22;;463:29;445:11;;;441:20;;434:59;370:12;341:162;;;345:3;548:1;541:4;532:6;527:3;523:16;519:27;512:38;611:4;604:2;600:7;595:2;587:6;583:15;579:29;574:3;570:39;566:50;559:57;;;199:423;;;;:::o;723:997::-;1093:4;1122:3;1152:6;1141:9;1134:25;1195:2;1190;1179:9;1175:18;1168:30;1221:45;1262:2;1251:9;1247:18;1239:6;1221:45;:::i;:::-;1207:59;;1314:9;1306:6;1302:22;1297:2;1286:9;1282:18;1275:50;1342:33;1368:6;1360;1342:33;:::i;:::-;1406:2;1391:18;;1384:34;;;;-1:-1:-1;;1449:3:27;1434:19;;1427:35;;;;1493:3;1478:19;;1471:35;;;;1537:3;1522:19;;1515:35;;;;1594:14;1587:22;1581:3;1566:19;;1559:51;1654:14;1647:22;1641:3;1626:19;;1619:51;1701:3;1686:19;;;1679:35;1334:41;723:997;-1:-1:-1;;;723:997:27:o;2099:248::-;2167:6;2175;2228:2;2216:9;2207:7;2203:23;2199:32;2196:52;;;2244:1;2241;2234:12;2196:52;-1:-1:-1;;2267:23:27;;;2337:2;2322:18;;;2309:32;;-1:-1:-1;2099:248:27:o;2560:173::-;2628:20;;-1:-1:-1;;;;;2677:31:27;;2667:42;;2657:70;;2723:1;2720;2713:12;2657:70;2560:173;;;:::o;2738:254::-;2806:6;2814;2867:2;2855:9;2846:7;2842:23;2838:32;2835:52;;;2883:1;2880;2873:12;2835:52;2906:29;2925:9;2906:29;:::i;:::-;2896:39;2982:2;2967:18;;;;2954:32;;-1:-1:-1;;;2738:254:27:o;2997:1216::-;3178:2;3167:9;3160:21;3223:6;3217:13;3212:2;3201:9;3197:18;3190:41;3141:4;3278:2;3270:6;3266:15;3260:22;3301:6;3343:2;3338;3327:9;3323:18;3316:30;3369:52;3416:3;3405:9;3401:19;3387:12;3369:52;:::i;:::-;3355:66;;3470:2;3462:6;3458:15;3452:22;3542:2;3538:7;3526:9;3518:6;3514:22;3510:36;3505:2;3494:9;3490:18;3483:64;3570:41;3604:6;3588:14;3570:41;:::i;:::-;3556:55;;;3666:2;3658:6;3654:15;3648:22;3642:3;3631:9;3627:19;3620:51;3726:3;3718:6;3714:16;3708:23;3702:3;3691:9;3687:19;3680:52;3787:3;3779:6;3775:16;3769:23;3763:3;3752:9;3748:19;3741:52;3848:3;3840:6;3836:16;3830:23;3824:3;3813:9;3809:19;3802:52;3903:3;3895:6;3891:16;3885:23;3927:3;3939:51;3986:2;3975:9;3971:18;3955:14;697:13;690:21;678:34;;627:91;3939:51;4027:15;;4021:22;;-1:-1:-1;4062:3:27;4074:51;4106:18;;;4021:22;697:13;690:21;678:34;;627:91;4074:51;4167:15;;;;4161:22;4141:18;;4134:50;;;;-1:-1:-1;4201:6:27;2997:1216;-1:-1:-1;2997:1216:27:o;4218:127::-;4279:10;4274:3;4270:20;4267:1;4260:31;4310:4;4307:1;4300:15;4334:4;4331:1;4324:15;4350:632;4415:5;4445:18;4486:2;4478:6;4475:14;4472:40;;;4492:18;;:::i;:::-;4567:2;4561:9;4535:2;4621:15;;-1:-1:-1;;4617:24:27;;;4643:2;4613:33;4609:42;4597:55;;;4667:18;;;4687:22;;;4664:46;4661:72;;;4713:18;;:::i;:::-;4753:10;4749:2;4742:22;4782:6;4773:15;;4812:6;4804;4797:22;4852:3;4843:6;4838:3;4834:16;4831:25;4828:45;;;4869:1;4866;4859:12;4828:45;4919:6;4914:3;4907:4;4899:6;4895:17;4882:44;4974:1;4967:4;4958:6;4950;4946:19;4942:30;4935:41;;;;4350:632;;;;;:::o;4987:806::-;5074:6;5082;5135:2;5123:9;5114:7;5110:23;5106:32;5103:52;;;5151:1;5148;5141:12;5103:52;5191:9;5178:23;5220:18;5261:2;5253:6;5250:14;5247:34;;;5277:1;5274;5267:12;5247:34;5315:6;5304:9;5300:22;5290:32;;5360:7;5353:4;5349:2;5345:13;5341:27;5331:55;;5382:1;5379;5372:12;5331:55;5405:76;5473:7;5468:2;5455:16;5448:4;5444:2;5440:13;5405:76;:::i;:::-;5395:86;;5534:4;5523:9;5519:20;5506:34;5490:50;;5565:2;5555:8;5552:16;5549:36;;;5581:1;5578;5571:12;5549:36;-1:-1:-1;5604:24:27;;5659:4;5651:13;;5647:27;-1:-1:-1;5637:55:27;;5688:1;5685;5678:12;5637:55;5711:76;5779:7;5774:2;5761:16;5754:4;5750:2;5746:13;5711:76;:::i;:::-;5701:86;;;4987:806;;;;;:::o;5798:186::-;5857:6;5910:2;5898:9;5889:7;5885:23;5881:32;5878:52;;;5926:1;5923;5916:12;5878:52;5949:29;5968:9;5949:29;:::i;6224:380::-;6303:1;6299:12;;;;6346;;;6367:61;;6421:4;6413:6;6409:17;6399:27;;6367:61;6474:2;6466:6;6463:14;6443:18;6440:38;6437:161;;6520:10;6515:3;6511:20;6508:1;6501:31;6555:4;6552:1;6545:15;6583:4;6580:1;6573:15;6437:161;;6224:380;;;:::o;6609:347::-;6811:2;6793:21;;;6850:2;6830:18;;;6823:30;6889:25;6884:2;6869:18;;6862:53;6947:2;6932:18;;6609:347::o;7787:961::-;7894:4;7923:2;7952;7941:9;7934:21;7975:1;8008:6;8002:13;8038:36;8064:9;8038:36;:::i;:::-;8110:6;8105:2;8094:9;8090:18;8083:34;8136:2;8157:1;8189:2;8178:9;8174:18;8206:1;8201:158;;;;8373:1;8368:354;;;;8167:555;;8201:158;-1:-1:-1;;8249:24:27;;8229:18;;;8222:52;8327:14;;8320:22;8317:1;8313:30;8298:46;;8294:55;;;-1:-1:-1;8201:158:27;;8368:354;8399:6;8396:1;8389:17;8447:2;8444:1;8434:16;8472:1;8486:180;8500:6;8497:1;8494:13;8486:180;;;8593:14;;8569:17;;;8565:26;;8558:50;8636:16;;;;8515:10;;8486:180;;;8690:17;;8686:26;;;-1:-1:-1;;8167:555:27;-1:-1:-1;8739:3:27;;7787:961;-1:-1:-1;;;;;;;;7787:961:27:o;9913:184::-;9983:6;10036:2;10024:9;10015:7;10011:23;10007:32;10004:52;;;10052:1;10049;10042:12;10004:52;-1:-1:-1;10075:16:27;;9913:184;-1:-1:-1;9913:184:27:o;10814:232::-;10853:3;10874:17;;;10871:140;;10933:10;10928:3;10924:20;10921:1;10914:31;10968:4;10965:1;10958:15;10996:4;10993:1;10986:15;10871:140;-1:-1:-1;11038:1:27;11027:13;;10814:232::o;11051:545::-;11153:2;11148:3;11145:11;11142:448;;;11189:1;11214:5;11210:2;11203:17;11259:4;11255:2;11245:19;11329:2;11317:10;11313:19;11310:1;11306:27;11300:4;11296:38;11365:4;11353:10;11350:20;11347:47;;;-1:-1:-1;11388:4:27;11347:47;11443:2;11438:3;11434:12;11431:1;11427:20;11421:4;11417:31;11407:41;;11498:82;11516:2;11509:5;11506:13;11498:82;;;11561:17;;;11542:1;11531:13;11498:82;;;11502:3;;;11142:448;11051:545;;;:::o;11772:1351::-;11898:3;11892:10;11925:18;11917:6;11914:30;11911:56;;;11947:18;;:::i;:::-;11976:97;12066:6;12026:38;12058:4;12052:11;12026:38;:::i;:::-;12020:4;11976:97;:::i;:::-;12128:4;;12192:2;12181:14;;12209:1;12204:662;;;;12910:1;12927:6;12924:89;;;-1:-1:-1;12979:19:27;;;12973:26;12924:89;-1:-1:-1;;11729:1:27;11725:11;;;11721:24;11717:29;11707:40;11753:1;11749:11;;;11704:57;13026:81;;12174:943;;12204:662;7734:1;7727:14;;;7771:4;7758:18;;-1:-1:-1;;12240:20:27;;;12357:236;12371:7;12368:1;12365:14;12357:236;;;12460:19;;;12454:26;12439:42;;12552:27;;;;12520:1;12508:14;;;;12387:19;;12357:236;;;12361:3;12621:6;12612:7;12609:19;12606:201;;;12682:19;;;12676:26;-1:-1:-1;;12765:1:27;12761:14;;;12777:3;12757:24;12753:37;12749:42;12734:58;12719:74;;12606:201;-1:-1:-1;;;;;12853:1:27;12837:14;;;12833:22;12820:36;;-1:-1:-1;11772:1351:27:o;14482:597::-;14761:3;14750:9;14743:22;14724:4;14788:46;14829:3;14818:9;14814:19;14806:6;14788:46;:::i;:::-;14882:9;14874:6;14870:22;14865:2;14854:9;14850:18;14843:50;14910:33;14936:6;14928;14910:33;:::i;:::-;14974:2;14959:18;;14952:34;;;;-1:-1:-1;;15017:2:27;15002:18;;14995:34;;;;15060:3;15045:19;;;15038:35;14902:41;14482:597;-1:-1:-1;;14482:597:27:o"},"methodIdentifiers":{"createProposal(string,bytes)":"d182fb9e","executeProposal(uint256)":"0d61b519","getProposal(uint256)":"c7f758a8","getVotingPowerAtBlock(address,uint256)":"abebe45c","nextProposalId()":"2ab09d14","owner()":"8da5cb5b","proposalExists(uint256)":"1374b22d","proposals(uint256)":"013cf08b","publishVotingPowerRoot(uint256,bytes32)":"6f17c156","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","vault()":"fbfa77cf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"actionData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"actionDataHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"snapshotBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"exchangeRateSnapshot\",\"type\":\"uint256\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"actionData\",\"type\":\"bytes\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"votingPowerRoot\",\"type\":\"bytes32\"}],\"name\":\"VotingPowerRootPublished\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"actionData\",\"type\":\"bytes\"}],\"name\":\"createProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"actionData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"actionDataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"snapshotBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeRateSnapshot\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"votingPowerRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"rootPublished\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernanceRootPublisher.Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getVotingPowerAtBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"votingPower\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"actionData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"actionDataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"snapshotBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeRateSnapshot\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"votingPowerRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"rootPublished\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"votingPowerRoot\",\"type\":\"bytes32\"}],\"name\":\"publishVotingPowerRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract LiquidStakingVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Creates governance proposals and publishes voting power snapshots Handles proposal creation, snapshot taking, and root publishing for cross-chain voting\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"createProposal(string,bytes)\":{\"details\":\"Create a new governance proposal\",\"params\":{\"actionData\":\"Encoded action data to execute if proposal passes\",\"description\":\"Human-readable description of the proposal\"},\"returns\":{\"proposalId\":\"ID of the created proposal\"}},\"executeProposal(uint256)\":{\"details\":\"Execute a proposal (called by GovernanceExecutor)\",\"params\":{\"proposalId\":\"ID of the proposal to execute\"}},\"getProposal(uint256)\":{\"details\":\"Get proposal details\",\"params\":{\"proposalId\":\"ID of the proposal\"},\"returns\":{\"proposal\":\"Proposal struct\"}},\"getVotingPowerAtBlock(address,uint256)\":{\"details\":\"Get voting power for a user at a specific block\",\"params\":{\"blockNumber\":\"Block number for snapshot\",\"user\":\"User address\"},\"returns\":{\"votingPower\":\"User's voting power at the snapshot\"}},\"nextProposalId()\":{\"details\":\"Get the next proposal ID\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proposalExists(uint256)\":{\"details\":\"Check if a proposal exists\",\"params\":{\"proposalId\":\"ID of the proposal\"},\"returns\":{\"exists\":\"True if proposal exists\"}},\"publishVotingPowerRoot(uint256,bytes32)\":{\"details\":\"Publish voting power root for a proposal\",\"params\":{\"proposalId\":\"ID of the proposal\",\"votingPowerRoot\":\"Merkle root of voting power snapshot\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"GovernanceRootPublisher\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GovernanceRootPublisher.sol\":\"GovernanceRootPublisher\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/GovernanceRootPublisher.sol\":{\"keccak256\":\"0x503bc69bf3bc0e7654e2df3ce0fd88abccc87c77ff2ace69e4eb2c5e077832b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://726384e032777624f20d6c58a566f22abfb0c09b5e0866f26c2bbec0a65dad51\",\"dweb:/ipfs/QmYLXDptQRpZPGnzWUEffntnHonBiXQSeaoMrp3CoyFxkB\"]},\"contracts/LiquidStakingVault.sol\":{\"keccak256\":\"0x3c2944741fb3047d2783287e7c95b026523f333089a8b6ca2178788c0d5e91d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78457c25656d267706a5a430b4db742c53b1d3c8b01a2df0a149584cb1f7458e\",\"dweb:/ipfs/QmYrpPM6s8z83mjV9GB7P8gqX56sNabxsPwJyQGpSNHNoQ\"]},\"contracts/WithdrawalNFT.sol\":{\"keccak256\":\"0x45ee217cf8ca1652f79774ffce52c37a55200d1313503de9aeed62e14f7f8058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f5a6d2bdb7d63b79308711271e4c894d6a78766f2dbbd939836515d8c19c289\",\"dweb:/ipfs/QmVN2AidKgsRmfPpfaBVNkAVTEKU5LT8Sw6i3j4Mc8xL96\"]}},\"version\":1}"}},"contracts/LiquidStakingVault.sol":{"LiquidStakingVault":{"abi":[{"inputs":[{"internalType":"address","name":"_asset","type":"address"},{"internalType":"address","name":"_withdrawalNFT","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newExchangeRate","type":"uint256"}],"name":"RewardsDistributed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"nftId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"}],"name":"WithdrawalClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nftId","type":"uint256"}],"name":"WithdrawalInitiated","type":"event"},{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UNBONDING_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"asset","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"nftId","type":"uint256"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"convertToAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"convertToShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"rewardAmount","type":"uint256"}],"name":"distributeRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"exchangeRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"getVotingPower","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"initiateWithdraw","outputs":[{"internalType":"uint256","name":"nftId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lastUpdateTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawalNFT","outputs":[{"internalType":"contract WithdrawalNFT","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2758":{"entryPoint":null,"id":2758,"parameterSlots":0,"returnSlots":0},"@_426":{"entryPoint":null,"id":426,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8454":{"entryPoint":null,"id":8454,"parameterSlots":4,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":193,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":275,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":326,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":501,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":705,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":788,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":645,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":304,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4705:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:27","statements":[{"nodeType":"YulAssignment","src":"84:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:27"},"nodeType":"YulFunctionCall","src":"93:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:27"}]},{"body":{"nodeType":"YulBlock","src":"169:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:27"},"nodeType":"YulFunctionCall","src":"171:12:27"},"nodeType":"YulExpressionStatement","src":"171:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:27"},"nodeType":"YulFunctionCall","src":"150:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:27"},"nodeType":"YulFunctionCall","src":"146:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:27"},"nodeType":"YulFunctionCall","src":"135:31:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:27"},"nodeType":"YulFunctionCall","src":"125:42:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:27"},"nodeType":"YulFunctionCall","src":"118:50:27"},"nodeType":"YulIf","src":"115:70:27"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:27","type":""}],"src":"14:177:27"},{"body":{"nodeType":"YulBlock","src":"228:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"245:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"252:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"257:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"248:3:27"},"nodeType":"YulFunctionCall","src":"248:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"238:6:27"},"nodeType":"YulFunctionCall","src":"238:31:27"},"nodeType":"YulExpressionStatement","src":"238:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"285:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"288:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"278:6:27"},"nodeType":"YulFunctionCall","src":"278:15:27"},"nodeType":"YulExpressionStatement","src":"278:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"309:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"312:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"302:6:27"},"nodeType":"YulFunctionCall","src":"302:15:27"},"nodeType":"YulExpressionStatement","src":"302:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"196:127:27"},{"body":{"nodeType":"YulBlock","src":"392:776:27","statements":[{"body":{"nodeType":"YulBlock","src":"441:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"450:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"453:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"443:6:27"},"nodeType":"YulFunctionCall","src":"443:12:27"},"nodeType":"YulExpressionStatement","src":"443:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"420:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"428:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"416:3:27"},"nodeType":"YulFunctionCall","src":"416:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"435:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"412:3:27"},"nodeType":"YulFunctionCall","src":"412:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"405:6:27"},"nodeType":"YulFunctionCall","src":"405:35:27"},"nodeType":"YulIf","src":"402:55:27"},{"nodeType":"YulVariableDeclaration","src":"466:23:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"482:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"476:5:27"},"nodeType":"YulFunctionCall","src":"476:13:27"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"470:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"498:28:27","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"516:2:27","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"520:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"512:3:27"},"nodeType":"YulFunctionCall","src":"512:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"524:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"508:3:27"},"nodeType":"YulFunctionCall","src":"508:18:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"502:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"549:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"551:16:27"},"nodeType":"YulFunctionCall","src":"551:18:27"},"nodeType":"YulExpressionStatement","src":"551:18:27"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"541:2:27"},{"name":"_2","nodeType":"YulIdentifier","src":"545:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"538:2:27"},"nodeType":"YulFunctionCall","src":"538:10:27"},"nodeType":"YulIf","src":"535:36:27"},{"nodeType":"YulVariableDeclaration","src":"580:17:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"594:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"590:3:27"},"nodeType":"YulFunctionCall","src":"590:7:27"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"584:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"606:23:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"626:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"620:5:27"},"nodeType":"YulFunctionCall","src":"620:9:27"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"610:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"638:71:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"660:6:27"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"684:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"688:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"680:3:27"},"nodeType":"YulFunctionCall","src":"680:13:27"},{"name":"_3","nodeType":"YulIdentifier","src":"695:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"676:3:27"},"nodeType":"YulFunctionCall","src":"676:22:27"},{"kind":"number","nodeType":"YulLiteral","src":"700:2:27","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:27"},"nodeType":"YulFunctionCall","src":"672:31:27"},{"name":"_3","nodeType":"YulIdentifier","src":"705:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"668:3:27"},"nodeType":"YulFunctionCall","src":"668:40:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"656:3:27"},"nodeType":"YulFunctionCall","src":"656:53:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"642:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"768:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"770:16:27"},"nodeType":"YulFunctionCall","src":"770:18:27"},"nodeType":"YulExpressionStatement","src":"770:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"727:10:27"},{"name":"_2","nodeType":"YulIdentifier","src":"739:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"724:2:27"},"nodeType":"YulFunctionCall","src":"724:18:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"747:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"759:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"744:2:27"},"nodeType":"YulFunctionCall","src":"744:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"721:2:27"},"nodeType":"YulFunctionCall","src":"721:46:27"},"nodeType":"YulIf","src":"718:72:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"806:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"810:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"799:6:27"},"nodeType":"YulFunctionCall","src":"799:22:27"},"nodeType":"YulExpressionStatement","src":"799:22:27"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"837:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"845:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"830:6:27"},"nodeType":"YulFunctionCall","src":"830:18:27"},"nodeType":"YulExpressionStatement","src":"830:18:27"},{"nodeType":"YulVariableDeclaration","src":"857:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"867:4:27","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"861:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"917:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"926:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"929:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"919:6:27"},"nodeType":"YulFunctionCall","src":"919:12:27"},"nodeType":"YulExpressionStatement","src":"919:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"894:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"902:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"890:3:27"},"nodeType":"YulFunctionCall","src":"890:15:27"},{"name":"_4","nodeType":"YulIdentifier","src":"907:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"886:3:27"},"nodeType":"YulFunctionCall","src":"886:24:27"},{"name":"end","nodeType":"YulIdentifier","src":"912:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"883:2:27"},"nodeType":"YulFunctionCall","src":"883:33:27"},"nodeType":"YulIf","src":"880:53:27"},{"nodeType":"YulVariableDeclaration","src":"942:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"951:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"946:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1007:87:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1036:6:27"},{"name":"i","nodeType":"YulIdentifier","src":"1044:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1032:3:27"},"nodeType":"YulFunctionCall","src":"1032:14:27"},{"name":"_4","nodeType":"YulIdentifier","src":"1048:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1028:3:27"},"nodeType":"YulFunctionCall","src":"1028:23:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1067:6:27"},{"name":"i","nodeType":"YulIdentifier","src":"1075:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1063:3:27"},"nodeType":"YulFunctionCall","src":"1063:14:27"},{"name":"_4","nodeType":"YulIdentifier","src":"1079:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1059:3:27"},"nodeType":"YulFunctionCall","src":"1059:23:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1053:5:27"},"nodeType":"YulFunctionCall","src":"1053:30:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1021:6:27"},"nodeType":"YulFunctionCall","src":"1021:63:27"},"nodeType":"YulExpressionStatement","src":"1021:63:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"972:1:27"},{"name":"_1","nodeType":"YulIdentifier","src":"975:2:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"969:2:27"},"nodeType":"YulFunctionCall","src":"969:9:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"979:19:27","statements":[{"nodeType":"YulAssignment","src":"981:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"990:1:27"},{"name":"_4","nodeType":"YulIdentifier","src":"993:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"986:3:27"},"nodeType":"YulFunctionCall","src":"986:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"981:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"965:3:27","statements":[]},"src":"961:133:27"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1118:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1126:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1114:3:27"},"nodeType":"YulFunctionCall","src":"1114:15:27"},{"name":"_4","nodeType":"YulIdentifier","src":"1131:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1110:3:27"},"nodeType":"YulFunctionCall","src":"1110:24:27"},{"kind":"number","nodeType":"YulLiteral","src":"1136:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1103:6:27"},"nodeType":"YulFunctionCall","src":"1103:35:27"},"nodeType":"YulExpressionStatement","src":"1103:35:27"},{"nodeType":"YulAssignment","src":"1147:15:27","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1156:6:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1147:5:27"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"366:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"374:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"382:5:27","type":""}],"src":"328:840:27"},{"body":{"nodeType":"YulBlock","src":"1325:581:27","statements":[{"body":{"nodeType":"YulBlock","src":"1372:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1381:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1384:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1374:6:27"},"nodeType":"YulFunctionCall","src":"1374:12:27"},"nodeType":"YulExpressionStatement","src":"1374:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1346:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1355:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1342:3:27"},"nodeType":"YulFunctionCall","src":"1342:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1367:3:27","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1338:3:27"},"nodeType":"YulFunctionCall","src":"1338:33:27"},"nodeType":"YulIf","src":"1335:53:27"},{"nodeType":"YulAssignment","src":"1397:50:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1437:9:27"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"1407:29:27"},"nodeType":"YulFunctionCall","src":"1407:40:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1397:6:27"}]},{"nodeType":"YulAssignment","src":"1456:59:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1500:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1511:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1496:3:27"},"nodeType":"YulFunctionCall","src":"1496:18:27"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"1466:29:27"},"nodeType":"YulFunctionCall","src":"1466:49:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1456:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"1524:39:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1548:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1559:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1544:3:27"},"nodeType":"YulFunctionCall","src":"1544:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1538:5:27"},"nodeType":"YulFunctionCall","src":"1538:25:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1528:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1572:28:27","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1590:2:27","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1594:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1586:3:27"},"nodeType":"YulFunctionCall","src":"1586:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"1598:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1582:3:27"},"nodeType":"YulFunctionCall","src":"1582:18:27"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1576:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1627:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1636:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1639:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1629:6:27"},"nodeType":"YulFunctionCall","src":"1629:12:27"},"nodeType":"YulExpressionStatement","src":"1629:12:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1615:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1623:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1612:2:27"},"nodeType":"YulFunctionCall","src":"1612:14:27"},"nodeType":"YulIf","src":"1609:34:27"},{"nodeType":"YulAssignment","src":"1652:71:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1695:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"1706:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1691:3:27"},"nodeType":"YulFunctionCall","src":"1691:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1715:7:27"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1662:28:27"},"nodeType":"YulFunctionCall","src":"1662:61:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1652:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"1732:41:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1758:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1769:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1754:3:27"},"nodeType":"YulFunctionCall","src":"1754:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1748:5:27"},"nodeType":"YulFunctionCall","src":"1748:25:27"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1736:8:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1802:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1811:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1814:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1804:6:27"},"nodeType":"YulFunctionCall","src":"1804:12:27"},"nodeType":"YulExpressionStatement","src":"1804:12:27"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1788:8:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1798:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1785:2:27"},"nodeType":"YulFunctionCall","src":"1785:16:27"},"nodeType":"YulIf","src":"1782:36:27"},{"nodeType":"YulAssignment","src":"1827:73:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1870:9:27"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1881:8:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1866:3:27"},"nodeType":"YulFunctionCall","src":"1866:24:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1892:7:27"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1837:28:27"},"nodeType":"YulFunctionCall","src":"1837:63:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1827:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1267:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1278:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1290:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1298:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1306:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1314:6:27","type":""}],"src":"1173:733:27"},{"body":{"nodeType":"YulBlock","src":"1966:325:27","statements":[{"nodeType":"YulAssignment","src":"1976:22:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1990:1:27","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1993:4:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1986:3:27"},"nodeType":"YulFunctionCall","src":"1986:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1976:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"2007:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2037:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"2043:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2033:3:27"},"nodeType":"YulFunctionCall","src":"2033:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2011:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2084:31:27","statements":[{"nodeType":"YulAssignment","src":"2086:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2100:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2108:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2096:3:27"},"nodeType":"YulFunctionCall","src":"2096:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2086:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2064:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2057:6:27"},"nodeType":"YulFunctionCall","src":"2057:26:27"},"nodeType":"YulIf","src":"2054:61:27"},{"body":{"nodeType":"YulBlock","src":"2174:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2195:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2202:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2207:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2198:3:27"},"nodeType":"YulFunctionCall","src":"2198:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2188:6:27"},"nodeType":"YulFunctionCall","src":"2188:31:27"},"nodeType":"YulExpressionStatement","src":"2188:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2239:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2242:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2232:6:27"},"nodeType":"YulFunctionCall","src":"2232:15:27"},"nodeType":"YulExpressionStatement","src":"2232:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2267:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2270:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2260:6:27"},"nodeType":"YulFunctionCall","src":"2260:15:27"},"nodeType":"YulExpressionStatement","src":"2260:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2130:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2153:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2161:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2150:2:27"},"nodeType":"YulFunctionCall","src":"2150:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2127:2:27"},"nodeType":"YulFunctionCall","src":"2127:38:27"},"nodeType":"YulIf","src":"2124:161:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1946:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1955:6:27","type":""}],"src":"1911:380:27"},{"body":{"nodeType":"YulBlock","src":"2352:65:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2369:1:27","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2372:3:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2362:6:27"},"nodeType":"YulFunctionCall","src":"2362:14:27"},"nodeType":"YulExpressionStatement","src":"2362:14:27"},{"nodeType":"YulAssignment","src":"2385:26:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2403:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2406:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2393:9:27"},"nodeType":"YulFunctionCall","src":"2393:18:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2385:4:27"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2335:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2343:4:27","type":""}],"src":"2296:121:27"},{"body":{"nodeType":"YulBlock","src":"2503:464:27","statements":[{"body":{"nodeType":"YulBlock","src":"2536:425:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2550:11:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2560:1:27","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2554:2:27","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2581:2:27"},{"name":"array","nodeType":"YulIdentifier","src":"2585:5:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2574:6:27"},"nodeType":"YulFunctionCall","src":"2574:17:27"},"nodeType":"YulExpressionStatement","src":"2574:17:27"},{"nodeType":"YulVariableDeclaration","src":"2604:31:27","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2626:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"2630:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2616:9:27"},"nodeType":"YulFunctionCall","src":"2616:19:27"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2608:4:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2648:57:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2671:4:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:27","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2688:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"2700:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2684:3:27"},"nodeType":"YulFunctionCall","src":"2684:19:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2677:3:27"},"nodeType":"YulFunctionCall","src":"2677:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2667:3:27"},"nodeType":"YulFunctionCall","src":"2667:38:27"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2652:11:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2742:23:27","statements":[{"nodeType":"YulAssignment","src":"2744:19:27","value":{"name":"data","nodeType":"YulIdentifier","src":"2759:4:27"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2744:11:27"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2724:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"2736:4:27","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2721:2:27"},"nodeType":"YulFunctionCall","src":"2721:20:27"},"nodeType":"YulIf","src":"2718:47:27"},{"nodeType":"YulVariableDeclaration","src":"2778:41:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2792:4:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2802:1:27","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2809:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"2814:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2805:3:27"},"nodeType":"YulFunctionCall","src":"2805:12:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2798:3:27"},"nodeType":"YulFunctionCall","src":"2798:20:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2788:3:27"},"nodeType":"YulFunctionCall","src":"2788:31:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2782:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2832:24:27","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2845:11:27"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2836:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2930:21:27","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2939:5:27"},{"name":"_1","nodeType":"YulIdentifier","src":"2946:2:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2932:6:27"},"nodeType":"YulFunctionCall","src":"2932:17:27"},"nodeType":"YulExpressionStatement","src":"2932:17:27"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2880:5:27"},{"name":"_2","nodeType":"YulIdentifier","src":"2887:2:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2877:2:27"},"nodeType":"YulFunctionCall","src":"2877:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2891:26:27","statements":[{"nodeType":"YulAssignment","src":"2893:22:27","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2906:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2913:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2902:3:27"},"nodeType":"YulFunctionCall","src":"2902:13:27"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2893:5:27"}]}]},"pre":{"nodeType":"YulBlock","src":"2873:3:27","statements":[]},"src":"2869:82:27"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2519:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"2524:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2516:2:27"},"nodeType":"YulFunctionCall","src":"2516:11:27"},"nodeType":"YulIf","src":"2513:448:27"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2475:5:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"2482:3:27","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2487:10:27","type":""}],"src":"2422:545:27"},{"body":{"nodeType":"YulBlock","src":"3057:81:27","statements":[{"nodeType":"YulAssignment","src":"3067:65:27","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3082:4:27"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:27","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"3103:3:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3096:3:27"},"nodeType":"YulFunctionCall","src":"3096:11:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3113:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3109:3:27"},"nodeType":"YulFunctionCall","src":"3109:6:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3092:3:27"},"nodeType":"YulFunctionCall","src":"3092:24:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3088:3:27"},"nodeType":"YulFunctionCall","src":"3088:29:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3078:3:27"},"nodeType":"YulFunctionCall","src":"3078:40:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3124:1:27","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"3127:3:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3120:3:27"},"nodeType":"YulFunctionCall","src":"3120:11:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3075:2:27"},"nodeType":"YulFunctionCall","src":"3075:57:27"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3067:4:27"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3034:4:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"3040:3:27","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3048:4:27","type":""}],"src":"2972:166:27"},{"body":{"nodeType":"YulBlock","src":"3239:1256:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3249:24:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3269:3:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3263:5:27"},"nodeType":"YulFunctionCall","src":"3263:10:27"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3253:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3316:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3318:16:27"},"nodeType":"YulFunctionCall","src":"3318:18:27"},"nodeType":"YulExpressionStatement","src":"3318:18:27"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3288:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3304:2:27","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3308:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3300:3:27"},"nodeType":"YulFunctionCall","src":"3300:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"3312:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3296:3:27"},"nodeType":"YulFunctionCall","src":"3296:18:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3285:2:27"},"nodeType":"YulFunctionCall","src":"3285:30:27"},"nodeType":"YulIf","src":"3282:56:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3391:4:27"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3429:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3423:5:27"},"nodeType":"YulFunctionCall","src":"3423:11:27"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3397:25:27"},"nodeType":"YulFunctionCall","src":"3397:38:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"3437:6:27"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"3347:43:27"},"nodeType":"YulFunctionCall","src":"3347:97:27"},"nodeType":"YulExpressionStatement","src":"3347:97:27"},{"nodeType":"YulVariableDeclaration","src":"3453:18:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3470:1:27","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3457:9:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3480:23:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3499:4:27","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3484:11:27","type":""}]},{"nodeType":"YulAssignment","src":"3512:24:27","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3525:11:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3512:9:27"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3582:656:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3596:35:27","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3615:6:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3627:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3623:3:27"},"nodeType":"YulFunctionCall","src":"3623:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3611:3:27"},"nodeType":"YulFunctionCall","src":"3611:20:27"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3600:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3644:49:27","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3688:4:27"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3658:29:27"},"nodeType":"YulFunctionCall","src":"3658:35:27"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3648:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3706:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3715:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3710:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3793:172:27","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3818:6:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3836:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3841:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3832:3:27"},"nodeType":"YulFunctionCall","src":"3832:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3826:5:27"},"nodeType":"YulFunctionCall","src":"3826:26:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3811:6:27"},"nodeType":"YulFunctionCall","src":"3811:42:27"},"nodeType":"YulExpressionStatement","src":"3811:42:27"},{"nodeType":"YulAssignment","src":"3870:24:27","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3884:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3892:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3880:3:27"},"nodeType":"YulFunctionCall","src":"3880:14:27"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3870:6:27"}]},{"nodeType":"YulAssignment","src":"3911:40:27","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3928:9:27"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3939:11:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3924:3:27"},"nodeType":"YulFunctionCall","src":"3924:27:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3911:9:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3740:1:27"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3743:7:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3737:2:27"},"nodeType":"YulFunctionCall","src":"3737:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3752:28:27","statements":[{"nodeType":"YulAssignment","src":"3754:24:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3763:1:27"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3766:11:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3759:3:27"},"nodeType":"YulFunctionCall","src":"3759:19:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3754:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"3733:3:27","statements":[]},"src":"3729:236:27"},{"body":{"nodeType":"YulBlock","src":"4013:166:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4031:43:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4058:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4063:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4054:3:27"},"nodeType":"YulFunctionCall","src":"4054:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4048:5:27"},"nodeType":"YulFunctionCall","src":"4048:26:27"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4035:9:27","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4098:6:27"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4110:9:27"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4137:1:27","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"4140:6:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4133:3:27"},"nodeType":"YulFunctionCall","src":"4133:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"4149:3:27","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4129:3:27"},"nodeType":"YulFunctionCall","src":"4129:24:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4159:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4155:3:27"},"nodeType":"YulFunctionCall","src":"4155:6:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4125:3:27"},"nodeType":"YulFunctionCall","src":"4125:37:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4121:3:27"},"nodeType":"YulFunctionCall","src":"4121:42:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4106:3:27"},"nodeType":"YulFunctionCall","src":"4106:58:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4091:6:27"},"nodeType":"YulFunctionCall","src":"4091:74:27"},"nodeType":"YulExpressionStatement","src":"4091:74:27"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3984:7:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"3993:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3981:2:27"},"nodeType":"YulFunctionCall","src":"3981:19:27"},"nodeType":"YulIf","src":"3978:201:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4199:4:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4213:1:27","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"4216:6:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4209:3:27"},"nodeType":"YulFunctionCall","src":"4209:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"4225:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4205:3:27"},"nodeType":"YulFunctionCall","src":"4205:22:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4192:6:27"},"nodeType":"YulFunctionCall","src":"4192:36:27"},"nodeType":"YulExpressionStatement","src":"4192:36:27"}]},"nodeType":"YulCase","src":"3575:663:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3580:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"4255:234:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4269:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4282:1:27","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4273:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4318:67:27","statements":[{"nodeType":"YulAssignment","src":"4336:35:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4355:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4360:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4351:3:27"},"nodeType":"YulFunctionCall","src":"4351:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4345:5:27"},"nodeType":"YulFunctionCall","src":"4345:26:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4336:5:27"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"4299:6:27"},"nodeType":"YulIf","src":"4296:89:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4405:4:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4464:5:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"4471:6:27"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4411:52:27"},"nodeType":"YulFunctionCall","src":"4411:67:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4398:6:27"},"nodeType":"YulFunctionCall","src":"4398:81:27"},"nodeType":"YulExpressionStatement","src":"4398:81:27"}]},"nodeType":"YulCase","src":"4247:242:27","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3555:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3563:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3552:2:27"},"nodeType":"YulFunctionCall","src":"3552:14:27"},"nodeType":"YulSwitch","src":"3545:944:27"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3224:4:27","type":""},{"name":"src","nodeType":"YulTypedName","src":"3230:3:27","type":""}],"src":"3143:1352:27"},{"body":{"nodeType":"YulBlock","src":"4601:102:27","statements":[{"nodeType":"YulAssignment","src":"4611:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4623:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4634:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4619:3:27"},"nodeType":"YulFunctionCall","src":"4619:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4611:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4653:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4668:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4684:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4689:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4680:3:27"},"nodeType":"YulFunctionCall","src":"4680:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"4693:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4676:3:27"},"nodeType":"YulFunctionCall","src":"4676:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4664:3:27"},"nodeType":"YulFunctionCall","src":"4664:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4646:6:27"},"nodeType":"YulFunctionCall","src":"4646:51:27"},"nodeType":"YulExpressionStatement","src":"4646:51:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4570:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4581:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4592:4:27","type":""}],"src":"4500:203:27"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        let offset := mload(add(headStart, 64))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1AD9 CODESIZE SUB DUP1 PUSH3 0x1AD9 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1F5 JUMP JUMPDEST CALLER DUP3 DUP3 PUSH1 0x3 PUSH3 0x45 DUP4 DUP3 PUSH3 0x314 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x54 DUP3 DUP3 PUSH3 0x314 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x5 SSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x8B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x96 DUP2 PUSH3 0xC1 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x9 SSTORE TIMESTAMP PUSH1 0xA SSTORE PUSH3 0x3E0 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x175 JUMPI PUSH3 0x175 PUSH3 0x130 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1A0 JUMPI PUSH3 0x1A0 PUSH3 0x130 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1E1 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1C2 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x217 DUP6 PUSH3 0x113 JUMP JUMPDEST SWAP4 POP PUSH3 0x227 PUSH1 0x20 DUP7 ADD PUSH3 0x113 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x253 DUP9 DUP4 DUP10 ADD PUSH3 0x146 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x279 DUP8 DUP3 DUP9 ADD PUSH3 0x146 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x29A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2BB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x30F JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x2EA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x30B JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2F6 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x330 JUMPI PUSH3 0x330 PUSH3 0x130 JUMP JUMPDEST PUSH3 0x348 DUP2 PUSH3 0x341 DUP5 SLOAD PUSH3 0x285 JUMP JUMPDEST DUP5 PUSH3 0x2C1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x380 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x367 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x30B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3B1 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x390 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x3D0 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1694 PUSH3 0x445 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x329 ADD MSTORE DUP2 DUP2 PUSH2 0x525 ADD MSTORE DUP2 DUP2 PUSH2 0x5FE ADD MSTORE DUP2 DUP2 PUSH2 0x6D2 ADD MSTORE PUSH2 0xADB ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x26F ADD MSTORE DUP2 DUP2 PUSH2 0x743 ADD MSTORE DUP2 DUP2 PUSH2 0x81B ADD MSTORE DUP2 DUP2 PUSH2 0x92A ADD MSTORE DUP2 DUP2 PUSH2 0xBC3 ADD MSTORE PUSH2 0xD13 ADD MSTORE PUSH2 0x1694 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC8F33C91 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xD9A912EC EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xC6E6F592 EQ PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x8FF400F4 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x94BF804D EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x7E108D52 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x83453945 EQ PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x379607F5 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x3BA0B9A9 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x3BA0B9A9 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x59974E38 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x6E553F65 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x379607F5 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E1D114 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x7A2D13A EQ PUSH2 0x1F5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x13BE JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x140C JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH2 0x21B PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x143A JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x21B PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x1466 JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0x140C JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x291 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x1CD PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x140C JUMP JUMPDEST PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0x14A7 JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x9E4 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x31F CALLDATASIZE PUSH1 0x4 PUSH2 0x140C JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0x291 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x291 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x143A JUMP JUMPDEST PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x37D CALLDATASIZE PUSH1 0x4 PUSH2 0x14A7 JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0xDBF JUMP JUMPDEST PUSH2 0x21B PUSH2 0x398 CALLDATASIZE PUSH1 0x4 PUSH2 0x143A JUMP JUMPDEST PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x1CD PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0x140C JUMP JUMPDEST PUSH2 0xDDC JUMP JUMPDEST PUSH2 0x1CD PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1CD PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x14FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x14D7 JUMP JUMPDEST PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x42D SWAP1 PUSH2 0x1529 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x459 SWAP1 PUSH2 0x1529 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x489 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BB DUP3 PUSH2 0xE22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4CF DUP2 DUP6 DUP6 PUSH2 0xE53 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4E7 DUP6 DUP3 DUP6 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x4F2 DUP6 DUP6 DUP6 PUSH2 0xEE4 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x505 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x56C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2737BA1027232A1037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5DDE8895 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x5DDE8895 SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x644 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x668 SWAP2 SWAP1 PUSH2 0x1580 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 TIMESTAMP LT ISZERO PUSH2 0x6BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177616C206E6F7420617661696C61626C652079657400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x42966C68 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x732 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x76C SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 POP CALLER DUP5 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x2D43EB174787155132B52DDB6B346E2DCA99302EAC3DF4466DBEFF953D3C84D1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x7B3 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7BE PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657761726420616D6F756E74206D757374206265203E203000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x843 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0xFF9 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x855 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x863 SWAP1 POP PUSH2 0x1032 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x29E98BA00D07F171959C4DDCD2F3020DEBC7C52CF537A034D7E664340D098C6C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AD PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x8F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x417373657473206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x8FB DUP4 PUSH2 0x1067 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D2 SWAP1 PUSH2 0x15CD JUMP JUMPDEST PUSH2 0x952 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP7 PUSH2 0xFF9 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x964 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x97D SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x98B SWAP1 POP PUSH2 0x1032 JUMP JUMPDEST PUSH2 0x995 DUP3 DUP3 PUSH2 0x108C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH32 0x73A19DD210F1A7F902193214C0EE91DD35EE5B4D920CBA8D519ECA65A7B488CA SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x4BB PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x9EC PUSH2 0xFCC JUMP JUMPDEST PUSH2 0x9F6 PUSH1 0x0 PUSH2 0x10C6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA02 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D2 SWAP1 PUSH2 0x15CD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xA77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E73756666696369656E7420736861726573 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA82 DUP4 PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP PUSH2 0xA8E CALLER DUP5 PUSH2 0x1118 JUMP JUMPDEST DUP3 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAA0 SWAP2 SWAP1 PUSH2 0x15F9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0xAB5 PUSH3 0x93A80 TIMESTAMP PUSH2 0x15BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xAB714FB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x156E29F6 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB50 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP5 POP CALLER SWAP2 PUSH32 0x31F69201FAB7912E3EC9850E3AB705964BF46D9D4276BDCBB6D05E965E5F5401 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xB9A PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC0A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC2E SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC51 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x9 SLOAD DUP4 PUSH2 0xC6C SWAP2 SWAP1 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0xC76 SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST SWAP1 POP PUSH2 0xC82 DUP2 DUP5 PUSH2 0x15BA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC96 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xCB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D2 SWAP1 PUSH2 0x15CD JUMP JUMPDEST PUSH2 0xCBF DUP4 PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xD06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x417373657473206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0xD3B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0xFF9 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD4D SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD66 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xD74 SWAP1 POP PUSH2 0x1032 JUMP JUMPDEST PUSH2 0xD7E DUP3 DUP5 PUSH2 0x108C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH32 0x73A19DD210F1A7F902193214C0EE91DD35EE5B4D920CBA8D519ECA65A7B488CA SWAP2 ADD PUSH2 0x9D2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x42D SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4CF DUP2 DUP6 DUP6 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BB DUP3 PUSH2 0x1067 JUMP JUMPDEST PUSH2 0xDEF PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE19 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x7B3 DUP2 PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x0 SUB PUSH2 0xE32 JUMPI POP SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x9 SLOAD DUP4 PUSH2 0xE49 SWAP2 SWAP1 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0xE60 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x114E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0xEDE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xECF JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0xEDE DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x114E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF0E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF38 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0xE60 DUP4 DUP4 DUP4 PUSH2 0x1223 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0xF66 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xE60 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x134D JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9F6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xEDE SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x8 SLOAD ISZERO PUSH2 0x1061 JUMPI PUSH1 0x8 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x7 SLOAD PUSH2 0x1053 SWAP2 SWAP1 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x105D SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH1 0x9 SSTORE JUMPDEST TIMESTAMP PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x0 SUB PUSH2 0x1077 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0xE49 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10B6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x10C2 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1223 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1142 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x10C2 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1223 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1178 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11A2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xEDE JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1215 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x124E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1243 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x12C0 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x12A1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12DC JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1340 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x1370 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH1 0x0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x1388 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x1395 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xEDE JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13EB JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x13CF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x141E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x144D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1458 DUP2 PUSH2 0x1425 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x147B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1486 DUP2 PUSH2 0x1425 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1496 DUP2 PUSH2 0x1425 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x14CC DUP2 PUSH2 0x1425 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14F4 DUP2 PUSH2 0x1425 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x150E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1519 DUP2 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x14CC DUP2 PUSH2 0x1425 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x153D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x155D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14F4 DUP2 PUSH2 0x1425 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BB PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x536861726573206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BB PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x161E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4BB JUMPI PUSH2 0x4BB PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1659 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0x4E LOG0 0xCD RETURNDATACOPY DUP13 DUP12 BALANCE PUSH2 0x781E PUSH7 0xAB1585B1D9C818 0xAF CHAINID SLOAD 0xD6 0xD6 MSIZE 0xED MSTORE MSIZE 0x2D PUSH14 0xE01564736F6C6343000814003300 ","sourceMap":"627:7882:25:-:0;;;1615:359;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1775:10;1753:4;1759:6;1648:5:5;:13;1753:4:25;1648:5:5;:13;:::i;:::-;-1:-1:-1;1671:7:5;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;1857:1:16;2061:7;:21;-1:-1:-1;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;4646:51:27;4619:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;;;1797:22:25;;::::2;;::::0;1829:45:::2;;::::0;910:4:::2;1884:12;:24:::0;1952:15:::2;1935:14;:32:::0;627:7882;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:177:27:-;93:13;;-1:-1:-1;;;;;135:31:27;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:840;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;476:13;;-1:-1:-1;;;;;538:10:27;;;535:36;;;551:18;;:::i;:::-;626:2;620:9;594:2;680:13;;-1:-1:-1;;676:22:27;;;700:2;672:31;668:40;656:53;;;724:18;;;744:22;;;721:46;718:72;;;770:18;;:::i;:::-;810:10;806:2;799:22;845:2;837:6;830:18;867:4;857:14;;912:3;907:2;902;894:6;890:15;886:24;883:33;880:53;;;929:1;926;919:12;880:53;951:1;942:10;;961:133;975:2;972:1;969:9;961:133;;;1063:14;;;1059:23;;1053:30;1032:14;;;1028:23;;1021:63;986:10;;;;961:133;;;1136:1;1114:15;;;1110:24;;;1103:35;;;;1118:6;328:840;-1:-1:-1;;;;328:840:27:o;1173:733::-;1290:6;1298;1306;1314;1367:3;1355:9;1346:7;1342:23;1338:33;1335:53;;;1384:1;1381;1374:12;1335:53;1407:40;1437:9;1407:40;:::i;:::-;1397:50;;1466:49;1511:2;1500:9;1496:18;1466:49;:::i;:::-;1559:2;1544:18;;1538:25;1456:59;;-1:-1:-1;;;;;;1612:14:27;;;1609:34;;;1639:1;1636;1629:12;1609:34;1662:61;1715:7;1706:6;1695:9;1691:22;1662:61;:::i;:::-;1652:71;;1769:2;1758:9;1754:18;1748:25;1732:41;;1798:2;1788:8;1785:16;1782:36;;;1814:1;1811;1804:12;1782:36;;1837:63;1892:7;1881:8;1870:9;1866:24;1837:63;:::i;:::-;1827:73;;;1173:733;;;;;;;:::o;1911:380::-;1990:1;1986:12;;;;2033;;;2054:61;;2108:4;2100:6;2096:17;2086:27;;2054:61;2161:2;2153:6;2150:14;2130:18;2127:38;2124:161;;2207:10;2202:3;2198:20;2195:1;2188:31;2242:4;2239:1;2232:15;2270:4;2267:1;2260:15;2124:161;;1911:380;;;:::o;2422:545::-;2524:2;2519:3;2516:11;2513:448;;;2560:1;2585:5;2581:2;2574:17;2630:4;2626:2;2616:19;2700:2;2688:10;2684:19;2681:1;2677:27;2671:4;2667:38;2736:4;2724:10;2721:20;2718:47;;;-1:-1:-1;2759:4:27;2718:47;2814:2;2809:3;2805:12;2802:1;2798:20;2792:4;2788:31;2778:41;;2869:82;2887:2;2880:5;2877:13;2869:82;;;2932:17;;;2913:1;2902:13;2869:82;;;2873:3;;;2513:448;2422:545;;;:::o;3143:1352::-;3263:10;;-1:-1:-1;;;;;3285:30:27;;3282:56;;;3318:18;;:::i;:::-;3347:97;3437:6;3397:38;3429:4;3423:11;3397:38;:::i;:::-;3391:4;3347:97;:::i;:::-;3499:4;;3563:2;3552:14;;3580:1;3575:663;;;;4282:1;4299:6;4296:89;;;-1:-1:-1;4351:19:27;;;4345:26;4296:89;-1:-1:-1;;3100:1:27;3096:11;;;3092:24;3088:29;3078:40;3124:1;3120:11;;;3075:57;4398:81;;3545:944;;3575:663;2369:1;2362:14;;;2406:4;2393:18;;-1:-1:-1;;3611:20:27;;;3729:236;3743:7;3740:1;3737:14;3729:236;;;3832:19;;;3826:26;3811:42;;3924:27;;;;3892:1;3880:14;;;;3759:19;;3729:236;;;3733:3;3993:6;3984:7;3981:19;3978:201;;;4054:19;;;4048:26;-1:-1:-1;;4137:1:27;4133:14;;;4149:3;4129:24;4125:37;4121:42;4106:58;4091:74;;3978:201;-1:-1:-1;;;;;4225:1:27;4209:14;;;4205:22;4192:36;;-1:-1:-1;3143:1352:27:o;4500:203::-;627:7882:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@PRECISION_8375":{"entryPoint":null,"id":8375,"parameterSlots":0,"returnSlots":0},"@UNBONDING_PERIOD_8372":{"entryPoint":null,"id":8372,"parameterSlots":0,"returnSlots":0},"@_approve_780":{"entryPoint":3667,"id":780,"parameterSlots":3,"returnSlots":0},"@_approve_840":{"entryPoint":4430,"id":840,"parameterSlots":4,"returnSlots":0},"@_burn_762":{"entryPoint":4376,"id":762,"parameterSlots":2,"returnSlots":0},"@_callOptionalReturn_1415":{"entryPoint":4941,"id":1415,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":4044,"id":84,"parameterSlots":0,"returnSlots":0},"@_convertToAssets_8881":{"entryPoint":3618,"id":8881,"parameterSlots":1,"returnSlots":1},"@_convertToShares_8858":{"entryPoint":4199,"id":8858,"parameterSlots":1,"returnSlots":1},"@_mint_729":{"entryPoint":4236,"id":729,"parameterSlots":2,"returnSlots":0},"@_msgSender_2666":{"entryPoint":null,"id":2666,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_2793":{"entryPoint":null,"id":2793,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_2785":{"entryPoint":3907,"id":2785,"parameterSlots":0,"returnSlots":0},"@_spendAllowance_888":{"entryPoint":3685,"id":888,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":4294,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_619":{"entryPoint":3812,"id":619,"parameterSlots":3,"returnSlots":0},"@_updateExchangeRate_8905":{"entryPoint":4146,"id":8905,"parameterSlots":0,"returnSlots":0},"@_update_696":{"entryPoint":4643,"id":696,"parameterSlots":3,"returnSlots":0},"@allowance_516":{"entryPoint":null,"id":516,"parameterSlots":2,"returnSlots":1},"@approve_540":{"entryPoint":1217,"id":540,"parameterSlots":2,"returnSlots":1},"@asset_8366":{"entryPoint":null,"id":8366,"parameterSlots":0,"returnSlots":0},"@balanceOf_475":{"entryPoint":null,"id":475,"parameterSlots":1,"returnSlots":1},"@claim_8754":{"entryPoint":1277,"id":8754,"parameterSlots":1,"returnSlots":0},"@convertToAssets_8798":{"entryPoint":1200,"id":8798,"parameterSlots":1,"returnSlots":1},"@convertToShares_8785":{"entryPoint":3548,"id":8785,"parameterSlots":1,"returnSlots":1},"@decimals_453":{"entryPoint":null,"id":453,"parameterSlots":0,"returnSlots":1},"@deposit_8521":{"entryPoint":2211,"id":8521,"parameterSlots":2,"returnSlots":1},"@distributeRewards_8628":{"entryPoint":1974,"id":8628,"parameterSlots":1,"returnSlots":0},"@exchangeRate_8381":{"entryPoint":null,"id":8381,"parameterSlots":0,"returnSlots":0},"@getVotingPower_8835":{"entryPoint":2975,"id":8835,"parameterSlots":2,"returnSlots":1},"@initiateWithdraw_8696":{"entryPoint":2552,"id":8696,"parameterSlots":1,"returnSlots":1},"@lastUpdateTime_8383":{"entryPoint":null,"id":8383,"parameterSlots":0,"returnSlots":0},"@mint_8588":{"entryPoint":3212,"id":8588,"parameterSlots":2,"returnSlots":1},"@name_435":{"entryPoint":1054,"id":435,"parameterSlots":0,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2532,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1065":{"entryPoint":4089,"id":1065,"parameterSlots":4,"returnSlots":0},"@safeTransfer_1038":{"entryPoint":3949,"id":1038,"parameterSlots":3,"returnSlots":0},"@symbol_444":{"entryPoint":3519,"id":444,"parameterSlots":0,"returnSlots":1},"@totalAssets_8763":{"entryPoint":null,"id":8763,"parameterSlots":0,"returnSlots":1},"@totalShares_8772":{"entryPoint":null,"id":8772,"parameterSlots":0,"returnSlots":1},"@totalSupply_462":{"entryPoint":null,"id":462,"parameterSlots":0,"returnSlots":1},"@transferFrom_572":{"entryPoint":1241,"id":572,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":3559,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_499":{"entryPoint":3534,"id":499,"parameterSlots":2,"returnSlots":1},"@withdrawalNFT_8369":{"entryPoint":null,"id":8369,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":5335,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":5475,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5371,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5222,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5178,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":5132,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":5644,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":5287,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256_fromMemory":{"entryPoint":5504,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$967__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_WithdrawalNFT_$9104__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5054,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2ac0027c8bb7904cbef3a4015c477709a380d230acecb17eee202be5ff611aef__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4df2b7691b15f24e95ec6e55d9b6bf466a15f9a0e17f4791d928de1e3293f070__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5581,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baf53edc8b57f488bccae516e4d3f779a9da9a4ac912b4c8db6511a94d88b210__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f840076b892371486d439f117fd939212a2dabee743743b5ffa54cdecac2a621__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fbc2e10076f6921a763c3f489052dd0b77e1bb855bd0a8a6901f7fbc1cc7125e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5562,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":5692,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":5669,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5625,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5417,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5540,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":5157,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9081:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:76:27","statements":[{"nodeType":"YulAssignment","src":"125:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:27"},"nodeType":"YulFunctionCall","src":"133:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"178:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:27"},"nodeType":"YulFunctionCall","src":"160:25:27"},"nodeType":"YulExpressionStatement","src":"160:25:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:27","type":""}],"src":"14:177:27"},{"body":{"nodeType":"YulBlock","src":"317:427:27","statements":[{"nodeType":"YulVariableDeclaration","src":"327:12:27","value":{"kind":"number","nodeType":"YulLiteral","src":"337:2:27","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"331:2:27","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"355:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"366:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"348:6:27"},"nodeType":"YulFunctionCall","src":"348:21:27"},"nodeType":"YulExpressionStatement","src":"348:21:27"},{"nodeType":"YulVariableDeclaration","src":"378:27:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"398:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"392:5:27"},"nodeType":"YulFunctionCall","src":"392:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"382:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"425:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"436:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"421:3:27"},"nodeType":"YulFunctionCall","src":"421:18:27"},{"name":"length","nodeType":"YulIdentifier","src":"441:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"414:6:27"},"nodeType":"YulFunctionCall","src":"414:34:27"},"nodeType":"YulExpressionStatement","src":"414:34:27"},{"nodeType":"YulVariableDeclaration","src":"457:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"466:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"461:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"526:90:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"555:9:27"},{"name":"i","nodeType":"YulIdentifier","src":"566:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"551:3:27"},"nodeType":"YulFunctionCall","src":"551:17:27"},{"kind":"number","nodeType":"YulLiteral","src":"570:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"547:3:27"},"nodeType":"YulFunctionCall","src":"547:26:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"589:6:27"},{"name":"i","nodeType":"YulIdentifier","src":"597:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"585:3:27"},"nodeType":"YulFunctionCall","src":"585:14:27"},{"name":"_1","nodeType":"YulIdentifier","src":"601:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"581:3:27"},"nodeType":"YulFunctionCall","src":"581:23:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"575:5:27"},"nodeType":"YulFunctionCall","src":"575:30:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"540:6:27"},"nodeType":"YulFunctionCall","src":"540:66:27"},"nodeType":"YulExpressionStatement","src":"540:66:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"487:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"490:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"484:2:27"},"nodeType":"YulFunctionCall","src":"484:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"498:19:27","statements":[{"nodeType":"YulAssignment","src":"500:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"509:1:27"},{"name":"_1","nodeType":"YulIdentifier","src":"512:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"505:3:27"},"nodeType":"YulFunctionCall","src":"505:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"500:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"480:3:27","statements":[]},"src":"476:140:27"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"640:9:27"},{"name":"length","nodeType":"YulIdentifier","src":"651:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"636:3:27"},"nodeType":"YulFunctionCall","src":"636:22:27"},{"kind":"number","nodeType":"YulLiteral","src":"660:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"632:3:27"},"nodeType":"YulFunctionCall","src":"632:31:27"},{"kind":"number","nodeType":"YulLiteral","src":"665:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"625:6:27"},"nodeType":"YulFunctionCall","src":"625:42:27"},"nodeType":"YulExpressionStatement","src":"625:42:27"},{"nodeType":"YulAssignment","src":"676:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"692:9:27"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"711:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"719:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"707:3:27"},"nodeType":"YulFunctionCall","src":"707:15:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"728:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"724:3:27"},"nodeType":"YulFunctionCall","src":"724:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"703:3:27"},"nodeType":"YulFunctionCall","src":"703:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"688:3:27"},"nodeType":"YulFunctionCall","src":"688:45:27"},{"kind":"number","nodeType":"YulLiteral","src":"735:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"684:3:27"},"nodeType":"YulFunctionCall","src":"684:54:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"676:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"286:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"297:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"308:4:27","type":""}],"src":"196:548:27"},{"body":{"nodeType":"YulBlock","src":"819:110:27","statements":[{"body":{"nodeType":"YulBlock","src":"865:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"874:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"877:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"867:6:27"},"nodeType":"YulFunctionCall","src":"867:12:27"},"nodeType":"YulExpressionStatement","src":"867:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"840:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"849:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"836:3:27"},"nodeType":"YulFunctionCall","src":"836:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"861:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"832:3:27"},"nodeType":"YulFunctionCall","src":"832:32:27"},"nodeType":"YulIf","src":"829:52:27"},{"nodeType":"YulAssignment","src":"890:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"913:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"900:12:27"},"nodeType":"YulFunctionCall","src":"900:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"890:6:27"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"785:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"796:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"808:6:27","type":""}],"src":"749:180:27"},{"body":{"nodeType":"YulBlock","src":"979:86:27","statements":[{"body":{"nodeType":"YulBlock","src":"1043:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1052:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1055:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1045:6:27"},"nodeType":"YulFunctionCall","src":"1045:12:27"},"nodeType":"YulExpressionStatement","src":"1045:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1002:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1013:5:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1028:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1033:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1024:3:27"},"nodeType":"YulFunctionCall","src":"1024:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"1037:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1020:3:27"},"nodeType":"YulFunctionCall","src":"1020:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1009:3:27"},"nodeType":"YulFunctionCall","src":"1009:31:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"999:2:27"},"nodeType":"YulFunctionCall","src":"999:42:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"992:6:27"},"nodeType":"YulFunctionCall","src":"992:50:27"},"nodeType":"YulIf","src":"989:70:27"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"968:5:27","type":""}],"src":"934:131:27"},{"body":{"nodeType":"YulBlock","src":"1157:228:27","statements":[{"body":{"nodeType":"YulBlock","src":"1203:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1212:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1215:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1205:6:27"},"nodeType":"YulFunctionCall","src":"1205:12:27"},"nodeType":"YulExpressionStatement","src":"1205:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1178:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1187:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1174:3:27"},"nodeType":"YulFunctionCall","src":"1174:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1199:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1170:3:27"},"nodeType":"YulFunctionCall","src":"1170:32:27"},"nodeType":"YulIf","src":"1167:52:27"},{"nodeType":"YulVariableDeclaration","src":"1228:36:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1254:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1241:12:27"},"nodeType":"YulFunctionCall","src":"1241:23:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1232:5:27","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1298:5:27"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1273:24:27"},"nodeType":"YulFunctionCall","src":"1273:31:27"},"nodeType":"YulExpressionStatement","src":"1273:31:27"},{"nodeType":"YulAssignment","src":"1313:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"1323:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1313:6:27"}]},{"nodeType":"YulAssignment","src":"1337:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1364:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1375:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1360:3:27"},"nodeType":"YulFunctionCall","src":"1360:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1347:12:27"},"nodeType":"YulFunctionCall","src":"1347:32:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1337:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1115:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1126:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1138:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1146:6:27","type":""}],"src":"1070:315:27"},{"body":{"nodeType":"YulBlock","src":"1485:92:27","statements":[{"nodeType":"YulAssignment","src":"1495:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1507:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1518:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1503:3:27"},"nodeType":"YulFunctionCall","src":"1503:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1495:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1537:9:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1562:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1555:6:27"},"nodeType":"YulFunctionCall","src":"1555:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1548:6:27"},"nodeType":"YulFunctionCall","src":"1548:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1530:6:27"},"nodeType":"YulFunctionCall","src":"1530:41:27"},"nodeType":"YulExpressionStatement","src":"1530:41:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1454:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1465:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1476:4:27","type":""}],"src":"1390:187:27"},{"body":{"nodeType":"YulBlock","src":"1686:352:27","statements":[{"body":{"nodeType":"YulBlock","src":"1732:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1741:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1744:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1734:6:27"},"nodeType":"YulFunctionCall","src":"1734:12:27"},"nodeType":"YulExpressionStatement","src":"1734:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1707:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1716:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1703:3:27"},"nodeType":"YulFunctionCall","src":"1703:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1728:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1699:3:27"},"nodeType":"YulFunctionCall","src":"1699:32:27"},"nodeType":"YulIf","src":"1696:52:27"},{"nodeType":"YulVariableDeclaration","src":"1757:36:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1783:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1770:12:27"},"nodeType":"YulFunctionCall","src":"1770:23:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1761:5:27","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1827:5:27"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1802:24:27"},"nodeType":"YulFunctionCall","src":"1802:31:27"},"nodeType":"YulExpressionStatement","src":"1802:31:27"},{"nodeType":"YulAssignment","src":"1842:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"1852:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1842:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"1866:47:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1898:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1909:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1894:3:27"},"nodeType":"YulFunctionCall","src":"1894:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1881:12:27"},"nodeType":"YulFunctionCall","src":"1881:32:27"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1870:7:27","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1947:7:27"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1922:24:27"},"nodeType":"YulFunctionCall","src":"1922:33:27"},"nodeType":"YulExpressionStatement","src":"1922:33:27"},{"nodeType":"YulAssignment","src":"1964:17:27","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1974:7:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1964:6:27"}]},{"nodeType":"YulAssignment","src":"1990:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2017:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2028:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2013:3:27"},"nodeType":"YulFunctionCall","src":"2013:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2000:12:27"},"nodeType":"YulFunctionCall","src":"2000:32:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1990:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1636:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1647:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1659:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1667:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1675:6:27","type":""}],"src":"1582:456:27"},{"body":{"nodeType":"YulBlock","src":"2140:87:27","statements":[{"nodeType":"YulAssignment","src":"2150:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2162:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2173:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2158:3:27"},"nodeType":"YulFunctionCall","src":"2158:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2150:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2192:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2207:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2215:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2203:3:27"},"nodeType":"YulFunctionCall","src":"2203:17:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2185:6:27"},"nodeType":"YulFunctionCall","src":"2185:36:27"},"nodeType":"YulExpressionStatement","src":"2185:36:27"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2109:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2120:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2131:4:27","type":""}],"src":"2043:184:27"},{"body":{"nodeType":"YulBlock","src":"2347:102:27","statements":[{"nodeType":"YulAssignment","src":"2357:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2369:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2380:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2365:3:27"},"nodeType":"YulFunctionCall","src":"2365:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2357:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2399:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2414:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2430:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2435:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2426:3:27"},"nodeType":"YulFunctionCall","src":"2426:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"2439:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2422:3:27"},"nodeType":"YulFunctionCall","src":"2422:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2410:3:27"},"nodeType":"YulFunctionCall","src":"2410:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2392:6:27"},"nodeType":"YulFunctionCall","src":"2392:51:27"},"nodeType":"YulExpressionStatement","src":"2392:51:27"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$967__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2316:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2327:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2338:4:27","type":""}],"src":"2232:217:27"},{"body":{"nodeType":"YulBlock","src":"2541:228:27","statements":[{"body":{"nodeType":"YulBlock","src":"2587:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2596:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2589:6:27"},"nodeType":"YulFunctionCall","src":"2589:12:27"},"nodeType":"YulExpressionStatement","src":"2589:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2562:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2571:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2558:3:27"},"nodeType":"YulFunctionCall","src":"2558:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2583:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2554:3:27"},"nodeType":"YulFunctionCall","src":"2554:32:27"},"nodeType":"YulIf","src":"2551:52:27"},{"nodeType":"YulAssignment","src":"2612:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2635:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2622:12:27"},"nodeType":"YulFunctionCall","src":"2622:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2612:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"2654:45:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2684:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2695:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2680:3:27"},"nodeType":"YulFunctionCall","src":"2680:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2667:12:27"},"nodeType":"YulFunctionCall","src":"2667:32:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2658:5:27","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2733:5:27"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2708:24:27"},"nodeType":"YulFunctionCall","src":"2708:31:27"},"nodeType":"YulExpressionStatement","src":"2708:31:27"},{"nodeType":"YulAssignment","src":"2748:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"2758:5:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2748:6:27"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2499:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2510:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2522:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2530:6:27","type":""}],"src":"2454:315:27"},{"body":{"nodeType":"YulBlock","src":"2844:177:27","statements":[{"body":{"nodeType":"YulBlock","src":"2890:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2899:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2902:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2892:6:27"},"nodeType":"YulFunctionCall","src":"2892:12:27"},"nodeType":"YulExpressionStatement","src":"2892:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2865:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2874:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2861:3:27"},"nodeType":"YulFunctionCall","src":"2861:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2886:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2857:3:27"},"nodeType":"YulFunctionCall","src":"2857:32:27"},"nodeType":"YulIf","src":"2854:52:27"},{"nodeType":"YulVariableDeclaration","src":"2915:36:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2941:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2928:12:27"},"nodeType":"YulFunctionCall","src":"2928:23:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2919:5:27","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2985:5:27"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2960:24:27"},"nodeType":"YulFunctionCall","src":"2960:31:27"},"nodeType":"YulExpressionStatement","src":"2960:31:27"},{"nodeType":"YulAssignment","src":"3000:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"3010:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3000:6:27"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2810:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2821:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2833:6:27","type":""}],"src":"2774:247:27"},{"body":{"nodeType":"YulBlock","src":"3149:102:27","statements":[{"nodeType":"YulAssignment","src":"3159:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3171:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3182:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3167:3:27"},"nodeType":"YulFunctionCall","src":"3167:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3159:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3201:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3216:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3232:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3237:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3228:3:27"},"nodeType":"YulFunctionCall","src":"3228:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"3241:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3224:3:27"},"nodeType":"YulFunctionCall","src":"3224:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3212:3:27"},"nodeType":"YulFunctionCall","src":"3212:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3194:6:27"},"nodeType":"YulFunctionCall","src":"3194:51:27"},"nodeType":"YulExpressionStatement","src":"3194:51:27"}]},"name":"abi_encode_tuple_t_contract$_WithdrawalNFT_$9104__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3118:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3129:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3140:4:27","type":""}],"src":"3026:225:27"},{"body":{"nodeType":"YulBlock","src":"3357:102:27","statements":[{"nodeType":"YulAssignment","src":"3367:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3379:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3390:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3375:3:27"},"nodeType":"YulFunctionCall","src":"3375:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3367:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3409:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3424:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3440:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3445:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3436:3:27"},"nodeType":"YulFunctionCall","src":"3436:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"3449:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3432:3:27"},"nodeType":"YulFunctionCall","src":"3432:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3420:3:27"},"nodeType":"YulFunctionCall","src":"3420:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3402:6:27"},"nodeType":"YulFunctionCall","src":"3402:51:27"},"nodeType":"YulExpressionStatement","src":"3402:51:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3326:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3337:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3348:4:27","type":""}],"src":"3256:203:27"},{"body":{"nodeType":"YulBlock","src":"3551:301:27","statements":[{"body":{"nodeType":"YulBlock","src":"3597:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3606:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3609:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3599:6:27"},"nodeType":"YulFunctionCall","src":"3599:12:27"},"nodeType":"YulExpressionStatement","src":"3599:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3572:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3581:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3568:3:27"},"nodeType":"YulFunctionCall","src":"3568:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3593:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3564:3:27"},"nodeType":"YulFunctionCall","src":"3564:32:27"},"nodeType":"YulIf","src":"3561:52:27"},{"nodeType":"YulVariableDeclaration","src":"3622:36:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3648:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3635:12:27"},"nodeType":"YulFunctionCall","src":"3635:23:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:27","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3692:5:27"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3667:24:27"},"nodeType":"YulFunctionCall","src":"3667:31:27"},"nodeType":"YulExpressionStatement","src":"3667:31:27"},{"nodeType":"YulAssignment","src":"3707:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"3717:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3707:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"3731:47:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3763:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3774:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3759:3:27"},"nodeType":"YulFunctionCall","src":"3759:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3746:12:27"},"nodeType":"YulFunctionCall","src":"3746:32:27"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"3735:7:27","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"3812:7:27"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3787:24:27"},"nodeType":"YulFunctionCall","src":"3787:33:27"},"nodeType":"YulExpressionStatement","src":"3787:33:27"},{"nodeType":"YulAssignment","src":"3829:17:27","value":{"name":"value_1","nodeType":"YulIdentifier","src":"3839:7:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3829:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3509:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3520:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3532:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3540:6:27","type":""}],"src":"3464:388:27"},{"body":{"nodeType":"YulBlock","src":"3912:325:27","statements":[{"nodeType":"YulAssignment","src":"3922:22:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3936:1:27","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"3939:4:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3932:3:27"},"nodeType":"YulFunctionCall","src":"3932:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3922:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"3953:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3983:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"3989:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3979:3:27"},"nodeType":"YulFunctionCall","src":"3979:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3957:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4030:31:27","statements":[{"nodeType":"YulAssignment","src":"4032:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4046:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4054:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4042:3:27"},"nodeType":"YulFunctionCall","src":"4042:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4032:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4010:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4003:6:27"},"nodeType":"YulFunctionCall","src":"4003:26:27"},"nodeType":"YulIf","src":"4000:61:27"},{"body":{"nodeType":"YulBlock","src":"4120:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4141:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4148:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4153:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4144:3:27"},"nodeType":"YulFunctionCall","src":"4144:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4134:6:27"},"nodeType":"YulFunctionCall","src":"4134:31:27"},"nodeType":"YulExpressionStatement","src":"4134:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4185:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4188:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4178:6:27"},"nodeType":"YulFunctionCall","src":"4178:15:27"},"nodeType":"YulExpressionStatement","src":"4178:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4213:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4216:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4206:6:27"},"nodeType":"YulFunctionCall","src":"4206:15:27"},"nodeType":"YulExpressionStatement","src":"4206:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4076:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4099:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4107:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4096:2:27"},"nodeType":"YulFunctionCall","src":"4096:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4073:2:27"},"nodeType":"YulFunctionCall","src":"4073:38:27"},"nodeType":"YulIf","src":"4070:161:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3892:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3901:6:27","type":""}],"src":"3857:380:27"},{"body":{"nodeType":"YulBlock","src":"4323:170:27","statements":[{"body":{"nodeType":"YulBlock","src":"4369:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4378:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4381:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4371:6:27"},"nodeType":"YulFunctionCall","src":"4371:12:27"},"nodeType":"YulExpressionStatement","src":"4371:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4344:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"4353:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4340:3:27"},"nodeType":"YulFunctionCall","src":"4340:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4365:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4336:3:27"},"nodeType":"YulFunctionCall","src":"4336:32:27"},"nodeType":"YulIf","src":"4333:52:27"},{"nodeType":"YulVariableDeclaration","src":"4394:29:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4413:9:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4407:5:27"},"nodeType":"YulFunctionCall","src":"4407:16:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4398:5:27","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4457:5:27"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4432:24:27"},"nodeType":"YulFunctionCall","src":"4432:31:27"},"nodeType":"YulExpressionStatement","src":"4432:31:27"},{"nodeType":"YulAssignment","src":"4472:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"4482:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4472:6:27"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4289:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4300:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4312:6:27","type":""}],"src":"4242:251:27"},{"body":{"nodeType":"YulBlock","src":"4672:163:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4689:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4700:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4682:6:27"},"nodeType":"YulFunctionCall","src":"4682:21:27"},"nodeType":"YulExpressionStatement","src":"4682:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4723:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4734:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4719:3:27"},"nodeType":"YulFunctionCall","src":"4719:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"4739:2:27","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4712:6:27"},"nodeType":"YulFunctionCall","src":"4712:30:27"},"nodeType":"YulExpressionStatement","src":"4712:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4762:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4773:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4758:3:27"},"nodeType":"YulFunctionCall","src":"4758:18:27"},{"hexValue":"4e6f74204e4654206f776e6572","kind":"string","nodeType":"YulLiteral","src":"4778:15:27","type":"","value":"Not NFT owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4751:6:27"},"nodeType":"YulFunctionCall","src":"4751:43:27"},"nodeType":"YulExpressionStatement","src":"4751:43:27"},{"nodeType":"YulAssignment","src":"4803:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4815:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4826:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4811:3:27"},"nodeType":"YulFunctionCall","src":"4811:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4803:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_fbc2e10076f6921a763c3f489052dd0b77e1bb855bd0a8a6901f7fbc1cc7125e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4649:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4663:4:27","type":""}],"src":"4498:337:27"},{"body":{"nodeType":"YulBlock","src":"4938:147:27","statements":[{"body":{"nodeType":"YulBlock","src":"4984:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4993:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4996:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4986:6:27"},"nodeType":"YulFunctionCall","src":"4986:12:27"},"nodeType":"YulExpressionStatement","src":"4986:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4959:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"4968:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4955:3:27"},"nodeType":"YulFunctionCall","src":"4955:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4980:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4951:3:27"},"nodeType":"YulFunctionCall","src":"4951:32:27"},"nodeType":"YulIf","src":"4948:52:27"},{"nodeType":"YulAssignment","src":"5009:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5025:9:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5019:5:27"},"nodeType":"YulFunctionCall","src":"5019:16:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5009:6:27"}]},{"nodeType":"YulAssignment","src":"5044:35:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5064:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5075:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5060:3:27"},"nodeType":"YulFunctionCall","src":"5060:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5054:5:27"},"nodeType":"YulFunctionCall","src":"5054:25:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5044:6:27"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4896:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4907:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4919:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4927:6:27","type":""}],"src":"4840:245:27"},{"body":{"nodeType":"YulBlock","src":"5264:178:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5292:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5274:6:27"},"nodeType":"YulFunctionCall","src":"5274:21:27"},"nodeType":"YulExpressionStatement","src":"5274:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5315:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5326:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5311:3:27"},"nodeType":"YulFunctionCall","src":"5311:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"5331:2:27","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5304:6:27"},"nodeType":"YulFunctionCall","src":"5304:30:27"},"nodeType":"YulExpressionStatement","src":"5304:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5354:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5365:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5350:3:27"},"nodeType":"YulFunctionCall","src":"5350:18:27"},{"hexValue":"5769746864726177616c206e6f7420617661696c61626c6520796574","kind":"string","nodeType":"YulLiteral","src":"5370:30:27","type":"","value":"Withdrawal not available yet"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5343:6:27"},"nodeType":"YulFunctionCall","src":"5343:58:27"},"nodeType":"YulExpressionStatement","src":"5343:58:27"},{"nodeType":"YulAssignment","src":"5410:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5422:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5433:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5418:3:27"},"nodeType":"YulFunctionCall","src":"5418:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5410:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_baf53edc8b57f488bccae516e4d3f779a9da9a4ac912b4c8db6511a94d88b210__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5241:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5255:4:27","type":""}],"src":"5090:352:27"},{"body":{"nodeType":"YulBlock","src":"5576:119:27","statements":[{"nodeType":"YulAssignment","src":"5586:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5598:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5609:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5594:3:27"},"nodeType":"YulFunctionCall","src":"5594:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5586:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5628:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"5639:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5621:6:27"},"nodeType":"YulFunctionCall","src":"5621:25:27"},"nodeType":"YulExpressionStatement","src":"5621:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5666:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5677:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5662:3:27"},"nodeType":"YulFunctionCall","src":"5662:18:27"},{"name":"value1","nodeType":"YulIdentifier","src":"5682:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5655:6:27"},"nodeType":"YulFunctionCall","src":"5655:34:27"},"nodeType":"YulExpressionStatement","src":"5655:34:27"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5537:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5548:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5556:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5567:4:27","type":""}],"src":"5447:248:27"},{"body":{"nodeType":"YulBlock","src":"5874:175:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5891:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5902:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5884:6:27"},"nodeType":"YulFunctionCall","src":"5884:21:27"},"nodeType":"YulExpressionStatement","src":"5884:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5925:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5936:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5921:3:27"},"nodeType":"YulFunctionCall","src":"5921:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"5941:2:27","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5914:6:27"},"nodeType":"YulFunctionCall","src":"5914:30:27"},"nodeType":"YulExpressionStatement","src":"5914:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5964:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5975:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5960:3:27"},"nodeType":"YulFunctionCall","src":"5960:18:27"},{"hexValue":"52657761726420616d6f756e74206d757374206265203e2030","kind":"string","nodeType":"YulLiteral","src":"5980:27:27","type":"","value":"Reward amount must be > 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5953:6:27"},"nodeType":"YulFunctionCall","src":"5953:55:27"},"nodeType":"YulExpressionStatement","src":"5953:55:27"},{"nodeType":"YulAssignment","src":"6017:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6029:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6040:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6025:3:27"},"nodeType":"YulFunctionCall","src":"6025:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6017:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_f840076b892371486d439f117fd939212a2dabee743743b5ffa54cdecac2a621__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5851:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5865:4:27","type":""}],"src":"5700:349:27"},{"body":{"nodeType":"YulBlock","src":"6086:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6103:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6110:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6115:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6106:3:27"},"nodeType":"YulFunctionCall","src":"6106:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6096:6:27"},"nodeType":"YulFunctionCall","src":"6096:31:27"},"nodeType":"YulExpressionStatement","src":"6096:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6143:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6146:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6136:6:27"},"nodeType":"YulFunctionCall","src":"6136:15:27"},"nodeType":"YulExpressionStatement","src":"6136:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6167:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6170:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6160:6:27"},"nodeType":"YulFunctionCall","src":"6160:15:27"},"nodeType":"YulExpressionStatement","src":"6160:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6054:127:27"},{"body":{"nodeType":"YulBlock","src":"6234:77:27","statements":[{"nodeType":"YulAssignment","src":"6244:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6255:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"6258:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6251:3:27"},"nodeType":"YulFunctionCall","src":"6251:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6244:3:27"}]},{"body":{"nodeType":"YulBlock","src":"6283:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6285:16:27"},"nodeType":"YulFunctionCall","src":"6285:18:27"},"nodeType":"YulExpressionStatement","src":"6285:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6275:1:27"},{"name":"sum","nodeType":"YulIdentifier","src":"6278:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6272:2:27"},"nodeType":"YulFunctionCall","src":"6272:10:27"},"nodeType":"YulIf","src":"6269:36:27"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6217:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"6220:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6226:3:27","type":""}],"src":"6186:125:27"},{"body":{"nodeType":"YulBlock","src":"6490:168:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6507:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6518:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6500:6:27"},"nodeType":"YulFunctionCall","src":"6500:21:27"},"nodeType":"YulExpressionStatement","src":"6500:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6541:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6552:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6537:3:27"},"nodeType":"YulFunctionCall","src":"6537:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"6557:2:27","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6530:6:27"},"nodeType":"YulFunctionCall","src":"6530:30:27"},"nodeType":"YulExpressionStatement","src":"6530:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6580:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6591:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6576:3:27"},"nodeType":"YulFunctionCall","src":"6576:18:27"},{"hexValue":"417373657473206d757374206265203e2030","kind":"string","nodeType":"YulLiteral","src":"6596:20:27","type":"","value":"Assets must be > 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6569:6:27"},"nodeType":"YulFunctionCall","src":"6569:48:27"},"nodeType":"YulExpressionStatement","src":"6569:48:27"},{"nodeType":"YulAssignment","src":"6626:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6638:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6649:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6634:3:27"},"nodeType":"YulFunctionCall","src":"6634:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6626:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_2ac0027c8bb7904cbef3a4015c477709a380d230acecb17eee202be5ff611aef__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6467:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6481:4:27","type":""}],"src":"6316:342:27"},{"body":{"nodeType":"YulBlock","src":"6837:168:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6854:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6865:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6847:6:27"},"nodeType":"YulFunctionCall","src":"6847:21:27"},"nodeType":"YulExpressionStatement","src":"6847:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6888:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6899:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6884:3:27"},"nodeType":"YulFunctionCall","src":"6884:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"6904:2:27","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6877:6:27"},"nodeType":"YulFunctionCall","src":"6877:30:27"},"nodeType":"YulExpressionStatement","src":"6877:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6927:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6938:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6923:3:27"},"nodeType":"YulFunctionCall","src":"6923:18:27"},{"hexValue":"536861726573206d757374206265203e2030","kind":"string","nodeType":"YulLiteral","src":"6943:20:27","type":"","value":"Shares must be > 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6916:6:27"},"nodeType":"YulFunctionCall","src":"6916:48:27"},"nodeType":"YulExpressionStatement","src":"6916:48:27"},{"nodeType":"YulAssignment","src":"6973:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6985:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6996:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6981:3:27"},"nodeType":"YulFunctionCall","src":"6981:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6973:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4df2b7691b15f24e95ec6e55d9b6bf466a15f9a0e17f4791d928de1e3293f070__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6814:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6828:4:27","type":""}],"src":"6663:342:27"},{"body":{"nodeType":"YulBlock","src":"7184:169:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7201:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7212:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7194:6:27"},"nodeType":"YulFunctionCall","src":"7194:21:27"},"nodeType":"YulExpressionStatement","src":"7194:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7235:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7246:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7231:3:27"},"nodeType":"YulFunctionCall","src":"7231:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"7251:2:27","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7224:6:27"},"nodeType":"YulFunctionCall","src":"7224:30:27"},"nodeType":"YulExpressionStatement","src":"7224:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7274:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7285:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7270:3:27"},"nodeType":"YulFunctionCall","src":"7270:18:27"},{"hexValue":"496e73756666696369656e7420736861726573","kind":"string","nodeType":"YulLiteral","src":"7290:21:27","type":"","value":"Insufficient shares"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7263:6:27"},"nodeType":"YulFunctionCall","src":"7263:49:27"},"nodeType":"YulExpressionStatement","src":"7263:49:27"},{"nodeType":"YulAssignment","src":"7321:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7333:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7344:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7329:3:27"},"nodeType":"YulFunctionCall","src":"7329:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7321:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7161:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7175:4:27","type":""}],"src":"7010:343:27"},{"body":{"nodeType":"YulBlock","src":"7407:79:27","statements":[{"nodeType":"YulAssignment","src":"7417:17:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7429:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"7432:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7425:3:27"},"nodeType":"YulFunctionCall","src":"7425:9:27"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"7417:4:27"}]},{"body":{"nodeType":"YulBlock","src":"7458:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7460:16:27"},"nodeType":"YulFunctionCall","src":"7460:18:27"},"nodeType":"YulExpressionStatement","src":"7460:18:27"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"7449:4:27"},{"name":"x","nodeType":"YulIdentifier","src":"7455:1:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7446:2:27"},"nodeType":"YulFunctionCall","src":"7446:11:27"},"nodeType":"YulIf","src":"7443:37:27"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7389:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"7392:1:27","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"7398:4:27","type":""}],"src":"7358:128:27"},{"body":{"nodeType":"YulBlock","src":"7648:188:27","statements":[{"nodeType":"YulAssignment","src":"7658:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7670:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7681:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7666:3:27"},"nodeType":"YulFunctionCall","src":"7666:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7658:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7700:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7715:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7731:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7736:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7727:3:27"},"nodeType":"YulFunctionCall","src":"7727:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"7740:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7723:3:27"},"nodeType":"YulFunctionCall","src":"7723:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7711:3:27"},"nodeType":"YulFunctionCall","src":"7711:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7693:6:27"},"nodeType":"YulFunctionCall","src":"7693:51:27"},"nodeType":"YulExpressionStatement","src":"7693:51:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7764:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7775:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7760:3:27"},"nodeType":"YulFunctionCall","src":"7760:18:27"},{"name":"value1","nodeType":"YulIdentifier","src":"7780:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7753:6:27"},"nodeType":"YulFunctionCall","src":"7753:34:27"},"nodeType":"YulExpressionStatement","src":"7753:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7807:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7818:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7803:3:27"},"nodeType":"YulFunctionCall","src":"7803:18:27"},{"name":"value2","nodeType":"YulIdentifier","src":"7823:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7796:6:27"},"nodeType":"YulFunctionCall","src":"7796:34:27"},"nodeType":"YulExpressionStatement","src":"7796:34:27"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7601:9:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7612:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7620:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7628:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7639:4:27","type":""}],"src":"7491:345:27"},{"body":{"nodeType":"YulBlock","src":"7922:103:27","statements":[{"body":{"nodeType":"YulBlock","src":"7968:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7977:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7980:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7970:6:27"},"nodeType":"YulFunctionCall","src":"7970:12:27"},"nodeType":"YulExpressionStatement","src":"7970:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7943:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"7952:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7939:3:27"},"nodeType":"YulFunctionCall","src":"7939:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"7964:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7935:3:27"},"nodeType":"YulFunctionCall","src":"7935:32:27"},"nodeType":"YulIf","src":"7932:52:27"},{"nodeType":"YulAssignment","src":"7993:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8009:9:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8003:5:27"},"nodeType":"YulFunctionCall","src":"8003:16:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7993:6:27"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7888:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7899:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7911:6:27","type":""}],"src":"7841:184:27"},{"body":{"nodeType":"YulBlock","src":"8082:116:27","statements":[{"nodeType":"YulAssignment","src":"8092:20:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8107:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"8110:1:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8103:3:27"},"nodeType":"YulFunctionCall","src":"8103:9:27"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"8092:7:27"}]},{"body":{"nodeType":"YulBlock","src":"8170:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8172:16:27"},"nodeType":"YulFunctionCall","src":"8172:18:27"},"nodeType":"YulExpressionStatement","src":"8172:18:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8141:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8134:6:27"},"nodeType":"YulFunctionCall","src":"8134:9:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8148:1:27"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"8155:7:27"},{"name":"x","nodeType":"YulIdentifier","src":"8164:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8151:3:27"},"nodeType":"YulFunctionCall","src":"8151:15:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8145:2:27"},"nodeType":"YulFunctionCall","src":"8145:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8131:2:27"},"nodeType":"YulFunctionCall","src":"8131:37:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8124:6:27"},"nodeType":"YulFunctionCall","src":"8124:45:27"},"nodeType":"YulIf","src":"8121:71:27"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8061:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"8064:1:27","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"8070:7:27","type":""}],"src":"8030:168:27"},{"body":{"nodeType":"YulBlock","src":"8249:171:27","statements":[{"body":{"nodeType":"YulBlock","src":"8280:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8301:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8308:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8313:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8304:3:27"},"nodeType":"YulFunctionCall","src":"8304:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8294:6:27"},"nodeType":"YulFunctionCall","src":"8294:31:27"},"nodeType":"YulExpressionStatement","src":"8294:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8345:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8348:4:27","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8338:6:27"},"nodeType":"YulFunctionCall","src":"8338:15:27"},"nodeType":"YulExpressionStatement","src":"8338:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8373:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8376:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8366:6:27"},"nodeType":"YulFunctionCall","src":"8366:15:27"},"nodeType":"YulExpressionStatement","src":"8366:15:27"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8269:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8262:6:27"},"nodeType":"YulFunctionCall","src":"8262:9:27"},"nodeType":"YulIf","src":"8259:132:27"},{"nodeType":"YulAssignment","src":"8400:14:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8409:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"8412:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8405:3:27"},"nodeType":"YulFunctionCall","src":"8405:9:27"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"8400:1:27"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8234:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"8237:1:27","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"8243:1:27","type":""}],"src":"8203:217:27"},{"body":{"nodeType":"YulBlock","src":"8554:145:27","statements":[{"nodeType":"YulAssignment","src":"8564:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8576:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8587:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8572:3:27"},"nodeType":"YulFunctionCall","src":"8572:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8564:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8606:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8621:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8637:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"8642:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8633:3:27"},"nodeType":"YulFunctionCall","src":"8633:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"8646:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8629:3:27"},"nodeType":"YulFunctionCall","src":"8629:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8617:3:27"},"nodeType":"YulFunctionCall","src":"8617:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8599:6:27"},"nodeType":"YulFunctionCall","src":"8599:51:27"},"nodeType":"YulExpressionStatement","src":"8599:51:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8670:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8681:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8666:3:27"},"nodeType":"YulFunctionCall","src":"8666:18:27"},{"name":"value1","nodeType":"YulIdentifier","src":"8686:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8659:6:27"},"nodeType":"YulFunctionCall","src":"8659:34:27"},"nodeType":"YulExpressionStatement","src":"8659:34:27"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8515:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8526:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8534:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8545:4:27","type":""}],"src":"8425:274:27"},{"body":{"nodeType":"YulBlock","src":"8861:218:27","statements":[{"nodeType":"YulAssignment","src":"8871:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8883:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8894:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8879:3:27"},"nodeType":"YulFunctionCall","src":"8879:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8871:4:27"}]},{"nodeType":"YulVariableDeclaration","src":"8906:29:27","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8924:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"8929:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8920:3:27"},"nodeType":"YulFunctionCall","src":"8920:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"8933:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8916:3:27"},"nodeType":"YulFunctionCall","src":"8916:19:27"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8910:2:27","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8951:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8966:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"8974:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8962:3:27"},"nodeType":"YulFunctionCall","src":"8962:15:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8944:6:27"},"nodeType":"YulFunctionCall","src":"8944:34:27"},"nodeType":"YulExpressionStatement","src":"8944:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8998:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9009:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8994:3:27"},"nodeType":"YulFunctionCall","src":"8994:18:27"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9018:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"9026:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9014:3:27"},"nodeType":"YulFunctionCall","src":"9014:15:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8987:6:27"},"nodeType":"YulFunctionCall","src":"8987:43:27"},"nodeType":"YulExpressionStatement","src":"8987:43:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9050:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9061:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9046:3:27"},"nodeType":"YulFunctionCall","src":"9046:18:27"},{"name":"value2","nodeType":"YulIdentifier","src":"9066:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9039:6:27"},"nodeType":"YulFunctionCall","src":"9039:34:27"},"nodeType":"YulExpressionStatement","src":"9039:34:27"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8814:9:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8825:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8833:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8841:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8852:4:27","type":""}],"src":"8704:375:27"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$967__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_WithdrawalNFT_$9104__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_fbc2e10076f6921a763c3f489052dd0b77e1bb855bd0a8a6901f7fbc1cc7125e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Not NFT owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_baf53edc8b57f488bccae516e4d3f779a9da9a4ac912b4c8db6511a94d88b210__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Withdrawal not available yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_f840076b892371486d439f117fd939212a2dabee743743b5ffa54cdecac2a621__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Reward amount must be > 0\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_2ac0027c8bb7904cbef3a4015c477709a380d230acecb17eee202be5ff611aef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Assets must be > 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4df2b7691b15f24e95ec6e55d9b6bf466a15f9a0e17f4791d928de1e3293f070__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Shares must be > 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Insufficient shares\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"8366":[{"length":32,"start":623},{"length":32,"start":1859},{"length":32,"start":2075},{"length":32,"start":2346},{"length":32,"start":3011},{"length":32,"start":3347}],"8369":[{"length":32,"start":809},{"length":32,"start":1317},{"length":32,"start":1534},{"length":32,"start":1746},{"length":32,"start":2779}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101c45760003560e01c8063715018a6116100f9578063a9059cbb11610097578063c8f33c9111610071578063c8f33c91146103bf578063d9a912ec146103c8578063dd62ed3e146103d2578063f2fde38b1461040b57600080fd5b8063a9059cbb1461038a578063aaf5eb681461039d578063c6e6f592146103ac57600080fd5b80638da5cb5b116100d35780638da5cb5b1461034b5780638ff400f41461035c57806394bf804d1461036f57806395d89b411461038257600080fd5b8063715018a6146103095780637e108d5214610311578063834539451461032457600080fd5b8063379607f5116101665780633ba0b9a9116101405780633ba0b9a9146102b157806359974e38146102ba5780636e553f65146102cd57806370a08231146102e057600080fd5b8063379607f51461025557806338d52e0f1461026a5780633a98ef39146102a957600080fd5b8063095ea7b3116101a2578063095ea7b31461020857806318160ddd1461022b57806323b872dd14610233578063313ce5671461024657600080fd5b806301e1d114146101c957806306fdde03146101e057806307a2d13a146101f5575b600080fd5b6007545b6040519081526020015b60405180910390f35b6101e861041e565b6040516101d791906113be565b6101cd61020336600461140c565b6104b0565b61021b61021636600461143a565b6104c1565b60405190151581526020016101d7565b6002546101cd565b61021b610241366004611466565b6104d9565b604051601281526020016101d7565b61026861026336600461140c565b6104fd565b005b6102917f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101d7565b6008546101cd565b6101cd60095481565b6102686102c836600461140c565b6107b6565b6101cd6102db3660046114a7565b6108a3565b6101cd6102ee3660046114d7565b6001600160a01b031660009081526020819052604090205490565b6102686109e4565b6101cd61031f36600461140c565b6109f8565b6102917f000000000000000000000000000000000000000000000000000000000000000081565b6006546001600160a01b0316610291565b6101cd61036a36600461143a565b610b9f565b6101cd61037d3660046114a7565b610c8c565b6101e8610dbf565b61021b61039836600461143a565b610dce565b6101cd670de0b6b3a764000081565b6101cd6103ba36600461140c565b610ddc565b6101cd600a5481565b6101cd62093a8081565b6101cd6103e03660046114fb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102686104193660046114d7565b610de7565b60606003805461042d90611529565b80601f016020809104026020016040519081016040528092919081815260200182805461045990611529565b80156104a65780601f1061047b576101008083540402835291602001916104a6565b820191906000526020600020905b81548152906001019060200180831161048957829003601f168201915b5050505050905090565b60006104bb82610e22565b92915050565b6000336104cf818585610e53565b5060019392505050565b6000336104e7858285610e65565b6104f2858585610ee4565b506001949350505050565b610505610f43565b6040516331a9108f60e11b81526004810182905233906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa15801561056c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105909190611563565b6001600160a01b0316146105db5760405162461bcd60e51b815260206004820152600d60248201526c2737ba1027232a1037bbb732b960991b60448201526064015b60405180910390fd5b604051635dde889560e01b81526004810182905260009081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635dde8895906024016040805180830381865afa158015610644573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106689190611580565b91509150804210156106bc5760405162461bcd60e51b815260206004820152601c60248201527f5769746864726177616c206e6f7420617661696c61626c65207965740000000060448201526064016105d2565b604051630852cd8d60e31b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906342966c6890602401600060405180830381600087803b15801561071e57600080fd5b505af1158015610732573d6000803e3d6000fd5b5061076c9250506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690503384610f6d565b604080518481526020810184905233917f2d43eb174787155132b52ddb6b346e2dca99302eac3df4466dbeff953d3c84d1910160405180910390a250506107b36001600555565b50565b6107be610fcc565b6000811161080e5760405162461bcd60e51b815260206004820152601960248201527f52657761726420616d6f756e74206d757374206265203e20300000000000000060448201526064016105d2565b6108436001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610ff9565b806007600082825461085591906115ba565b909155506108639050611032565b6009546040805183815260208101929092527f29e98ba00d07f171959c4ddcd2f3020debc7c52cf537a034d7e664340d098c6c910160405180910390a150565b60006108ad610f43565b600083116108f25760405162461bcd60e51b81526020600482015260126024820152710417373657473206d757374206265203e20360741b60448201526064016105d2565b6108fb83611067565b90506000811161091d5760405162461bcd60e51b81526004016105d2906115cd565b6109526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333086610ff9565b826007600082825461096491906115ba565b92505081905550806008600082825461097d91906115ba565b9091555061098b9050611032565b610995828261108c565b60408051848152602081018390526001600160a01b038416917f73a19dd210f1a7f902193214c0ee91dd35ee5b4d920cba8d519eca65a7b488ca91015b60405180910390a26104bb6001600555565b6109ec610fcc565b6109f660006110c6565b565b6000610a02610f43565b60008211610a225760405162461bcd60e51b81526004016105d2906115cd565b33600090815260208190526040902054821115610a775760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742073686172657360681b60448201526064016105d2565b6000610a8283610e22565b9050610a8e3384611118565b8260086000828254610aa091906115f9565b9091555060009050610ab562093a80426115ba565b604051630ab714fb60e11b815233600482015260248101849052604481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063156e29f6906064016020604051808303816000875af1158015610b2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b50919061160c565b604080518681526020810183905291945033917f31f69201fab7912e3ec9850e3ab705964bf46d9d4276bdcbb6d05e965e5f5401910160405180910390a25050610b9a6001600555565b919050565b6040516370a0823160e01b81526001600160a01b03838116600483015260009182917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610c0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2e919061160c565b90506000610c51856001600160a01b031660009081526020819052604090205490565b90506000670de0b6b3a764000060095483610c6c9190611625565b610c76919061163c565b9050610c8281846115ba565b9695505050505050565b6000610c96610f43565b60008311610cb65760405162461bcd60e51b81526004016105d2906115cd565b610cbf83610e22565b905060008111610d065760405162461bcd60e51b81526020600482015260126024820152710417373657473206d757374206265203e20360741b60448201526064016105d2565b610d3b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610ff9565b8060076000828254610d4d91906115ba565b925050819055508260086000828254610d6691906115ba565b90915550610d749050611032565b610d7e828461108c565b60408051828152602081018590526001600160a01b038416917f73a19dd210f1a7f902193214c0ee91dd35ee5b4d920cba8d519eca65a7b488ca91016109d2565b60606004805461042d90611529565b6000336104cf818585610ee4565b60006104bb82611067565b610def610fcc565b6001600160a01b038116610e1957604051631e4fbdf760e01b8152600060048201526024016105d2565b6107b3816110c6565b6000600854600003610e32575090565b670de0b6b3a764000060095483610e499190611625565b6104bb919061163c565b610e60838383600161114e565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610ede5781811015610ecf57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016105d2565b610ede8484848403600061114e565b50505050565b6001600160a01b038316610f0e57604051634b637e8f60e11b8152600060048201526024016105d2565b6001600160a01b038216610f385760405163ec442f0560e01b8152600060048201526024016105d2565b610e60838383611223565b600260055403610f6657604051633ee5aeb560e01b815260040160405180910390fd5b6002600555565b6040516001600160a01b03838116602483015260448201839052610e6091859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061134d565b6006546001600160a01b031633146109f65760405163118cdaa760e01b81523360048201526024016105d2565b6040516001600160a01b038481166024830152838116604483015260648201839052610ede9186918216906323b872dd90608401610f9a565b6008541561106157600854670de0b6b3a76400006007546110539190611625565b61105d919061163c565b6009555b42600a55565b6000600854600003611077575090565b600954610e49670de0b6b3a764000084611625565b6001600160a01b0382166110b65760405163ec442f0560e01b8152600060048201526024016105d2565b6110c260008383611223565b5050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661114257604051634b637e8f60e11b8152600060048201526024016105d2565b6110c282600083611223565b6001600160a01b0384166111785760405163e602df0560e01b8152600060048201526024016105d2565b6001600160a01b0383166111a257604051634a1406b160e11b8152600060048201526024016105d2565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610ede57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161121591815260200190565b60405180910390a350505050565b6001600160a01b03831661124e57806002600082825461124391906115ba565b909155506112c09050565b6001600160a01b038316600090815260208190526040902054818110156112a15760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016105d2565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166112dc576002805482900390556112fb565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161134091815260200190565b60405180910390a3505050565b600080602060008451602086016000885af180611370576040513d6000823e3d81fd5b50506000513d91508115611388578060011415611395565b6001600160a01b0384163b155b15610ede57604051635274afe760e01b81526001600160a01b03851660048201526024016105d2565b600060208083528351808285015260005b818110156113eb578581018301518582016040015282016113cf565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561141e57600080fd5b5035919050565b6001600160a01b03811681146107b357600080fd5b6000806040838503121561144d57600080fd5b823561145881611425565b946020939093013593505050565b60008060006060848603121561147b57600080fd5b833561148681611425565b9250602084013561149681611425565b929592945050506040919091013590565b600080604083850312156114ba57600080fd5b8235915060208301356114cc81611425565b809150509250929050565b6000602082840312156114e957600080fd5b81356114f481611425565b9392505050565b6000806040838503121561150e57600080fd5b823561151981611425565b915060208301356114cc81611425565b600181811c9082168061153d57607f821691505b60208210810361155d57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561157557600080fd5b81516114f481611425565b6000806040838503121561159357600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b808201808211156104bb576104bb6115a4565b6020808252601290820152710536861726573206d757374206265203e20360741b604082015260600190565b818103818111156104bb576104bb6115a4565b60006020828403121561161e57600080fd5b5051919050565b80820281158282048414176104bb576104bb6115a4565b60008261165957634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220e14ea0cd3e8c8b3161781e66ab1585b1d9c818af4654d6d659ed52592d6de01564736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC8F33C91 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xD9A912EC EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xC6E6F592 EQ PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x8FF400F4 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x94BF804D EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x7E108D52 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x83453945 EQ PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x379607F5 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x3BA0B9A9 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x3BA0B9A9 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x59974E38 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x6E553F65 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x379607F5 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E1D114 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x7A2D13A EQ PUSH2 0x1F5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x13BE JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x140C JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH2 0x21B PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x143A JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x21B PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x1466 JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0x140C JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x291 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x1CD PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x140C JUMP JUMPDEST PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0x14A7 JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x9E4 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x31F CALLDATASIZE PUSH1 0x4 PUSH2 0x140C JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0x291 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x291 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x143A JUMP JUMPDEST PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x37D CALLDATASIZE PUSH1 0x4 PUSH2 0x14A7 JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0xDBF JUMP JUMPDEST PUSH2 0x21B PUSH2 0x398 CALLDATASIZE PUSH1 0x4 PUSH2 0x143A JUMP JUMPDEST PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x1CD PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0x140C JUMP JUMPDEST PUSH2 0xDDC JUMP JUMPDEST PUSH2 0x1CD PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1CD PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x14FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x14D7 JUMP JUMPDEST PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x42D SWAP1 PUSH2 0x1529 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x459 SWAP1 PUSH2 0x1529 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x489 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BB DUP3 PUSH2 0xE22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4CF DUP2 DUP6 DUP6 PUSH2 0xE53 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4E7 DUP6 DUP3 DUP6 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x4F2 DUP6 DUP6 DUP6 PUSH2 0xEE4 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x505 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x56C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2737BA1027232A1037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5DDE8895 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x5DDE8895 SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x644 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x668 SWAP2 SWAP1 PUSH2 0x1580 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 TIMESTAMP LT ISZERO PUSH2 0x6BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177616C206E6F7420617661696C61626C652079657400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x42966C68 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x732 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x76C SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 POP CALLER DUP5 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x2D43EB174787155132B52DDB6B346E2DCA99302EAC3DF4466DBEFF953D3C84D1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x7B3 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7BE PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657761726420616D6F756E74206D757374206265203E203000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x843 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0xFF9 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x855 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x863 SWAP1 POP PUSH2 0x1032 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x29E98BA00D07F171959C4DDCD2F3020DEBC7C52CF537A034D7E664340D098C6C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AD PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x8F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x417373657473206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x8FB DUP4 PUSH2 0x1067 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D2 SWAP1 PUSH2 0x15CD JUMP JUMPDEST PUSH2 0x952 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP7 PUSH2 0xFF9 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x964 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x97D SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x98B SWAP1 POP PUSH2 0x1032 JUMP JUMPDEST PUSH2 0x995 DUP3 DUP3 PUSH2 0x108C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH32 0x73A19DD210F1A7F902193214C0EE91DD35EE5B4D920CBA8D519ECA65A7B488CA SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x4BB PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x9EC PUSH2 0xFCC JUMP JUMPDEST PUSH2 0x9F6 PUSH1 0x0 PUSH2 0x10C6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA02 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D2 SWAP1 PUSH2 0x15CD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xA77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E73756666696369656E7420736861726573 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA82 DUP4 PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP PUSH2 0xA8E CALLER DUP5 PUSH2 0x1118 JUMP JUMPDEST DUP3 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAA0 SWAP2 SWAP1 PUSH2 0x15F9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0xAB5 PUSH3 0x93A80 TIMESTAMP PUSH2 0x15BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xAB714FB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x156E29F6 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB50 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP5 POP CALLER SWAP2 PUSH32 0x31F69201FAB7912E3EC9850E3AB705964BF46D9D4276BDCBB6D05E965E5F5401 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xB9A PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC0A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC2E SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC51 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x9 SLOAD DUP4 PUSH2 0xC6C SWAP2 SWAP1 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0xC76 SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST SWAP1 POP PUSH2 0xC82 DUP2 DUP5 PUSH2 0x15BA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC96 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xCB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D2 SWAP1 PUSH2 0x15CD JUMP JUMPDEST PUSH2 0xCBF DUP4 PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xD06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x417373657473206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0xD3B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0xFF9 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD4D SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD66 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xD74 SWAP1 POP PUSH2 0x1032 JUMP JUMPDEST PUSH2 0xD7E DUP3 DUP5 PUSH2 0x108C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH32 0x73A19DD210F1A7F902193214C0EE91DD35EE5B4D920CBA8D519ECA65A7B488CA SWAP2 ADD PUSH2 0x9D2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x42D SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4CF DUP2 DUP6 DUP6 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BB DUP3 PUSH2 0x1067 JUMP JUMPDEST PUSH2 0xDEF PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE19 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x7B3 DUP2 PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x0 SUB PUSH2 0xE32 JUMPI POP SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x9 SLOAD DUP4 PUSH2 0xE49 SWAP2 SWAP1 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0xE60 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x114E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0xEDE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xECF JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0xEDE DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x114E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF0E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF38 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0xE60 DUP4 DUP4 DUP4 PUSH2 0x1223 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0xF66 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xE60 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x134D JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9F6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xEDE SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x8 SLOAD ISZERO PUSH2 0x1061 JUMPI PUSH1 0x8 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x7 SLOAD PUSH2 0x1053 SWAP2 SWAP1 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x105D SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH1 0x9 SSTORE JUMPDEST TIMESTAMP PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x0 SUB PUSH2 0x1077 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0xE49 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10B6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x10C2 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1223 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1142 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x10C2 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1223 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1178 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11A2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xEDE JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1215 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x124E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1243 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x12C0 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x12A1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12DC JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1340 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x1370 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH1 0x0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x1388 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x1395 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xEDE JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13EB JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x13CF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x141E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x144D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1458 DUP2 PUSH2 0x1425 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x147B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1486 DUP2 PUSH2 0x1425 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1496 DUP2 PUSH2 0x1425 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x14CC DUP2 PUSH2 0x1425 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14F4 DUP2 PUSH2 0x1425 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x150E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1519 DUP2 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x14CC DUP2 PUSH2 0x1425 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x153D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x155D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14F4 DUP2 PUSH2 0x1425 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BB PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x536861726573206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BB PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x161E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4BB JUMPI PUSH2 0x4BB PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1659 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0x4E LOG0 0xCD RETURNDATACOPY DUP13 DUP12 BALANCE PUSH2 0x781E PUSH7 0xAB1585B1D9C818 0xAF CHAINID SLOAD 0xD6 0xD6 MSIZE 0xED MSTORE MSIZE 0x2D PUSH14 0xE01564736F6C6343000814003300 ","sourceMap":"627:7882:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6212:91;6284:12;;6212:91;;;160:25:27;;;148:2;133:18;6212:91:25;;;;;;;;1760:89:5;;;:::i;:::-;;;;;;;:::i;6764:121:25:-;;;;;;:::i;:::-;;:::i;3902:186:5:-;;;;;;:::i;:::-;;:::i;:::-;;;1555:14:27;;1548:22;1530:41;;1518:2;1503:18;3902:186:5;1390:187:27;2803:97:5;2881:12;;2803:97;;4680:244;;;;;;:::i;:::-;;:::i;2688:82::-;;;2761:2;2185:36:27;;2173:2;2158:18;2688:82:5;2043:184:27;5589:551:25;;;;;;:::i;:::-;;:::i;:::-;;729:29;;;;;;;;-1:-1:-1;;;;;2410:32:27;;;2392:51;;2380:2;2365:18;729:29:25;2232:217:27;6370:91:25;6442:12;;6370:91;;1163:27;;;;;;3987:478;;;;;;:::i;:::-;;:::i;2187:727::-;;;;;;:::i;:::-;;:::i;2933:116:5:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3024:18:5;2998:7;3024:18;;;;;;;;;;;;2933:116;2293:101:0;;;:::i;4660:806:25:-;;;;;;:::i;:::-;;:::i;764:44::-;;;;;1638:85:0;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;7014:576:25;;;;;;:::i;:::-;;:::i;3143:702::-;;;;;;:::i;:::-;;:::i;1962:93:5:-;;;:::i;3244:178::-;;;;;;:::i;:::-;;:::i;874:40:25:-;;910:4;874:40;;6552:121;;;;;;:::i;:::-;;:::i;1244:29::-;;;;;;819:49;;862:6;819:49;;3455:140:5;;;;;;:::i;:::-;-1:-1:-1;;;;;3561:18:5;;;3535:7;3561:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3455:140;2543:215:0;;;;;;:::i;:::-;;:::i;1760:89:5:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;6764:121:25:-;6828:7;6854:24;6871:6;6854:16;:24::i;:::-;6847:31;6764:121;-1:-1:-1;;6764:121:25:o;3902:186:5:-;3975:4;735:10:14;4029:31:5;735:10:14;4045:7:5;4054:5;4029:8;:31::i;:::-;-1:-1:-1;4077:4:5;;3902:186;-1:-1:-1;;;3902:186:5:o;4680:244::-;4767:4;735:10:14;4823:37:5;4839:4;735:10:14;4854:5:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;-1:-1:-1;4913:4:5;;4680:244;-1:-1:-1;;;;4680:244:5:o;5589:551:25:-;2500:21:16;:19;:21::i;:::-;5659:28:25::1;::::0;-1:-1:-1;;;5659:28:25;;::::1;::::0;::::1;160:25:27::0;;;5691:10:25::1;::::0;-1:-1:-1;;;;;5659:13:25::1;:21;::::0;::::1;::::0;133:18:27;;5659:28:25::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5659:42:25::1;;5651:68;;;::::0;-1:-1:-1;;;5651:68:25;;4700:2:27;5651:68:25::1;::::0;::::1;4682:21:27::0;4739:2;4719:18;;;4712:30;-1:-1:-1;;;4758:18:27;;;4751:43;4811:18;;5651:68:25::1;;;;;;;;;5782:38;::::0;-1:-1:-1;;;5782:38:25;;::::1;::::0;::::1;160:25:27::0;;;5739:18:25::1;::::0;;;-1:-1:-1;;;;;5782:13:25::1;:31;::::0;::::1;::::0;133:18:27;;5782:38:25::1;::::0;::::1;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5738:82;;;;5857:11;5838:15;:30;;5830:71;;;::::0;-1:-1:-1;;;5830:71:25;;5292:2:27;5830:71:25::1;::::0;::::1;5274:21:27::0;5331:2;5311:18;;;5304:30;5370;5350:18;;;5343:58;5418:18;;5830:71:25::1;5090:352:27::0;5830:71:25::1;5940:25;::::0;-1:-1:-1;;;5940:25:25;;::::1;::::0;::::1;160::27::0;;;5940:13:25::1;-1:-1:-1::0;;;;;5940:18:25::1;::::0;::::1;::::0;133::27;;5940:25:25::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;6019:42:25::1;::::0;-1:-1:-1;;;;;;;6019:5:25::1;:18;::::0;-1:-1:-1;6038:10:25::1;6050::::0;6019:18:::1;:42::i;:::-;6085:48;::::0;;5621:25:27;;;5677:2;5662:18;;5655:34;;;6103:10:25::1;::::0;6085:48:::1;::::0;5594:18:27;6085:48:25::1;;;;;;;5641:499;;2542:20:16::0;1857:1;3068:7;:21;2888:208;2542:20;5589:551:25;:::o;3987:478::-;1531:13:0;:11;:13::i;:::-;4088:1:25::1;4073:12;:16;4065:54;;;::::0;-1:-1:-1;;;4065:54:25;;5902:2:27;4065:54:25::1;::::0;::::1;5884:21:27::0;5941:2;5921:18;;;5914:30;5980:27;5960:18;;;5953:55;6025:18;;4065:54:25::1;5700:349:27::0;4065:54:25::1;4175:63;-1:-1:-1::0;;;;;4175:5:25::1;:22;4198:10;4218:4;4225:12:::0;4175:22:::1;:63::i;:::-;4304:12;4288;;:28;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;4367:21:25::1;::::0;-1:-1:-1;4367:19:25::1;:21::i;:::-;4445:12;::::0;4412:46:::1;::::0;;5621:25:27;;;5677:2;5662:18;;5655:34;;;;4412:46:25::1;::::0;5594:18:27;4412:46:25::1;;;;;;;3987:478:::0;:::o;2187:727::-;2296:14;2500:21:16;:19;:21::i;:::-;2344:1:25::1;2335:6;:10;2327:41;;;::::0;-1:-1:-1;;;2327:41:25;;6518:2:27;2327:41:25::1;::::0;::::1;6500:21:27::0;6557:2;6537:18;;;6530:30;-1:-1:-1;;;6576:18:27;;;6569:48;6634:18;;2327:41:25::1;6316:342:27::0;2327:41:25::1;2455:24;2472:6;2455:16;:24::i;:::-;2446:33;;2506:1;2497:6;:10;2489:41;;;;-1:-1:-1::0;;;2489:41:25::1;;;;;;;:::i;:::-;2586:57;-1:-1:-1::0;;;;;2586:5:25::1;:22;2609:10;2629:4;2636:6:::0;2586:22:::1;:57::i;:::-;2702:6;2686:12;;:22;;;;;;;:::i;:::-;;;;;;;;2734:6;2718:12;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;2750:21:25::1;::::0;-1:-1:-1;2750:19:25::1;:21::i;:::-;2825:23;2831:8;2841:6;2825:5;:23::i;:::-;2872:35;::::0;;5621:25:27;;;5677:2;5662:18;;5655:34;;;-1:-1:-1;;;;;2872:35:25;::::1;::::0;::::1;::::0;5594:18:27;2872:35:25::1;;;;;;;;2542:20:16::0;1857:1;3068:7;:21;2888:208;2293:101:0;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4660:806:25:-;4760:13;2500:21:16;:19;:21::i;:::-;4807:1:25::1;4798:6;:10;4790:41;;;;-1:-1:-1::0;;;4790:41:25::1;;;;;;;:::i;:::-;4859:10;2998:7:5::0;3024:18;;;;;;;;;;;4874:6:25;-1:-1:-1;4849:31:25::1;4841:63;;;::::0;-1:-1:-1;;;4841:63:25;;7212:2:27;4841:63:25::1;::::0;::::1;7194:21:27::0;7251:2;7231:18;;;7224:30;-1:-1:-1;;;7270:18:27;;;7263:49;7329:18;;4841:63:25::1;7010:343:27::0;4841:63:25::1;4987:18;5008:24;5025:6;5008:16;:24::i;:::-;4987:45;;5074:25;5080:10;5092:6;5074:5;:25::i;:::-;5125:6;5109:12;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;5220:19:25::1;::::0;-1:-1:-1;5242:34:25::1;862:6;5242:15;:34;:::i;:::-;5334:55;::::0;-1:-1:-1;;;5334:55:25;;5353:10:::1;5334:55;::::0;::::1;7693:51:27::0;7760:18;;;7753:34;;;7803:18;;;7796:34;;;5220:56:25;;-1:-1:-1;5334:13:25::1;-1:-1:-1::0;;;;;5334:18:25::1;::::0;::::1;::::0;7666::27;;5334:55:25::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5413:46;::::0;;5621:25:27;;;5677:2;5662:18;;5655:34;;;5326:63:25;;-1:-1:-1;5433:10:25::1;::::0;5413:46:::1;::::0;5594:18:27;5413:46:25::1;;;;;;;4780:686;;2542:20:16::0;1857:1;3068:7;:21;2888:208;2542:20;4660:806:25;;;:::o;7014:576::-;7194:21;;-1:-1:-1;;;7194:21:25;;-1:-1:-1;;;;;2410:32:27;;;7194:21:25;;;2392:51:27;7104:7:25;;;;7194:5;:15;;;;2365:18:27;;7194:21:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7171:44;;7331:18;7352:15;7362:4;-1:-1:-1;;;;;3024:18:5;2998:7;3024:18;;;;;;;;;;;;2933:116;7352:15:25;7331:36;;7464:22;910:4;7503:12;;7490:10;:25;;;;:::i;:::-;7489:39;;;;:::i;:::-;7464:64;-1:-1:-1;7554:29:25;7464:64;7554:12;:29;:::i;:::-;7547:36;7014:576;-1:-1:-1;;;;;;7014:576:25:o;3143:702::-;3249:14;2500:21:16;:19;:21::i;:::-;3297:1:25::1;3288:6;:10;3280:41;;;;-1:-1:-1::0;;;3280:41:25::1;;;;;;;:::i;:::-;3386:24;3403:6;3386:16;:24::i;:::-;3377:33;;3437:1;3428:6;:10;3420:41;;;::::0;-1:-1:-1;;;3420:41:25;;6518:2:27;3420:41:25::1;::::0;::::1;6500:21:27::0;6557:2;6537:18;;;6530:30;-1:-1:-1;;;6576:18:27;;;6569:48;6634:18;;3420:41:25::1;6316:342:27::0;3420:41:25::1;3517:57;-1:-1:-1::0;;;;;3517:5:25::1;:22;3540:10;3560:4;3567:6:::0;3517:22:::1;:57::i;:::-;3633:6;3617:12;;:22;;;;;;;:::i;:::-;;;;;;;;3665:6;3649:12;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;3681:21:25::1;::::0;-1:-1:-1;3681:19:25::1;:21::i;:::-;3756:23;3762:8;3772:6;3756:5;:23::i;:::-;3803:35;::::0;;5621:25:27;;;5677:2;5662:18;;5655:34;;;-1:-1:-1;;;;;3803:35:25;::::1;::::0;::::1;::::0;5594:18:27;3803:35:25::1;5447:248:27::0;1962:93:5;2009:13;2041:7;2034:14;;;;;:::i;3244:178::-;3313:4;735:10:14;3367:27:5;735:10:14;3384:2:5;3388:5;3367:9;:27::i;6552:121:25:-;6616:7;6642:24;6659:6;6642:16;:24::i;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2392:51:27::0;2365:18;;2672:31:0::1;2232:217:27::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;7978:228:25:-:0;8043:7;8066:12;;8082:1;8066:17;8062:86;;-1:-1:-1;8106:6:25;7978:228::o;8062:86::-;910:4;8174:12;;8165:6;:21;;;;:::i;:::-;8164:35;;;;:::i;8630:128:5:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;10319:476::-;-1:-1:-1;;;;;3561:18:5;;;10418:24;3561:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10484:36:5;;10480:309;;;10559:5;10540:16;:24;10536:130;;;10591:60;;-1:-1:-1;;;10591:60:5;;-1:-1:-1;;;;;7711:32:27;;10591:60:5;;;7693:51:27;7760:18;;;7753:34;;;7803:18;;;7796:34;;;7666:18;;10591:60:5;7491:345:27;10536:130:5;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10408:387;10319:476;;;:::o;5297:300::-;-1:-1:-1;;;;;5380:18:5;;5376:86;;5421:30;;-1:-1:-1;;;5421:30:5;;5448:1;5421:30;;;2392:51:27;2365:18;;5421:30:5;2232:217:27;5376:86:5;-1:-1:-1;;;;;5475:16:5;;5471:86;;5514:32;;-1:-1:-1;;;5514:32:5;;5543:1;5514:32;;;2392:51:27;2365:18;;5514:32:5;2232:217:27;5471:86:5;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;2575:307:16:-;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:16;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;1219:160:8:-;1328:43;;-1:-1:-1;;;;;8617:32:27;;;1328:43:8;;;8599:51:27;8666:18;;;8659:34;;;1301:71:8;;1321:5;;1343:14;;;;;8572:18:27;;1328:43:8;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1328:43:8;;;;;;;;;;;1301:19;:71::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:14;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:14;1901:40:0;;;2392:51:27;2365:18;;1901:40:0;2232:217:27;1618:188:8;1745:53;;-1:-1:-1;;;;;8962:15:27;;;1745:53:8;;;8944:34:27;9014:15;;;8994:18;;;8987:43;9046:18;;;9039:34;;;1718:81:8;;1738:5;;1760:18;;;;;8879::27;;1745:53:8;8704:375:27;8306:201:25;8360:12;;:16;8356:103;;8436:12;;910:4;8408:12;;:24;;;;:::i;:::-;8407:41;;;;:::i;:::-;8392:12;:56;8356:103;8485:15;8468:14;:32;8306:201::o;7674:220::-;7739:7;7762:12;;7778:1;7762:17;7758:78;;-1:-1:-1;7802:6:25;7674:220::o;7758:78::-;7875:12;;7853:18;910:4;7853:6;:18;:::i;7362:208:5:-;-1:-1:-1;;;;;7432:21:5;;7428:91;;7476:32;;-1:-1:-1;;;7476:32:5;;7505:1;7476:32;;;2392:51:27;2365:18;;7476:32:5;2232:217:27;7428:91:5;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7888:206:5:-;-1:-1:-1;;;;;7958:21:5;;7954:89;;8002:30;;-1:-1:-1;;;8002:30:5;;8029:1;8002:30;;;2392:51:27;2365:18;;8002:30:5;2232:217:27;7954:89:5;8052:35;8060:7;8077:1;8081:5;8052:7;:35::i;9605:432::-;-1:-1:-1;;;;;9717:19:5;;9713:89;;9759:32;;-1:-1:-1;;;9759:32:5;;9788:1;9759:32;;;2392:51:27;2365:18;;9759:32:5;2232:217:27;9713:89:5;-1:-1:-1;;;;;9815:21:5;;9811:90;;9859:31;;-1:-1:-1;;;9859:31:5;;9887:1;9859:31;;;2392:51:27;2365:18;;9859:31:5;2232:217:27;9811:90:5;-1:-1:-1;;;;;9910:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;9955:76;;;;10005:7;-1:-1:-1;;;;;9989:31:5;9998:5;-1:-1:-1;;;;;9989:31:5;;10014:5;9989:31;;;;160:25:27;;148:2;133:18;;14:177;9989:31:5;;;;;;;;9605:432;;;;:::o;5912:1107::-;-1:-1:-1;;;;;6001:18:5;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;5997:540:5;;-1:-1:-1;5997:540:5;;-1:-1:-1;;;;;6211:15:5;;6189:19;6211:15;;;;;;;;;;;6244:19;;;6240:115;;;6290:50;;-1:-1:-1;;;6290:50:5;;-1:-1:-1;;;;;7711:32:27;;6290:50:5;;;7693:51:27;7760:18;;;7753:34;;;7803:18;;;7796:34;;;7666:18;;6290:50:5;7491:345:27;6240:115:5;-1:-1:-1;;;;;6475:15:5;;:9;:15;;;;;;;;;;6493:19;;;;6475:37;;5997:540;-1:-1:-1;;;;;6551:16:5;;6547:425;;6714:12;:21;;;;;;;6547:425;;;-1:-1:-1;;;;;6925:13:5;;:9;:13;;;;;;;;;;:22;;;;;;6547:425;7002:2;-1:-1:-1;;;;;6987:25:5;6996:4;-1:-1:-1;;;;;6987:25:5;;7006:5;6987:25;;;;160::27;;148:2;133:18;;14:177;6987:25:5;;;;;;;;5912:1107;;;:::o;8370:720:8:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:8;8910:8;8866:16;;-1:-1:-1;8942:15:8;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:8;;;:31;8942:68;8938:146;;;9033:40;;-1:-1:-1;;;9033:40:8;;-1:-1:-1;;;;;2410:32:27;;9033:40:8;;;2392:51:27;2365:18;;9033:40:8;2232:217:27;196:548;308:4;337:2;366;355:9;348:21;398:6;392:13;441:6;436:2;425:9;421:18;414:34;466:1;476:140;490:6;487:1;484:13;476:140;;;585:14;;;581:23;;575:30;551:17;;;570:2;547:26;540:66;505:10;;476:140;;;480:3;665:1;660:2;651:6;640:9;636:22;632:31;625:42;735:2;728;724:7;719:2;711:6;707:15;703:29;692:9;688:45;684:54;676:62;;;;196:548;;;;:::o;749:180::-;808:6;861:2;849:9;840:7;836:23;832:32;829:52;;;877:1;874;867:12;829:52;-1:-1:-1;900:23:27;;749:180;-1:-1:-1;749:180:27:o;934:131::-;-1:-1:-1;;;;;1009:31:27;;999:42;;989:70;;1055:1;1052;1045:12;1070:315;1138:6;1146;1199:2;1187:9;1178:7;1174:23;1170:32;1167:52;;;1215:1;1212;1205:12;1167:52;1254:9;1241:23;1273:31;1298:5;1273:31;:::i;:::-;1323:5;1375:2;1360:18;;;;1347:32;;-1:-1:-1;;;1070:315:27:o;1582:456::-;1659:6;1667;1675;1728:2;1716:9;1707:7;1703:23;1699:32;1696:52;;;1744:1;1741;1734:12;1696:52;1783:9;1770:23;1802:31;1827:5;1802:31;:::i;:::-;1852:5;-1:-1:-1;1909:2:27;1894:18;;1881:32;1922:33;1881:32;1922:33;:::i;:::-;1582:456;;1974:7;;-1:-1:-1;;;2028:2:27;2013:18;;;;2000:32;;1582:456::o;2454:315::-;2522:6;2530;2583:2;2571:9;2562:7;2558:23;2554:32;2551:52;;;2599:1;2596;2589:12;2551:52;2635:9;2622:23;2612:33;;2695:2;2684:9;2680:18;2667:32;2708:31;2733:5;2708:31;:::i;:::-;2758:5;2748:15;;;2454:315;;;;;:::o;2774:247::-;2833:6;2886:2;2874:9;2865:7;2861:23;2857:32;2854:52;;;2902:1;2899;2892:12;2854:52;2941:9;2928:23;2960:31;2985:5;2960:31;:::i;:::-;3010:5;2774:247;-1:-1:-1;;;2774:247:27:o;3464:388::-;3532:6;3540;3593:2;3581:9;3572:7;3568:23;3564:32;3561:52;;;3609:1;3606;3599:12;3561:52;3648:9;3635:23;3667:31;3692:5;3667:31;:::i;:::-;3717:5;-1:-1:-1;3774:2:27;3759:18;;3746:32;3787:33;3746:32;3787:33;:::i;3857:380::-;3936:1;3932:12;;;;3979;;;4000:61;;4054:4;4046:6;4042:17;4032:27;;4000:61;4107:2;4099:6;4096:14;4076:18;4073:38;4070:161;;4153:10;4148:3;4144:20;4141:1;4134:31;4188:4;4185:1;4178:15;4216:4;4213:1;4206:15;4070:161;;3857:380;;;:::o;4242:251::-;4312:6;4365:2;4353:9;4344:7;4340:23;4336:32;4333:52;;;4381:1;4378;4371:12;4333:52;4413:9;4407:16;4432:31;4457:5;4432:31;:::i;4840:245::-;4919:6;4927;4980:2;4968:9;4959:7;4955:23;4951:32;4948:52;;;4996:1;4993;4986:12;4948:52;-1:-1:-1;;5019:16:27;;5075:2;5060:18;;;5054:25;5019:16;;5054:25;;-1:-1:-1;4840:245:27:o;6054:127::-;6115:10;6110:3;6106:20;6103:1;6096:31;6146:4;6143:1;6136:15;6170:4;6167:1;6160:15;6186:125;6251:9;;;6272:10;;;6269:36;;;6285:18;;:::i;6663:342::-;6865:2;6847:21;;;6904:2;6884:18;;;6877:30;-1:-1:-1;;;6938:2:27;6923:18;;6916:48;6996:2;6981:18;;6663:342::o;7358:128::-;7425:9;;;7446:11;;;7443:37;;;7460:18;;:::i;7841:184::-;7911:6;7964:2;7952:9;7943:7;7939:23;7935:32;7932:52;;;7980:1;7977;7970:12;7932:52;-1:-1:-1;8003:16:27;;7841:184;-1:-1:-1;7841:184:27:o;8030:168::-;8103:9;;;8134;;8151:15;;;8145:22;;8131:37;8121:71;;8172:18;;:::i;8203:217::-;8243:1;8269;8259:132;;8313:10;8308:3;8304:20;8301:1;8294:31;8348:4;8345:1;8338:15;8376:4;8373:1;8366:15;8259:132;-1:-1:-1;8405:9:27;;8203:217::o"},"methodIdentifiers":{"PRECISION()":"aaf5eb68","UNBONDING_PERIOD()":"d9a912ec","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","asset()":"38d52e0f","balanceOf(address)":"70a08231","claim(uint256)":"379607f5","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","decimals()":"313ce567","deposit(uint256,address)":"6e553f65","distributeRewards(uint256)":"59974e38","exchangeRate()":"3ba0b9a9","getVotingPower(address,uint256)":"8ff400f4","initiateWithdraw(uint256)":"7e108d52","lastUpdateTime()":"c8f33c91","mint(uint256,address)":"94bf804d","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalAssets()":"01e1d114","totalShares()":"3a98ef39","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","withdrawalNFT()":"83453945"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_withdrawalNFT\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newExchangeRate\",\"type\":\"uint256\"}],\"name\":\"RewardsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"WithdrawalClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"WithdrawalInitiated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNBONDING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"distributeRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"initiateWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalNFT\",\"outputs\":[{\"internalType\":\"contract WithdrawalNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-4626-like liquid staking vault with time-locked redemptions Implements shares model where exchange rate = totalAssets / totalShares LST tokens appreciate over time as rewards are distributed\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"claim(uint256)\":{\"details\":\"Claim withdrawal after unbonding period\",\"params\":{\"nftId\":\"ID of the withdrawal NFT\"}},\"convertToAssets(uint256)\":{\"details\":\"Convert shares to assets using current exchange rate\"},\"convertToShares(uint256)\":{\"details\":\"Convert assets to shares using current exchange rate\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"deposit(uint256,address)\":{\"details\":\"Deposit assets and mint shares\",\"params\":{\"assets\":\"Amount of assets to deposit\",\"receiver\":\"Address to receive shares\"},\"returns\":{\"shares\":\"Amount of shares minted\"}},\"distributeRewards(uint256)\":{\"details\":\"Distribute rewards to increase exchange rate\",\"params\":{\"rewardAmount\":\"Amount of rewards to distribute\"}},\"getVotingPower(address,uint256)\":{\"details\":\"Get voting power for a user (assets + LST * exchange rate)\",\"params\":{\"user\":\"User address\"}},\"initiateWithdraw(uint256)\":{\"details\":\"Initiate withdrawal by burning shares and minting withdrawal NFT\",\"params\":{\"shares\":\"Amount of shares to burn\"},\"returns\":{\"nftId\":\"ID of the withdrawal NFT\"}},\"mint(uint256,address)\":{\"details\":\"Mint shares for assets (alternative to deposit)\",\"params\":{\"receiver\":\"Address to receive shares\",\"shares\":\"Amount of shares to mint\"},\"returns\":{\"assets\":\"Amount of assets required\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalAssets()\":{\"details\":\"Get total assets under management\"},\"totalShares()\":{\"details\":\"Get total shares outstanding\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"LiquidStakingVault\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LiquidStakingVault.sol\":\"LiquidStakingVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/LiquidStakingVault.sol\":{\"keccak256\":\"0x3c2944741fb3047d2783287e7c95b026523f333089a8b6ca2178788c0d5e91d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78457c25656d267706a5a430b4db742c53b1d3c8b01a2df0a149584cb1f7458e\",\"dweb:/ipfs/QmYrpPM6s8z83mjV9GB7P8gqX56sNabxsPwJyQGpSNHNoQ\"]},\"contracts/WithdrawalNFT.sol\":{\"keccak256\":\"0x45ee217cf8ca1652f79774ffce52c37a55200d1313503de9aeed62e14f7f8058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f5a6d2bdb7d63b79308711271e4c894d6a78766f2dbbd939836515d8c19c289\",\"dweb:/ipfs/QmVN2AidKgsRmfPpfaBVNkAVTEKU5LT8Sw6i3j4Mc8xL96\"]}},\"version\":1}"}},"contracts/WithdrawalNFT.sol":{"WithdrawalNFT":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"WithdrawalBurned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"assetsOwed","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"availableAt","type":"uint256"}],"name":"WithdrawalMinted","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getWithdrawalInfo","outputs":[{"internalType":"uint256","name":"assetsOwed","type":"uint256"},{"internalType":"uint256","name":"availableAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"isWithdrawalAvailable","outputs":[{"internalType":"bool","name":"available","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"assetsOwed","type":"uint256"},{"internalType":"uint256","name":"availableAt","type":"uint256"}],"name":"mint","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"withdrawals","outputs":[{"internalType":"uint256","name":"assetsOwed","type":"uint256"},{"internalType":"uint256","name":"availableAt","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1527":{"entryPoint":null,"id":1527,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8954":{"entryPoint":null,"id":8954,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":198,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":362,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":445,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":302,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":280,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2940:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:27"},"nodeType":"YulFunctionCall","src":"66:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:27"},"nodeType":"YulFunctionCall","src":"56:31:27"},"nodeType":"YulExpressionStatement","src":"56:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:27"},"nodeType":"YulFunctionCall","src":"96:15:27"},"nodeType":"YulExpressionStatement","src":"96:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:27"},"nodeType":"YulFunctionCall","src":"120:15:27"},"nodeType":"YulExpressionStatement","src":"120:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:27"},{"body":{"nodeType":"YulBlock","src":"201:325:27","statements":[{"nodeType":"YulAssignment","src":"211:22:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"225:1:27","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"228:4:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"221:3:27"},"nodeType":"YulFunctionCall","src":"221:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"211:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"242:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"272:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"278:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"268:3:27"},"nodeType":"YulFunctionCall","src":"268:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"246:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"319:31:27","statements":[{"nodeType":"YulAssignment","src":"321:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"335:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"343:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"331:3:27"},"nodeType":"YulFunctionCall","src":"331:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"321:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"299:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:27"},"nodeType":"YulFunctionCall","src":"292:26:27"},"nodeType":"YulIf","src":"289:61:27"},{"body":{"nodeType":"YulBlock","src":"409:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"430:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"437:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"442:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"433:3:27"},"nodeType":"YulFunctionCall","src":"433:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"423:6:27"},"nodeType":"YulFunctionCall","src":"423:31:27"},"nodeType":"YulExpressionStatement","src":"423:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"474:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"477:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"467:6:27"},"nodeType":"YulFunctionCall","src":"467:15:27"},"nodeType":"YulExpressionStatement","src":"467:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"495:6:27"},"nodeType":"YulFunctionCall","src":"495:15:27"},"nodeType":"YulExpressionStatement","src":"495:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"365:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"388:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"385:2:27"},"nodeType":"YulFunctionCall","src":"385:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"362:2:27"},"nodeType":"YulFunctionCall","src":"362:38:27"},"nodeType":"YulIf","src":"359:161:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"181:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"190:6:27","type":""}],"src":"146:380:27"},{"body":{"nodeType":"YulBlock","src":"587:65:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:27","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"607:3:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:27"},"nodeType":"YulFunctionCall","src":"597:14:27"},"nodeType":"YulExpressionStatement","src":"597:14:27"},{"nodeType":"YulAssignment","src":"620:26:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"628:9:27"},"nodeType":"YulFunctionCall","src":"628:18:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"620:4:27"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"570:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"578:4:27","type":""}],"src":"531:121:27"},{"body":{"nodeType":"YulBlock","src":"738:464:27","statements":[{"body":{"nodeType":"YulBlock","src":"771:425:27","statements":[{"nodeType":"YulVariableDeclaration","src":"785:11:27","value":{"kind":"number","nodeType":"YulLiteral","src":"795:1:27","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"789:2:27","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"816:2:27"},{"name":"array","nodeType":"YulIdentifier","src":"820:5:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:27"},"nodeType":"YulFunctionCall","src":"809:17:27"},"nodeType":"YulExpressionStatement","src":"809:17:27"},{"nodeType":"YulVariableDeclaration","src":"839:31:27","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"861:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"865:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"851:9:27"},"nodeType":"YulFunctionCall","src":"851:19:27"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"843:4:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"883:57:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"906:4:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"916:1:27","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"923:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"935:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:27"},"nodeType":"YulFunctionCall","src":"919:19:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"912:3:27"},"nodeType":"YulFunctionCall","src":"912:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:27"},"nodeType":"YulFunctionCall","src":"902:38:27"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"887:11:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"977:23:27","statements":[{"nodeType":"YulAssignment","src":"979:19:27","value":{"name":"data","nodeType":"YulIdentifier","src":"994:4:27"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"979:11:27"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"959:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"971:4:27","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"956:2:27"},"nodeType":"YulFunctionCall","src":"956:20:27"},"nodeType":"YulIf","src":"953:47:27"},{"nodeType":"YulVariableDeclaration","src":"1013:41:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1027:4:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:27","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1044:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:27"},"nodeType":"YulFunctionCall","src":"1040:12:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1033:3:27"},"nodeType":"YulFunctionCall","src":"1033:20:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:27"},"nodeType":"YulFunctionCall","src":"1023:31:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1017:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1067:24:27","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1080:11:27"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1071:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1165:21:27","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1174:5:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1181:2:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1167:6:27"},"nodeType":"YulFunctionCall","src":"1167:17:27"},"nodeType":"YulExpressionStatement","src":"1167:17:27"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1115:5:27"},{"name":"_2","nodeType":"YulIdentifier","src":"1122:2:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1112:2:27"},"nodeType":"YulFunctionCall","src":"1112:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1126:26:27","statements":[{"nodeType":"YulAssignment","src":"1128:22:27","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1141:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1137:3:27"},"nodeType":"YulFunctionCall","src":"1137:13:27"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1128:5:27"}]}]},"pre":{"nodeType":"YulBlock","src":"1108:3:27","statements":[]},"src":"1104:82:27"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"754:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"759:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"751:2:27"},"nodeType":"YulFunctionCall","src":"751:11:27"},"nodeType":"YulIf","src":"748:448:27"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"710:5:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"717:3:27","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"722:10:27","type":""}],"src":"657:545:27"},{"body":{"nodeType":"YulBlock","src":"1292:81:27","statements":[{"nodeType":"YulAssignment","src":"1302:65:27","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1317:4:27"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:1:27","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1338:3:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1331:3:27"},"nodeType":"YulFunctionCall","src":"1331:11:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1348:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1344:3:27"},"nodeType":"YulFunctionCall","src":"1344:6:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1327:3:27"},"nodeType":"YulFunctionCall","src":"1327:24:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1323:3:27"},"nodeType":"YulFunctionCall","src":"1323:29:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1313:3:27"},"nodeType":"YulFunctionCall","src":"1313:40:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1359:1:27","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1362:3:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1355:3:27"},"nodeType":"YulFunctionCall","src":"1355:11:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1310:2:27"},"nodeType":"YulFunctionCall","src":"1310:57:27"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1302:4:27"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1269:4:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"1275:3:27","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1283:4:27","type":""}],"src":"1207:166:27"},{"body":{"nodeType":"YulBlock","src":"1474:1256:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1484:24:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1504:3:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:27"},"nodeType":"YulFunctionCall","src":"1498:10:27"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1488:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1551:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1553:16:27"},"nodeType":"YulFunctionCall","src":"1553:18:27"},"nodeType":"YulExpressionStatement","src":"1553:18:27"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1523:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:2:27","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1543:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1535:3:27"},"nodeType":"YulFunctionCall","src":"1535:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"1547:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:27"},"nodeType":"YulFunctionCall","src":"1531:18:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1520:2:27"},"nodeType":"YulFunctionCall","src":"1520:30:27"},"nodeType":"YulIf","src":"1517:56:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1626:4:27"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1664:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1658:5:27"},"nodeType":"YulFunctionCall","src":"1658:11:27"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1632:25:27"},"nodeType":"YulFunctionCall","src":"1632:38:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"1672:6:27"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1582:43:27"},"nodeType":"YulFunctionCall","src":"1582:97:27"},"nodeType":"YulExpressionStatement","src":"1582:97:27"},{"nodeType":"YulVariableDeclaration","src":"1688:18:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1705:1:27","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1692:9:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1715:23:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:4:27","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1719:11:27","type":""}]},{"nodeType":"YulAssignment","src":"1747:24:27","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"1760:11:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1747:9:27"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"1817:656:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1831:35:27","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1850:6:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1862:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1858:3:27"},"nodeType":"YulFunctionCall","src":"1858:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1846:3:27"},"nodeType":"YulFunctionCall","src":"1846:20:27"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"1835:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1879:49:27","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:27"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"1893:29:27"},"nodeType":"YulFunctionCall","src":"1893:35:27"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"1883:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1941:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1950:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1945:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2028:172:27","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2053:6:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2071:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2076:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:27"},"nodeType":"YulFunctionCall","src":"2067:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2061:5:27"},"nodeType":"YulFunctionCall","src":"2061:26:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2046:6:27"},"nodeType":"YulFunctionCall","src":"2046:42:27"},"nodeType":"YulExpressionStatement","src":"2046:42:27"},{"nodeType":"YulAssignment","src":"2105:24:27","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2119:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2115:3:27"},"nodeType":"YulFunctionCall","src":"2115:14:27"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2105:6:27"}]},{"nodeType":"YulAssignment","src":"2146:40:27","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2163:9:27"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2174:11:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:27"},"nodeType":"YulFunctionCall","src":"2159:27:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2146:9:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1975:1:27"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"1978:7:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1972:2:27"},"nodeType":"YulFunctionCall","src":"1972:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1987:28:27","statements":[{"nodeType":"YulAssignment","src":"1989:24:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1998:1:27"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2001:11:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1994:3:27"},"nodeType":"YulFunctionCall","src":"1994:19:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1989:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"1968:3:27","statements":[]},"src":"1964:236:27"},{"body":{"nodeType":"YulBlock","src":"2248:166:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:43:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2298:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:27"},"nodeType":"YulFunctionCall","src":"2289:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:27"},"nodeType":"YulFunctionCall","src":"2283:26:27"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2270:9:27","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2333:6:27"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2345:9:27"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2372:1:27","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2375:6:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2368:3:27"},"nodeType":"YulFunctionCall","src":"2368:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"2384:3:27","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2364:3:27"},"nodeType":"YulFunctionCall","src":"2364:24:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2390:3:27"},"nodeType":"YulFunctionCall","src":"2390:6:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2360:3:27"},"nodeType":"YulFunctionCall","src":"2360:37:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2356:3:27"},"nodeType":"YulFunctionCall","src":"2356:42:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:27"},"nodeType":"YulFunctionCall","src":"2341:58:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2326:6:27"},"nodeType":"YulFunctionCall","src":"2326:74:27"},"nodeType":"YulExpressionStatement","src":"2326:74:27"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2219:7:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"2228:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2216:2:27"},"nodeType":"YulFunctionCall","src":"2216:19:27"},"nodeType":"YulIf","src":"2213:201:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2434:4:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2448:1:27","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2451:6:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2444:3:27"},"nodeType":"YulFunctionCall","src":"2444:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"2460:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2440:3:27"},"nodeType":"YulFunctionCall","src":"2440:22:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2427:6:27"},"nodeType":"YulFunctionCall","src":"2427:36:27"},"nodeType":"YulExpressionStatement","src":"2427:36:27"}]},"nodeType":"YulCase","src":"1810:663:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1815:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2490:234:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2504:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2517:1:27","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2508:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2553:67:27","statements":[{"nodeType":"YulAssignment","src":"2571:35:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2590:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2595:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2586:3:27"},"nodeType":"YulFunctionCall","src":"2586:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2580:5:27"},"nodeType":"YulFunctionCall","src":"2580:26:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2571:5:27"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2534:6:27"},"nodeType":"YulIf","src":"2531:89:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2640:4:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2699:5:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"2706:6:27"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2646:52:27"},"nodeType":"YulFunctionCall","src":"2646:67:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2633:6:27"},"nodeType":"YulFunctionCall","src":"2633:81:27"},"nodeType":"YulExpressionStatement","src":"2633:81:27"}]},"nodeType":"YulCase","src":"2482:242:27","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1790:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1798:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:27"},"nodeType":"YulFunctionCall","src":"1787:14:27"},"nodeType":"YulSwitch","src":"1780:944:27"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1459:4:27","type":""},{"name":"src","nodeType":"YulTypedName","src":"1465:3:27","type":""}],"src":"1378:1352:27"},{"body":{"nodeType":"YulBlock","src":"2836:102:27","statements":[{"nodeType":"YulAssignment","src":"2846:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2858:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2869:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2854:3:27"},"nodeType":"YulFunctionCall","src":"2854:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2846:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2903:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2919:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2924:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2915:3:27"},"nodeType":"YulFunctionCall","src":"2915:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"2928:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2911:3:27"},"nodeType":"YulFunctionCall","src":"2911:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2899:3:27"},"nodeType":"YulFunctionCall","src":"2899:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2881:6:27"},"nodeType":"YulFunctionCall","src":"2881:51:27"},"nodeType":"YulExpressionStatement","src":"2881:51:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2805:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2816:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2827:4:27","type":""}],"src":"2735:203:27"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405260016008553480156200001657600080fd5b50336040518060400160405280600e81526020016d15da5d1a191c985dd85b0813919560921b8152506040518060400160405280600a81526020016915d2551211149055d05360b21b8152508160009081620000739190620001bd565b506001620000828282620001bd565b5050506001600160a01b038116620000b457604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000bf81620000c6565b5062000289565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014357607f821691505b6020821081036200016457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b857600081815260208120601f850160051c81016020861015620001935750805b601f850160051c820191505b81811015620001b4578281556001016200019f565b5050505b505050565b81516001600160401b03811115620001d957620001d962000118565b620001f181620001ea84546200012e565b846200016a565b602080601f831160018114620002295760008415620002105750858301515b600019600386901b1c1916600185901b178555620001b4565b600085815260208120601f198616915b828110156200025a5788860151825594840194600190910190840162000239565b5085821015620002795787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6113e180620002996000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80636352211e116100b857806395d89b411161007c57806395d89b41146102c7578063a22cb465146102cf578063b88d4fde146102e2578063c87b56dd146102f5578063e985e9c514610308578063f2fde38b1461031b57600080fd5b80636352211e1461028057806370a0823114610293578063715018a6146102a657806375794a3c146102ae5780638da5cb5b146102b657600080fd5b8063156e29f61161010a578063156e29f6146101d757806323b872dd146101f857806342842e0e1461020b57806342966c681461021e5780635cc07076146102315780635dde88951461026d57600080fd5b806301ffc9a71461014757806306fdde031461016f578063081812fc14610184578063095ea7b3146101af5780631394f102146101c4575b600080fd5b61015a610155366004610fc9565b61032e565b60405190151581526020015b60405180910390f35b610177610380565b6040516101669190611036565b610197610192366004611049565b610412565b6040516001600160a01b039091168152602001610166565b6101c26101bd36600461107e565b61043b565b005b61015a6101d2366004611049565b61044a565b6101ea6101e53660046110a8565b61049e565b604051908152602001610166565b6101c26102063660046110db565b610542565b6101c26102193660046110db565b6105cd565b6101c261022c366004611049565b6105ed565b61025861023f366004611049565b6007602052600090815260409020805460019091015482565b60408051928352602083019190915201610166565b61025861027b366004611049565b610672565b61019761028e366004611049565b6106d6565b6101ea6102a1366004611117565b6106e1565b6101c2610729565b6008546101ea565b6006546001600160a01b0316610197565b61017761073d565b6101c26102dd366004611132565b61074c565b6101c26102f0366004611184565b610757565b610177610303366004611049565b61076f565b61015a610316366004611260565b6107e4565b6101c2610329366004611117565b610812565b60006001600160e01b031982166380ac58cd60e01b148061035f57506001600160e01b03198216635b5e139f60e01b145b8061037a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461038f90611293565b80601f01602080910402602001604051908101604052809291908181526020018280546103bb90611293565b80156104085780601f106103dd57610100808354040283529160200191610408565b820191906000526020600020905b8154815290600101906020018083116103eb57829003601f168201915b5050505050905090565b600061041d82610850565b506000828152600460205260409020546001600160a01b031661037a565b610446828233610889565b5050565b600080610456836106d6565b6001600160a01b0316036104855760405162461bcd60e51b815260040161047c906112cd565b60405180910390fd5b5060009081526007602052604090206001015442101590565b60006104a8610896565b600880549060006104b8836112fb565b9091555060408051808201825285815260208082018681526000858152600790925292902090518155905160019091015590506104f584826108c3565b604080518481526020810184905282916001600160a01b038716917f833cc33f3742f30a4b77b979e34a34a35c01c28e3e146bb15a5799212e597ba0910160405180910390a39392505050565b6001600160a01b03821661056c57604051633250574960e11b81526000600482015260240161047c565b6000610579838333610928565b9050836001600160a01b0316816001600160a01b0316146105c7576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161047c565b50505050565b6105e883838360405180602001604052806000815250610757565b505050565b6105f5610896565b6000610600826106d6565b6001600160a01b0316036106265760405162461bcd60e51b815260040161047c906112cd565b60008181526007602052604081208181556001015561064481610a21565b60405181907f6ce5b8b269980bc0dce72c0cd3cd829d07d53e3649ea065f2b5ef971fdb17a3190600090a250565b6000808061067f846106d6565b6001600160a01b0316036106a55760405162461bcd60e51b815260040161047c906112cd565b5050600090815260076020908152604091829020825180840190935280548084526001909101549290910182905291565b600061037a82610850565b60006001600160a01b03821661070d576040516322718ad960e21b81526000600482015260240161047c565b506001600160a01b031660009081526003602052604090205490565b610731610896565b61073b6000610a5c565b565b60606001805461038f90611293565b610446338383610aae565b610762848484610542565b6105c73385858585610b4d565b606061077a82610850565b50600061079260408051602081019091526000815290565b905060008151116107b257604051806020016040528060008152506107dd565b806107bc84610c78565b6040516020016107cd929190611322565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61081a610896565b6001600160a01b03811661084457604051631e4fbdf760e01b81526000600482015260240161047c565b61084d81610a5c565b50565b6000818152600260205260408120546001600160a01b03168061037a57604051637e27328960e01b81526004810184905260240161047c565b6105e88383836001610d0b565b6006546001600160a01b0316331461073b5760405163118cdaa760e01b815233600482015260240161047c565b6001600160a01b0382166108ed57604051633250574960e11b81526000600482015260240161047c565b60006108fb83836000610928565b90506001600160a01b038116156105e8576040516339e3563760e11b81526000600482015260240161047c565b6000828152600260205260408120546001600160a01b039081169083161561095557610955818486610e11565b6001600160a01b0381161561099357610972600085600080610d0b565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156109c2576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6000610a306000836000610928565b90506001600160a01b03811661044657604051637e27328960e01b81526004810183905260240161047c565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610ae057604051630b61174360e31b81526001600160a01b038316600482015260240161047c565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610c7157604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610b8f908890889087908790600401611351565b6020604051808303816000875af1925050508015610bca575060408051601f3d908101601f19168201909252610bc79181019061138e565b60015b610c33573d808015610bf8576040519150601f19603f3d011682016040523d82523d6000602084013e610bfd565b606091505b508051600003610c2b57604051633250574960e11b81526001600160a01b038516600482015260240161047c565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b14610c6f57604051633250574960e11b81526001600160a01b038516600482015260240161047c565b505b5050505050565b60606000610c8583610e75565b600101905060008167ffffffffffffffff811115610ca557610ca561116e565b6040519080825280601f01601f191660200182016040528015610ccf576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610cd957509392505050565b8080610d1f57506001600160a01b03821615155b15610de1576000610d2f84610850565b90506001600160a01b03831615801590610d5b5750826001600160a01b0316816001600160a01b031614155b8015610d6e5750610d6c81846107e4565b155b15610d975760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161047c565b8115610ddf5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610e1c838383610f4d565b6105e8576001600160a01b038316610e4a57604051637e27328960e01b81526004810182905260240161047c565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161047c565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610eb45772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610ee0576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610efe57662386f26fc10000830492506010015b6305f5e1008310610f16576305f5e100830492506008015b6127108310610f2a57612710830492506004015b60648310610f3c576064830492506002015b600a831061037a5760010192915050565b60006001600160a01b03831615801590610fab5750826001600160a01b0316846001600160a01b03161480610f875750610f8784846107e4565b80610fab57506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160e01b03198116811461084d57600080fd5b600060208284031215610fdb57600080fd5b81356107dd81610fb3565b60005b83811015611001578181015183820152602001610fe9565b50506000910152565b60008151808452611022816020860160208601610fe6565b601f01601f19169290920160200192915050565b6020815260006107dd602083018461100a565b60006020828403121561105b57600080fd5b5035919050565b80356001600160a01b038116811461107957600080fd5b919050565b6000806040838503121561109157600080fd5b61109a83611062565b946020939093013593505050565b6000806000606084860312156110bd57600080fd5b6110c684611062565b95602085013595506040909401359392505050565b6000806000606084860312156110f057600080fd5b6110f984611062565b925061110760208501611062565b9150604084013590509250925092565b60006020828403121561112957600080fd5b6107dd82611062565b6000806040838503121561114557600080fd5b61114e83611062565b91506020830135801515811461116357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561119a57600080fd5b6111a385611062565b93506111b160208601611062565b925060408501359150606085013567ffffffffffffffff808211156111d557600080fd5b818701915087601f8301126111e957600080fd5b8135818111156111fb576111fb61116e565b604051601f8201601f19908116603f011681019083821181831017156112235761122361116e565b816040528281528a602084870101111561123c57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561127357600080fd5b61127c83611062565b915061128a60208401611062565b90509250929050565b600181811c908216806112a757607f821691505b6020821081036112c757634e487b7160e01b600052602260045260246000fd5b50919050565b602080825260149082015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b604082015260600190565b60006001820161131b57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008351611334818460208801610fe6565b835190830190611348818360208801610fe6565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906113849083018461100a565b9695505050505050565b6000602082840312156113a057600080fd5b81516107dd81610fb356fea26469706673582212203327abff292a316cda6866fe27c6527381f239eb946760594cbe2442ea19fdb264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x15DA5D1A191C985DD85B08139195 PUSH1 0x92 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x15D2551211149055D053 PUSH1 0xB2 SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x73 SWAP2 SWAP1 PUSH3 0x1BD JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x82 DUP3 DUP3 PUSH3 0x1BD JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xB4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBF DUP2 PUSH3 0xC6 JUMP JUMPDEST POP PUSH3 0x289 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x143 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x164 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1B8 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x193 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1B4 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x19F JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1D9 JUMPI PUSH3 0x1D9 PUSH3 0x118 JUMP JUMPDEST PUSH3 0x1F1 DUP2 PUSH3 0x1EA DUP5 SLOAD PUSH3 0x12E JUMP JUMPDEST DUP5 PUSH3 0x16A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x229 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x210 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1B4 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x25A JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x239 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x279 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x13E1 DUP1 PUSH3 0x299 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x75794A3C EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x156E29F6 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x5CC07076 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x5DDE8895 EQ PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x1394F102 EQ PUSH2 0x1C4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC9 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x380 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x1049 JUMP JUMPDEST PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0x107E JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15A PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1049 JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A8 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x542 JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x1049 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x258 PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0x1049 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x1049 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x1049 JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x729 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x197 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x73D JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1132 JUMP JUMPDEST PUSH2 0x74C JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x2F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1184 JUMP JUMPDEST PUSH2 0x757 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x1049 JUMP JUMPDEST PUSH2 0x76F JUMP JUMPDEST PUSH2 0x15A PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x1260 JUMP JUMPDEST PUSH2 0x7E4 JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x35F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x37A JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x38F SWAP1 PUSH2 0x1293 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3BB SWAP1 PUSH2 0x1293 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x408 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3DD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x408 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41D DUP3 PUSH2 0x850 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x37A JUMP JUMPDEST PUSH2 0x446 DUP3 DUP3 CALLER PUSH2 0x889 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x456 DUP4 PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x485 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47C SWAP1 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A8 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x4B8 DUP4 PUSH2 0x12FB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP7 DUP2 MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP3 SWAP1 KECCAK256 SWAP1 MLOAD DUP2 SSTORE SWAP1 MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE SWAP1 POP PUSH2 0x4F5 DUP5 DUP3 PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH32 0x833CC33F3742F30A4B77B979E34A34A35C01C28E3E146BB15A5799212E597BA0 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x56C JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x579 DUP4 DUP4 CALLER PUSH2 0x928 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5E8 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x757 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5F5 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x600 DUP3 PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x626 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47C SWAP1 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 ADD SSTORE PUSH2 0x644 DUP2 PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x6CE5B8B269980BC0DCE72C0CD3CD829D07D53E3649EA065F2B5EF971FDB17A31 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x67F DUP5 PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47C SWAP1 PUSH2 0x12CD JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP3 SWAP1 SWAP2 ADD DUP3 SWAP1 MSTORE SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A DUP3 PUSH2 0x850 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x731 PUSH2 0x896 JUMP JUMPDEST PUSH2 0x73B PUSH1 0x0 PUSH2 0xA5C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x38F SWAP1 PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x446 CALLER DUP4 DUP4 PUSH2 0xAAE JUMP JUMPDEST PUSH2 0x762 DUP5 DUP5 DUP5 PUSH2 0x542 JUMP JUMPDEST PUSH2 0x5C7 CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0xB4D JUMP JUMPDEST PUSH1 0x60 PUSH2 0x77A DUP3 PUSH2 0x850 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x792 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x7B2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7DD JUMP JUMPDEST DUP1 PUSH2 0x7BC DUP5 PUSH2 0xC78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7CD SWAP3 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x81A PUSH2 0x896 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST PUSH2 0x84D DUP2 PUSH2 0xA5C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x37A JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST PUSH2 0x5E8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x73B JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8ED JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FB DUP4 DUP4 PUSH1 0x0 PUSH2 0x928 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x955 JUMPI PUSH2 0x955 DUP2 DUP5 DUP7 PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x993 JUMPI PUSH2 0x972 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x9C2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA30 PUSH1 0x0 DUP4 PUSH1 0x0 PUSH2 0x928 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x446 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAE0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xC71 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xB8F SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1351 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBCA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBC7 SWAP2 DUP2 ADD SWAP1 PUSH2 0x138E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC33 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xC2B JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xC85 DUP4 PUSH2 0xE75 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCA5 JUMPI PUSH2 0xCA5 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCCF JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xCD9 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0xD1F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xDE1 JUMPI PUSH1 0x0 PUSH2 0xD2F DUP5 PUSH2 0x850 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD5B JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xD6E JUMPI POP PUSH2 0xD6C DUP2 DUP5 PUSH2 0x7E4 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xD97 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST DUP2 ISZERO PUSH2 0xDDF JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE1C DUP4 DUP4 DUP4 PUSH2 0xF4D JUMP JUMPDEST PUSH2 0x5E8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE4A JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x47C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xEB4 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xEE0 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xEFE JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xF16 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xF2A JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xF3C JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x37A JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xFAB JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xF87 JUMPI POP PUSH2 0xF87 DUP5 DUP5 PUSH2 0x7E4 JUMP JUMPDEST DUP1 PUSH2 0xFAB JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7DD DUP2 PUSH2 0xFB3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1001 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFE9 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1022 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7DD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x105B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1079 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1091 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109A DUP4 PUSH2 0x1062 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10C6 DUP5 PUSH2 0x1062 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F9 DUP5 PUSH2 0x1062 JUMP JUMPDEST SWAP3 POP PUSH2 0x1107 PUSH1 0x20 DUP6 ADD PUSH2 0x1062 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7DD DUP3 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114E DUP4 PUSH2 0x1062 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x119A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11A3 DUP6 PUSH2 0x1062 JUMP JUMPDEST SWAP4 POP PUSH2 0x11B1 PUSH1 0x20 DUP7 ADD PUSH2 0x1062 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x11FB JUMPI PUSH2 0x11FB PUSH2 0x116E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1223 JUMPI PUSH2 0x1223 PUSH2 0x116E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x123C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x127C DUP4 PUSH2 0x1062 JUMP JUMPDEST SWAP2 POP PUSH2 0x128A PUSH1 0x20 DUP5 ADD PUSH2 0x1062 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x12A7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12C7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x131B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1334 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xFE6 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1348 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xFE6 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1384 SWAP1 DUP4 ADD DUP5 PUSH2 0x100A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7DD DUP2 PUSH2 0xFB3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER 0x27 0xAB SELFDESTRUCT 0x29 0x2A BALANCE PUSH13 0xDA6866FE27C6527381F239EB94 PUSH8 0x60594CBE2442EA19 REVERT 0xB2 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"340:2739:26:-:0;;;661:1;630:32;;859:75;;;;;;;;;;920:10;1380:113:9;;;;;;;;;;;;;-1:-1:-1;;;1380:113:9;;;;;;;;;;;;;;;;-1:-1:-1;;;1380:113:9;;;1454:5;1446;:13;;;;;;:::i;:::-;-1:-1:-1;1469:7:9;:17;1479:7;1469;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;2881:51:27;2854:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;340:2739:26;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:27:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:27;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:27;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:27;;;2580:26;2531:89;-1:-1:-1;;1335:1:27;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:27;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:27;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:27;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:27:o;2735:203::-;340:2739:26;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_2281":{"entryPoint":2185,"id":2281,"parameterSlots":3,"returnSlots":0},"@_approve_2347":{"entryPoint":3339,"id":2347,"parameterSlots":4,"returnSlots":0},"@_baseURI_1662":{"entryPoint":null,"id":1662,"parameterSlots":0,"returnSlots":1},"@_burn_2155":{"entryPoint":2593,"id":2155,"parameterSlots":1,"returnSlots":0},"@_checkAuthorized_1921":{"entryPoint":3601,"id":1921,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":2198,"id":84,"parameterSlots":0,"returnSlots":0},"@_getApproved_1848":{"entryPoint":null,"id":1848,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_1884":{"entryPoint":3917,"id":1884,"parameterSlots":3,"returnSlots":1},"@_mint_2077":{"entryPoint":2243,"id":2077,"parameterSlots":2,"returnSlots":0},"@_msgSender_2666":{"entryPoint":null,"id":2666,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1835":{"entryPoint":null,"id":1835,"parameterSlots":1,"returnSlots":1},"@_requireOwned_2413":{"entryPoint":2128,"id":2413,"parameterSlots":1,"returnSlots":1},"@_setApprovalForAll_2384":{"entryPoint":2734,"id":2384,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2652,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_2027":{"entryPoint":2344,"id":2027,"parameterSlots":3,"returnSlots":1},"@approve_1678":{"entryPoint":1083,"id":1678,"parameterSlots":2,"returnSlots":0},"@balanceOf_1586":{"entryPoint":1761,"id":1586,"parameterSlots":1,"returnSlots":1},"@burn_9029":{"entryPoint":1517,"id":9029,"parameterSlots":1,"returnSlots":0},"@checkOnERC721Received_2653":{"entryPoint":2893,"id":2653,"parameterSlots":5,"returnSlots":0},"@getApproved_1695":{"entryPoint":1042,"id":1695,"parameterSlots":1,"returnSlots":1},"@getWithdrawalInfo_9065":{"entryPoint":1650,"id":9065,"parameterSlots":1,"returnSlots":2},"@isApprovedForAll_1728":{"entryPoint":2020,"id":1728,"parameterSlots":2,"returnSlots":1},"@isWithdrawalAvailable_9094":{"entryPoint":1098,"id":9094,"parameterSlots":1,"returnSlots":1},"@log10_5696":{"entryPoint":3701,"id":5696,"parameterSlots":1,"returnSlots":1},"@mint_8995":{"entryPoint":1182,"id":8995,"parameterSlots":3,"returnSlots":1},"@name_1608":{"entryPoint":896,"id":1608,"parameterSlots":0,"returnSlots":1},"@nextTokenId_9103":{"entryPoint":null,"id":9103,"parameterSlots":0,"returnSlots":1},"@ownerOf_1599":{"entryPoint":1750,"id":1599,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1833,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1792":{"entryPoint":1485,"id":1792,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1822":{"entryPoint":1879,"id":1822,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1711":{"entryPoint":1868,"id":1711,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1558":{"entryPoint":814,"id":1558,"parameterSlots":1,"returnSlots":1},"@supportsInterface_4230":{"entryPoint":null,"id":4230,"parameterSlots":1,"returnSlots":1},"@symbol_1617":{"entryPoint":1853,"id":1617,"parameterSlots":0,"returnSlots":1},"@toString_2919":{"entryPoint":3192,"id":2919,"parameterSlots":1,"returnSlots":1},"@tokenURI_1653":{"entryPoint":1903,"id":1653,"parameterSlots":1,"returnSlots":1},"@transferFrom_1774":{"entryPoint":1346,"id":1774,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":2066,"id":126,"parameterSlots":1,"returnSlots":0},"@withdrawals_8925":{"entryPoint":null,"id":8925,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":4194,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4375,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4704,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4315,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":4484,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":4402,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4222,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":4264,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes4":{"entryPoint":4041,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":5006,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":4169,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":4106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4898,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4945,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4150,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4813,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4070,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4755,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":4859,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4462,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":4019,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8364:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:87:27","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:27"},"nodeType":"YulFunctionCall","src":"125:12:27"},"nodeType":"YulExpressionStatement","src":"125:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"108:10:27","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"99:3:27"},"nodeType":"YulFunctionCall","src":"99:20:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:27"},"nodeType":"YulFunctionCall","src":"88:32:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:27"},"nodeType":"YulFunctionCall","src":"78:43:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:27"},"nodeType":"YulFunctionCall","src":"71:51:27"},"nodeType":"YulIf","src":"68:71:27"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:27","type":""}],"src":"14:131:27"},{"body":{"nodeType":"YulBlock","src":"219:176:27","statements":[{"body":{"nodeType":"YulBlock","src":"265:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"274:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"277:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"267:6:27"},"nodeType":"YulFunctionCall","src":"267:12:27"},"nodeType":"YulExpressionStatement","src":"267:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"240:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"249:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"236:3:27"},"nodeType":"YulFunctionCall","src":"236:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"261:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"232:3:27"},"nodeType":"YulFunctionCall","src":"232:32:27"},"nodeType":"YulIf","src":"229:52:27"},{"nodeType":"YulVariableDeclaration","src":"290:36:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"316:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"303:12:27"},"nodeType":"YulFunctionCall","src":"303:23:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"294:5:27","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"359:5:27"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"335:23:27"},"nodeType":"YulFunctionCall","src":"335:30:27"},"nodeType":"YulExpressionStatement","src":"335:30:27"},{"nodeType":"YulAssignment","src":"374:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"384:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"374:6:27"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"185:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"196:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"208:6:27","type":""}],"src":"150:245:27"},{"body":{"nodeType":"YulBlock","src":"495:92:27","statements":[{"nodeType":"YulAssignment","src":"505:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"517:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"528:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"513:3:27"},"nodeType":"YulFunctionCall","src":"513:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"505:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"547:9:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"572:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"565:6:27"},"nodeType":"YulFunctionCall","src":"565:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"558:6:27"},"nodeType":"YulFunctionCall","src":"558:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"540:6:27"},"nodeType":"YulFunctionCall","src":"540:41:27"},"nodeType":"YulExpressionStatement","src":"540:41:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"464:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"475:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"486:4:27","type":""}],"src":"400:187:27"},{"body":{"nodeType":"YulBlock","src":"658:184:27","statements":[{"nodeType":"YulVariableDeclaration","src":"668:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"677:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"672:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"737:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"762:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"767:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"758:3:27"},"nodeType":"YulFunctionCall","src":"758:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"781:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"786:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:27"},"nodeType":"YulFunctionCall","src":"777:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"771:5:27"},"nodeType":"YulFunctionCall","src":"771:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"751:6:27"},"nodeType":"YulFunctionCall","src":"751:39:27"},"nodeType":"YulExpressionStatement","src":"751:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"698:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"701:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"695:2:27"},"nodeType":"YulFunctionCall","src":"695:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"709:19:27","statements":[{"nodeType":"YulAssignment","src":"711:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"720:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"723:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:27"},"nodeType":"YulFunctionCall","src":"716:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"711:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"691:3:27","statements":[]},"src":"687:113:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"820:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"825:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"816:3:27"},"nodeType":"YulFunctionCall","src":"816:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"834:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:27"},"nodeType":"YulFunctionCall","src":"809:27:27"},"nodeType":"YulExpressionStatement","src":"809:27:27"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"636:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"641:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"646:6:27","type":""}],"src":"592:250:27"},{"body":{"nodeType":"YulBlock","src":"897:221:27","statements":[{"nodeType":"YulVariableDeclaration","src":"907:26:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"927:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"921:5:27"},"nodeType":"YulFunctionCall","src":"921:12:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"911:6:27","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"949:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"954:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"942:6:27"},"nodeType":"YulFunctionCall","src":"942:19:27"},"nodeType":"YulExpressionStatement","src":"942:19:27"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1009:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"1016:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1005:3:27"},"nodeType":"YulFunctionCall","src":"1005:16:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1027:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"1032:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:27"},"nodeType":"YulFunctionCall","src":"1023:14:27"},{"name":"length","nodeType":"YulIdentifier","src":"1039:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"970:34:27"},"nodeType":"YulFunctionCall","src":"970:76:27"},"nodeType":"YulExpressionStatement","src":"970:76:27"},{"nodeType":"YulAssignment","src":"1055:57:27","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1070:3:27"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1083:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1091:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1079:3:27"},"nodeType":"YulFunctionCall","src":"1079:15:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1100:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1096:3:27"},"nodeType":"YulFunctionCall","src":"1096:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1075:3:27"},"nodeType":"YulFunctionCall","src":"1075:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1066:3:27"},"nodeType":"YulFunctionCall","src":"1066:39:27"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1062:3:27"},"nodeType":"YulFunctionCall","src":"1062:50:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1055:3:27"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"874:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"881:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"889:3:27","type":""}],"src":"847:271:27"},{"body":{"nodeType":"YulBlock","src":"1244:99:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1261:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1272:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1254:6:27"},"nodeType":"YulFunctionCall","src":"1254:21:27"},"nodeType":"YulExpressionStatement","src":"1254:21:27"},{"nodeType":"YulAssignment","src":"1284:53:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1310:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1322:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1333:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1318:3:27"},"nodeType":"YulFunctionCall","src":"1318:18:27"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1292:17:27"},"nodeType":"YulFunctionCall","src":"1292:45:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1284:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1213:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1224:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1235:4:27","type":""}],"src":"1123:220:27"},{"body":{"nodeType":"YulBlock","src":"1418:110:27","statements":[{"body":{"nodeType":"YulBlock","src":"1464:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1476:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1466:6:27"},"nodeType":"YulFunctionCall","src":"1466:12:27"},"nodeType":"YulExpressionStatement","src":"1466:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1439:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1448:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1435:3:27"},"nodeType":"YulFunctionCall","src":"1435:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1460:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1431:3:27"},"nodeType":"YulFunctionCall","src":"1431:32:27"},"nodeType":"YulIf","src":"1428:52:27"},{"nodeType":"YulAssignment","src":"1489:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1499:12:27"},"nodeType":"YulFunctionCall","src":"1499:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1489:6:27"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1384:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1395:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1407:6:27","type":""}],"src":"1348:180:27"},{"body":{"nodeType":"YulBlock","src":"1634:102:27","statements":[{"nodeType":"YulAssignment","src":"1644:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1656:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1667:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1652:3:27"},"nodeType":"YulFunctionCall","src":"1652:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1644:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1686:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1701:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1717:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1722:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1713:3:27"},"nodeType":"YulFunctionCall","src":"1713:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"1726:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1709:3:27"},"nodeType":"YulFunctionCall","src":"1709:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1697:3:27"},"nodeType":"YulFunctionCall","src":"1697:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1679:6:27"},"nodeType":"YulFunctionCall","src":"1679:51:27"},"nodeType":"YulExpressionStatement","src":"1679:51:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1603:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1614:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1625:4:27","type":""}],"src":"1533:203:27"},{"body":{"nodeType":"YulBlock","src":"1790:124:27","statements":[{"nodeType":"YulAssignment","src":"1800:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1822:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1809:12:27"},"nodeType":"YulFunctionCall","src":"1809:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1800:5:27"}]},{"body":{"nodeType":"YulBlock","src":"1892:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1901:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1904:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1894:6:27"},"nodeType":"YulFunctionCall","src":"1894:12:27"},"nodeType":"YulExpressionStatement","src":"1894:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1851:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1862:5:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1877:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1882:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1873:3:27"},"nodeType":"YulFunctionCall","src":"1873:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"1886:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1869:3:27"},"nodeType":"YulFunctionCall","src":"1869:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1858:3:27"},"nodeType":"YulFunctionCall","src":"1858:31:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1848:2:27"},"nodeType":"YulFunctionCall","src":"1848:42:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1841:6:27"},"nodeType":"YulFunctionCall","src":"1841:50:27"},"nodeType":"YulIf","src":"1838:70:27"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1769:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1780:5:27","type":""}],"src":"1741:173:27"},{"body":{"nodeType":"YulBlock","src":"2006:167:27","statements":[{"body":{"nodeType":"YulBlock","src":"2052:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2061:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2064:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2054:6:27"},"nodeType":"YulFunctionCall","src":"2054:12:27"},"nodeType":"YulExpressionStatement","src":"2054:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2027:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2036:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2023:3:27"},"nodeType":"YulFunctionCall","src":"2023:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2048:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2019:3:27"},"nodeType":"YulFunctionCall","src":"2019:32:27"},"nodeType":"YulIf","src":"2016:52:27"},{"nodeType":"YulAssignment","src":"2077:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2106:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2087:18:27"},"nodeType":"YulFunctionCall","src":"2087:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2077:6:27"}]},{"nodeType":"YulAssignment","src":"2125:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2152:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2163:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2148:3:27"},"nodeType":"YulFunctionCall","src":"2148:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2135:12:27"},"nodeType":"YulFunctionCall","src":"2135:32:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2125:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1964:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1975:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1987:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1995:6:27","type":""}],"src":"1919:254:27"},{"body":{"nodeType":"YulBlock","src":"2282:218:27","statements":[{"body":{"nodeType":"YulBlock","src":"2328:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2337:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2340:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2330:6:27"},"nodeType":"YulFunctionCall","src":"2330:12:27"},"nodeType":"YulExpressionStatement","src":"2330:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2303:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2312:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2299:3:27"},"nodeType":"YulFunctionCall","src":"2299:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2324:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2295:3:27"},"nodeType":"YulFunctionCall","src":"2295:32:27"},"nodeType":"YulIf","src":"2292:52:27"},{"nodeType":"YulAssignment","src":"2353:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2382:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2363:18:27"},"nodeType":"YulFunctionCall","src":"2363:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2353:6:27"}]},{"nodeType":"YulAssignment","src":"2401:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2428:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2439:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2424:3:27"},"nodeType":"YulFunctionCall","src":"2424:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2411:12:27"},"nodeType":"YulFunctionCall","src":"2411:32:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2401:6:27"}]},{"nodeType":"YulAssignment","src":"2452:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2479:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2490:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2475:3:27"},"nodeType":"YulFunctionCall","src":"2475:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2462:12:27"},"nodeType":"YulFunctionCall","src":"2462:32:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2452:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2232:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2243:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2255:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2263:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2271:6:27","type":""}],"src":"2178:322:27"},{"body":{"nodeType":"YulBlock","src":"2606:76:27","statements":[{"nodeType":"YulAssignment","src":"2616:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2628:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2639:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2624:3:27"},"nodeType":"YulFunctionCall","src":"2624:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2616:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2658:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"2669:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2651:6:27"},"nodeType":"YulFunctionCall","src":"2651:25:27"},"nodeType":"YulExpressionStatement","src":"2651:25:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2575:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2586:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2597:4:27","type":""}],"src":"2505:177:27"},{"body":{"nodeType":"YulBlock","src":"2791:224:27","statements":[{"body":{"nodeType":"YulBlock","src":"2837:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2846:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2849:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2839:6:27"},"nodeType":"YulFunctionCall","src":"2839:12:27"},"nodeType":"YulExpressionStatement","src":"2839:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:27"},"nodeType":"YulFunctionCall","src":"2808:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:27"},"nodeType":"YulFunctionCall","src":"2804:32:27"},"nodeType":"YulIf","src":"2801:52:27"},{"nodeType":"YulAssignment","src":"2862:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2891:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2872:18:27"},"nodeType":"YulFunctionCall","src":"2872:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2862:6:27"}]},{"nodeType":"YulAssignment","src":"2910:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2943:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2954:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2939:3:27"},"nodeType":"YulFunctionCall","src":"2939:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2920:18:27"},"nodeType":"YulFunctionCall","src":"2920:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2910:6:27"}]},{"nodeType":"YulAssignment","src":"2967:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2994:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3005:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2990:3:27"},"nodeType":"YulFunctionCall","src":"2990:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2977:12:27"},"nodeType":"YulFunctionCall","src":"2977:32:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2967:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2741:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2752:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2764:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2772:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2780:6:27","type":""}],"src":"2687:328:27"},{"body":{"nodeType":"YulBlock","src":"3149:119:27","statements":[{"nodeType":"YulAssignment","src":"3159:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3171:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3182:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3167:3:27"},"nodeType":"YulFunctionCall","src":"3167:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3159:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3201:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"3212:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3194:6:27"},"nodeType":"YulFunctionCall","src":"3194:25:27"},"nodeType":"YulExpressionStatement","src":"3194:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3239:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3250:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3235:3:27"},"nodeType":"YulFunctionCall","src":"3235:18:27"},{"name":"value1","nodeType":"YulIdentifier","src":"3255:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3228:6:27"},"nodeType":"YulFunctionCall","src":"3228:34:27"},"nodeType":"YulExpressionStatement","src":"3228:34:27"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3110:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3121:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3129:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3140:4:27","type":""}],"src":"3020:248:27"},{"body":{"nodeType":"YulBlock","src":"3343:116:27","statements":[{"body":{"nodeType":"YulBlock","src":"3389:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3398:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3401:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3391:6:27"},"nodeType":"YulFunctionCall","src":"3391:12:27"},"nodeType":"YulExpressionStatement","src":"3391:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3364:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3373:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3360:3:27"},"nodeType":"YulFunctionCall","src":"3360:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3385:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3356:3:27"},"nodeType":"YulFunctionCall","src":"3356:32:27"},"nodeType":"YulIf","src":"3353:52:27"},{"nodeType":"YulAssignment","src":"3414:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3443:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3424:18:27"},"nodeType":"YulFunctionCall","src":"3424:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3414:6:27"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3309:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3320:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3332:6:27","type":""}],"src":"3273:186:27"},{"body":{"nodeType":"YulBlock","src":"3548:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"3594:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3603:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3606:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3596:6:27"},"nodeType":"YulFunctionCall","src":"3596:12:27"},"nodeType":"YulExpressionStatement","src":"3596:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3569:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3578:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3565:3:27"},"nodeType":"YulFunctionCall","src":"3565:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3590:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3561:3:27"},"nodeType":"YulFunctionCall","src":"3561:32:27"},"nodeType":"YulIf","src":"3558:52:27"},{"nodeType":"YulAssignment","src":"3619:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3648:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3629:18:27"},"nodeType":"YulFunctionCall","src":"3629:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3619:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"3667:45:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3697:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3708:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3693:3:27"},"nodeType":"YulFunctionCall","src":"3693:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3680:12:27"},"nodeType":"YulFunctionCall","src":"3680:32:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3671:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3765:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3774:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3777:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3767:6:27"},"nodeType":"YulFunctionCall","src":"3767:12:27"},"nodeType":"YulExpressionStatement","src":"3767:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3734:5:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3755:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3748:6:27"},"nodeType":"YulFunctionCall","src":"3748:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3741:6:27"},"nodeType":"YulFunctionCall","src":"3741:21:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3731:2:27"},"nodeType":"YulFunctionCall","src":"3731:32:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3724:6:27"},"nodeType":"YulFunctionCall","src":"3724:40:27"},"nodeType":"YulIf","src":"3721:60:27"},{"nodeType":"YulAssignment","src":"3790:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"3800:5:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3790:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3506:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3517:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3529:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3537:6:27","type":""}],"src":"3464:347:27"},{"body":{"nodeType":"YulBlock","src":"3848:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3865:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3872:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3877:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3868:3:27"},"nodeType":"YulFunctionCall","src":"3868:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3858:6:27"},"nodeType":"YulFunctionCall","src":"3858:31:27"},"nodeType":"YulExpressionStatement","src":"3858:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3905:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3908:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3898:6:27"},"nodeType":"YulFunctionCall","src":"3898:15:27"},"nodeType":"YulExpressionStatement","src":"3898:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3929:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3932:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3922:6:27"},"nodeType":"YulFunctionCall","src":"3922:15:27"},"nodeType":"YulExpressionStatement","src":"3922:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3816:127:27"},{"body":{"nodeType":"YulBlock","src":"4078:1008:27","statements":[{"body":{"nodeType":"YulBlock","src":"4125:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4134:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4137:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4127:6:27"},"nodeType":"YulFunctionCall","src":"4127:12:27"},"nodeType":"YulExpressionStatement","src":"4127:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4099:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"4108:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4095:3:27"},"nodeType":"YulFunctionCall","src":"4095:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4120:3:27","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4091:3:27"},"nodeType":"YulFunctionCall","src":"4091:33:27"},"nodeType":"YulIf","src":"4088:53:27"},{"nodeType":"YulAssignment","src":"4150:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4179:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4160:18:27"},"nodeType":"YulFunctionCall","src":"4160:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4150:6:27"}]},{"nodeType":"YulAssignment","src":"4198:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4231:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4242:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4227:3:27"},"nodeType":"YulFunctionCall","src":"4227:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4208:18:27"},"nodeType":"YulFunctionCall","src":"4208:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4198:6:27"}]},{"nodeType":"YulAssignment","src":"4255:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4282:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4293:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4278:3:27"},"nodeType":"YulFunctionCall","src":"4278:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4265:12:27"},"nodeType":"YulFunctionCall","src":"4265:32:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4255:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"4306:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4337:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4348:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4333:3:27"},"nodeType":"YulFunctionCall","src":"4333:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4320:12:27"},"nodeType":"YulFunctionCall","src":"4320:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4310:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4361:28:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4371:18:27","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4365:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4416:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4425:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4428:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4418:6:27"},"nodeType":"YulFunctionCall","src":"4418:12:27"},"nodeType":"YulExpressionStatement","src":"4418:12:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4404:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"4412:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4401:2:27"},"nodeType":"YulFunctionCall","src":"4401:14:27"},"nodeType":"YulIf","src":"4398:34:27"},{"nodeType":"YulVariableDeclaration","src":"4441:32:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4455:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4466:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4451:3:27"},"nodeType":"YulFunctionCall","src":"4451:22:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4445:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4521:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4530:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4533:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4523:6:27"},"nodeType":"YulFunctionCall","src":"4523:12:27"},"nodeType":"YulExpressionStatement","src":"4523:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4500:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"4504:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4496:3:27"},"nodeType":"YulFunctionCall","src":"4496:13:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4511:7:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4492:3:27"},"nodeType":"YulFunctionCall","src":"4492:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4485:6:27"},"nodeType":"YulFunctionCall","src":"4485:35:27"},"nodeType":"YulIf","src":"4482:55:27"},{"nodeType":"YulVariableDeclaration","src":"4546:26:27","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4569:2:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4556:12:27"},"nodeType":"YulFunctionCall","src":"4556:16:27"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"4550:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4595:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4597:16:27"},"nodeType":"YulFunctionCall","src":"4597:18:27"},"nodeType":"YulExpressionStatement","src":"4597:18:27"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4587:2:27"},{"name":"_1","nodeType":"YulIdentifier","src":"4591:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4584:2:27"},"nodeType":"YulFunctionCall","src":"4584:10:27"},"nodeType":"YulIf","src":"4581:36:27"},{"nodeType":"YulVariableDeclaration","src":"4626:17:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4640:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4636:3:27"},"nodeType":"YulFunctionCall","src":"4636:7:27"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"4630:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4652:23:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4672:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4666:5:27"},"nodeType":"YulFunctionCall","src":"4666:9:27"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4656:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4684:71:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4706:6:27"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4730:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"4734:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4726:3:27"},"nodeType":"YulFunctionCall","src":"4726:13:27"},{"name":"_4","nodeType":"YulIdentifier","src":"4741:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4722:3:27"},"nodeType":"YulFunctionCall","src":"4722:22:27"},{"kind":"number","nodeType":"YulLiteral","src":"4746:2:27","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4718:3:27"},"nodeType":"YulFunctionCall","src":"4718:31:27"},{"name":"_4","nodeType":"YulIdentifier","src":"4751:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4714:3:27"},"nodeType":"YulFunctionCall","src":"4714:40:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4702:3:27"},"nodeType":"YulFunctionCall","src":"4702:53:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4688:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4814:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4816:16:27"},"nodeType":"YulFunctionCall","src":"4816:18:27"},"nodeType":"YulExpressionStatement","src":"4816:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4773:10:27"},{"name":"_1","nodeType":"YulIdentifier","src":"4785:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4770:2:27"},"nodeType":"YulFunctionCall","src":"4770:18:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4793:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4805:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4790:2:27"},"nodeType":"YulFunctionCall","src":"4790:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4767:2:27"},"nodeType":"YulFunctionCall","src":"4767:46:27"},"nodeType":"YulIf","src":"4764:72:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4852:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4856:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4845:6:27"},"nodeType":"YulFunctionCall","src":"4845:22:27"},"nodeType":"YulExpressionStatement","src":"4845:22:27"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4883:6:27"},{"name":"_3","nodeType":"YulIdentifier","src":"4891:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4876:6:27"},"nodeType":"YulFunctionCall","src":"4876:18:27"},"nodeType":"YulExpressionStatement","src":"4876:18:27"},{"body":{"nodeType":"YulBlock","src":"4940:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4949:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4952:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4942:6:27"},"nodeType":"YulFunctionCall","src":"4942:12:27"},"nodeType":"YulExpressionStatement","src":"4942:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4917:2:27"},{"name":"_3","nodeType":"YulIdentifier","src":"4921:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4913:3:27"},"nodeType":"YulFunctionCall","src":"4913:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"4926:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4909:3:27"},"nodeType":"YulFunctionCall","src":"4909:20:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4931:7:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4906:2:27"},"nodeType":"YulFunctionCall","src":"4906:33:27"},"nodeType":"YulIf","src":"4903:53:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4982:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4990:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4978:3:27"},"nodeType":"YulFunctionCall","src":"4978:15:27"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4999:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"5003:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4995:3:27"},"nodeType":"YulFunctionCall","src":"4995:11:27"},{"name":"_3","nodeType":"YulIdentifier","src":"5008:2:27"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4965:12:27"},"nodeType":"YulFunctionCall","src":"4965:46:27"},"nodeType":"YulExpressionStatement","src":"4965:46:27"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5035:6:27"},{"name":"_3","nodeType":"YulIdentifier","src":"5043:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5031:3:27"},"nodeType":"YulFunctionCall","src":"5031:15:27"},{"kind":"number","nodeType":"YulLiteral","src":"5048:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5027:3:27"},"nodeType":"YulFunctionCall","src":"5027:24:27"},{"kind":"number","nodeType":"YulLiteral","src":"5053:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5020:6:27"},"nodeType":"YulFunctionCall","src":"5020:35:27"},"nodeType":"YulExpressionStatement","src":"5020:35:27"},{"nodeType":"YulAssignment","src":"5064:16:27","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"5074:6:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5064:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4020:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4031:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4043:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4051:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4059:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4067:6:27","type":""}],"src":"3948:1138:27"},{"body":{"nodeType":"YulBlock","src":"5178:173:27","statements":[{"body":{"nodeType":"YulBlock","src":"5224:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5233:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5236:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5226:6:27"},"nodeType":"YulFunctionCall","src":"5226:12:27"},"nodeType":"YulExpressionStatement","src":"5226:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5199:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5208:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5195:3:27"},"nodeType":"YulFunctionCall","src":"5195:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5220:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5191:3:27"},"nodeType":"YulFunctionCall","src":"5191:32:27"},"nodeType":"YulIf","src":"5188:52:27"},{"nodeType":"YulAssignment","src":"5249:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5278:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5259:18:27"},"nodeType":"YulFunctionCall","src":"5259:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5249:6:27"}]},{"nodeType":"YulAssignment","src":"5297:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5330:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5341:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5326:3:27"},"nodeType":"YulFunctionCall","src":"5326:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5307:18:27"},"nodeType":"YulFunctionCall","src":"5307:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5297:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5136:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5147:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5159:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5167:6:27","type":""}],"src":"5091:260:27"},{"body":{"nodeType":"YulBlock","src":"5411:325:27","statements":[{"nodeType":"YulAssignment","src":"5421:22:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5435:1:27","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"5438:4:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5431:3:27"},"nodeType":"YulFunctionCall","src":"5431:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5421:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"5452:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5482:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"5488:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5478:3:27"},"nodeType":"YulFunctionCall","src":"5478:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5456:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"5529:31:27","statements":[{"nodeType":"YulAssignment","src":"5531:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5545:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"5553:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5541:3:27"},"nodeType":"YulFunctionCall","src":"5541:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5531:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5509:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5502:6:27"},"nodeType":"YulFunctionCall","src":"5502:26:27"},"nodeType":"YulIf","src":"5499:61:27"},{"body":{"nodeType":"YulBlock","src":"5619:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5640:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5647:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5652:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5643:3:27"},"nodeType":"YulFunctionCall","src":"5643:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5633:6:27"},"nodeType":"YulFunctionCall","src":"5633:31:27"},"nodeType":"YulExpressionStatement","src":"5633:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5684:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5687:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5677:6:27"},"nodeType":"YulFunctionCall","src":"5677:15:27"},"nodeType":"YulExpressionStatement","src":"5677:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5712:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5715:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5705:6:27"},"nodeType":"YulFunctionCall","src":"5705:15:27"},"nodeType":"YulExpressionStatement","src":"5705:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5575:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5598:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"5606:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5595:2:27"},"nodeType":"YulFunctionCall","src":"5595:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5572:2:27"},"nodeType":"YulFunctionCall","src":"5572:38:27"},"nodeType":"YulIf","src":"5569:161:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5391:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5400:6:27","type":""}],"src":"5356:380:27"},{"body":{"nodeType":"YulBlock","src":"5915:170:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5932:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5943:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5925:6:27"},"nodeType":"YulFunctionCall","src":"5925:21:27"},"nodeType":"YulExpressionStatement","src":"5925:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5966:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5977:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5962:3:27"},"nodeType":"YulFunctionCall","src":"5962:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"5982:2:27","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5955:6:27"},"nodeType":"YulFunctionCall","src":"5955:30:27"},"nodeType":"YulExpressionStatement","src":"5955:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6005:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6016:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6001:3:27"},"nodeType":"YulFunctionCall","src":"6001:18:27"},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"6021:22:27","type":"","value":"Token does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5994:6:27"},"nodeType":"YulFunctionCall","src":"5994:50:27"},"nodeType":"YulExpressionStatement","src":"5994:50:27"},{"nodeType":"YulAssignment","src":"6053:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6065:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6076:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6061:3:27"},"nodeType":"YulFunctionCall","src":"6061:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6053:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5892:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5906:4:27","type":""}],"src":"5741:344:27"},{"body":{"nodeType":"YulBlock","src":"6137:185:27","statements":[{"body":{"nodeType":"YulBlock","src":"6176:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6197:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6204:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6209:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6200:3:27"},"nodeType":"YulFunctionCall","src":"6200:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6190:6:27"},"nodeType":"YulFunctionCall","src":"6190:31:27"},"nodeType":"YulExpressionStatement","src":"6190:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6241:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6244:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6234:6:27"},"nodeType":"YulFunctionCall","src":"6234:15:27"},"nodeType":"YulExpressionStatement","src":"6234:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6269:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6272:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6262:6:27"},"nodeType":"YulFunctionCall","src":"6262:15:27"},"nodeType":"YulExpressionStatement","src":"6262:15:27"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6153:5:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6164:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6160:3:27"},"nodeType":"YulFunctionCall","src":"6160:6:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6150:2:27"},"nodeType":"YulFunctionCall","src":"6150:17:27"},"nodeType":"YulIf","src":"6147:140:27"},{"nodeType":"YulAssignment","src":"6296:20:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6307:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"6314:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6303:3:27"},"nodeType":"YulFunctionCall","src":"6303:13:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6296:3:27"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6119:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6129:3:27","type":""}],"src":"6090:232:27"},{"body":{"nodeType":"YulBlock","src":"6484:218:27","statements":[{"nodeType":"YulAssignment","src":"6494:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6506:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6517:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6502:3:27"},"nodeType":"YulFunctionCall","src":"6502:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6494:4:27"}]},{"nodeType":"YulVariableDeclaration","src":"6529:29:27","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6547:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6552:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6543:3:27"},"nodeType":"YulFunctionCall","src":"6543:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"6556:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6539:3:27"},"nodeType":"YulFunctionCall","src":"6539:19:27"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6533:2:27","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6574:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6589:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"6597:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6585:3:27"},"nodeType":"YulFunctionCall","src":"6585:15:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6567:6:27"},"nodeType":"YulFunctionCall","src":"6567:34:27"},"nodeType":"YulExpressionStatement","src":"6567:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6621:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6632:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6617:3:27"},"nodeType":"YulFunctionCall","src":"6617:18:27"},{"name":"value1","nodeType":"YulIdentifier","src":"6637:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6610:6:27"},"nodeType":"YulFunctionCall","src":"6610:34:27"},"nodeType":"YulExpressionStatement","src":"6610:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6664:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6675:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6660:3:27"},"nodeType":"YulFunctionCall","src":"6660:18:27"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6684:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"6692:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6680:3:27"},"nodeType":"YulFunctionCall","src":"6680:15:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6653:6:27"},"nodeType":"YulFunctionCall","src":"6653:43:27"},"nodeType":"YulExpressionStatement","src":"6653:43:27"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6437:9:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6448:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6456:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6464:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6475:4:27","type":""}],"src":"6327:375:27"},{"body":{"nodeType":"YulBlock","src":"6894:309:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6904:27:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6924:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6918:5:27"},"nodeType":"YulFunctionCall","src":"6918:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6908:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6979:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6987:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6975:3:27"},"nodeType":"YulFunctionCall","src":"6975:17:27"},{"name":"pos","nodeType":"YulIdentifier","src":"6994:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"6999:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"6940:34:27"},"nodeType":"YulFunctionCall","src":"6940:66:27"},"nodeType":"YulExpressionStatement","src":"6940:66:27"},{"nodeType":"YulVariableDeclaration","src":"7015:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7032:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"7037:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7028:3:27"},"nodeType":"YulFunctionCall","src":"7028:16:27"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"7019:5:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7053:29:27","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7075:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7069:5:27"},"nodeType":"YulFunctionCall","src":"7069:13:27"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"7057:8:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7130:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7138:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7126:3:27"},"nodeType":"YulFunctionCall","src":"7126:17:27"},{"name":"end_1","nodeType":"YulIdentifier","src":"7145:5:27"},{"name":"length_1","nodeType":"YulIdentifier","src":"7152:8:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7091:34:27"},"nodeType":"YulFunctionCall","src":"7091:70:27"},"nodeType":"YulExpressionStatement","src":"7091:70:27"},{"nodeType":"YulAssignment","src":"7170:27:27","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"7181:5:27"},{"name":"length_1","nodeType":"YulIdentifier","src":"7188:8:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7177:3:27"},"nodeType":"YulFunctionCall","src":"7177:20:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7170:3:27"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6862:3:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6867:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6875:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6886:3:27","type":""}],"src":"6707:496:27"},{"body":{"nodeType":"YulBlock","src":"7411:286:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7421:29:27","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7439:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7444:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7435:3:27"},"nodeType":"YulFunctionCall","src":"7435:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"7448:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7431:3:27"},"nodeType":"YulFunctionCall","src":"7431:19:27"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7425:2:27","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7466:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7481:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"7489:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7477:3:27"},"nodeType":"YulFunctionCall","src":"7477:15:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7459:6:27"},"nodeType":"YulFunctionCall","src":"7459:34:27"},"nodeType":"YulExpressionStatement","src":"7459:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7513:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7524:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7509:3:27"},"nodeType":"YulFunctionCall","src":"7509:18:27"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7533:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"7541:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7529:3:27"},"nodeType":"YulFunctionCall","src":"7529:15:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7502:6:27"},"nodeType":"YulFunctionCall","src":"7502:43:27"},"nodeType":"YulExpressionStatement","src":"7502:43:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7565:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7576:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7561:3:27"},"nodeType":"YulFunctionCall","src":"7561:18:27"},{"name":"value2","nodeType":"YulIdentifier","src":"7581:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7554:6:27"},"nodeType":"YulFunctionCall","src":"7554:34:27"},"nodeType":"YulExpressionStatement","src":"7554:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7608:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7619:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7604:3:27"},"nodeType":"YulFunctionCall","src":"7604:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"7624:3:27","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7597:6:27"},"nodeType":"YulFunctionCall","src":"7597:31:27"},"nodeType":"YulExpressionStatement","src":"7597:31:27"},{"nodeType":"YulAssignment","src":"7637:54:27","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"7663:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7675:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7686:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7671:3:27"},"nodeType":"YulFunctionCall","src":"7671:19:27"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"7645:17:27"},"nodeType":"YulFunctionCall","src":"7645:46:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7637:4:27"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7356:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7367:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7375:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7383:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7391:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7402:4:27","type":""}],"src":"7208:489:27"},{"body":{"nodeType":"YulBlock","src":"7782:169:27","statements":[{"body":{"nodeType":"YulBlock","src":"7828:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7837:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7840:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7830:6:27"},"nodeType":"YulFunctionCall","src":"7830:12:27"},"nodeType":"YulExpressionStatement","src":"7830:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7803:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"7812:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7799:3:27"},"nodeType":"YulFunctionCall","src":"7799:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"7824:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7795:3:27"},"nodeType":"YulFunctionCall","src":"7795:32:27"},"nodeType":"YulIf","src":"7792:52:27"},{"nodeType":"YulVariableDeclaration","src":"7853:29:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7872:9:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7866:5:27"},"nodeType":"YulFunctionCall","src":"7866:16:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7857:5:27","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7915:5:27"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"7891:23:27"},"nodeType":"YulFunctionCall","src":"7891:30:27"},"nodeType":"YulExpressionStatement","src":"7891:30:27"},{"nodeType":"YulAssignment","src":"7930:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"7940:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7930:6:27"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7748:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7759:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7771:6:27","type":""}],"src":"7702:249:27"},{"body":{"nodeType":"YulBlock","src":"7988:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8005:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8012:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8017:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8008:3:27"},"nodeType":"YulFunctionCall","src":"8008:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7998:6:27"},"nodeType":"YulFunctionCall","src":"7998:31:27"},"nodeType":"YulExpressionStatement","src":"7998:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8045:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8048:4:27","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8038:6:27"},"nodeType":"YulFunctionCall","src":"8038:15:27"},"nodeType":"YulExpressionStatement","src":"8038:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8069:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8072:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8062:6:27"},"nodeType":"YulFunctionCall","src":"8062:15:27"},"nodeType":"YulExpressionStatement","src":"8062:15:27"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"7956:127:27"},{"body":{"nodeType":"YulBlock","src":"8217:145:27","statements":[{"nodeType":"YulAssignment","src":"8227:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8239:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8250:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8235:3:27"},"nodeType":"YulFunctionCall","src":"8235:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8227:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8269:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8284:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8300:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"8305:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8296:3:27"},"nodeType":"YulFunctionCall","src":"8296:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8292:3:27"},"nodeType":"YulFunctionCall","src":"8292:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8280:3:27"},"nodeType":"YulFunctionCall","src":"8280:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8262:6:27"},"nodeType":"YulFunctionCall","src":"8262:51:27"},"nodeType":"YulExpressionStatement","src":"8262:51:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8333:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8344:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8329:3:27"},"nodeType":"YulFunctionCall","src":"8329:18:27"},{"name":"value1","nodeType":"YulIdentifier","src":"8349:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8322:6:27"},"nodeType":"YulFunctionCall","src":"8322:34:27"},"nodeType":"YulExpressionStatement","src":"8322:34:27"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8178:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8189:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8197:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8208:4:27","type":""}],"src":"8088:274:27"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Token does not exist\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101425760003560e01c80636352211e116100b857806395d89b411161007c57806395d89b41146102c7578063a22cb465146102cf578063b88d4fde146102e2578063c87b56dd146102f5578063e985e9c514610308578063f2fde38b1461031b57600080fd5b80636352211e1461028057806370a0823114610293578063715018a6146102a657806375794a3c146102ae5780638da5cb5b146102b657600080fd5b8063156e29f61161010a578063156e29f6146101d757806323b872dd146101f857806342842e0e1461020b57806342966c681461021e5780635cc07076146102315780635dde88951461026d57600080fd5b806301ffc9a71461014757806306fdde031461016f578063081812fc14610184578063095ea7b3146101af5780631394f102146101c4575b600080fd5b61015a610155366004610fc9565b61032e565b60405190151581526020015b60405180910390f35b610177610380565b6040516101669190611036565b610197610192366004611049565b610412565b6040516001600160a01b039091168152602001610166565b6101c26101bd36600461107e565b61043b565b005b61015a6101d2366004611049565b61044a565b6101ea6101e53660046110a8565b61049e565b604051908152602001610166565b6101c26102063660046110db565b610542565b6101c26102193660046110db565b6105cd565b6101c261022c366004611049565b6105ed565b61025861023f366004611049565b6007602052600090815260409020805460019091015482565b60408051928352602083019190915201610166565b61025861027b366004611049565b610672565b61019761028e366004611049565b6106d6565b6101ea6102a1366004611117565b6106e1565b6101c2610729565b6008546101ea565b6006546001600160a01b0316610197565b61017761073d565b6101c26102dd366004611132565b61074c565b6101c26102f0366004611184565b610757565b610177610303366004611049565b61076f565b61015a610316366004611260565b6107e4565b6101c2610329366004611117565b610812565b60006001600160e01b031982166380ac58cd60e01b148061035f57506001600160e01b03198216635b5e139f60e01b145b8061037a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461038f90611293565b80601f01602080910402602001604051908101604052809291908181526020018280546103bb90611293565b80156104085780601f106103dd57610100808354040283529160200191610408565b820191906000526020600020905b8154815290600101906020018083116103eb57829003601f168201915b5050505050905090565b600061041d82610850565b506000828152600460205260409020546001600160a01b031661037a565b610446828233610889565b5050565b600080610456836106d6565b6001600160a01b0316036104855760405162461bcd60e51b815260040161047c906112cd565b60405180910390fd5b5060009081526007602052604090206001015442101590565b60006104a8610896565b600880549060006104b8836112fb565b9091555060408051808201825285815260208082018681526000858152600790925292902090518155905160019091015590506104f584826108c3565b604080518481526020810184905282916001600160a01b038716917f833cc33f3742f30a4b77b979e34a34a35c01c28e3e146bb15a5799212e597ba0910160405180910390a39392505050565b6001600160a01b03821661056c57604051633250574960e11b81526000600482015260240161047c565b6000610579838333610928565b9050836001600160a01b0316816001600160a01b0316146105c7576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161047c565b50505050565b6105e883838360405180602001604052806000815250610757565b505050565b6105f5610896565b6000610600826106d6565b6001600160a01b0316036106265760405162461bcd60e51b815260040161047c906112cd565b60008181526007602052604081208181556001015561064481610a21565b60405181907f6ce5b8b269980bc0dce72c0cd3cd829d07d53e3649ea065f2b5ef971fdb17a3190600090a250565b6000808061067f846106d6565b6001600160a01b0316036106a55760405162461bcd60e51b815260040161047c906112cd565b5050600090815260076020908152604091829020825180840190935280548084526001909101549290910182905291565b600061037a82610850565b60006001600160a01b03821661070d576040516322718ad960e21b81526000600482015260240161047c565b506001600160a01b031660009081526003602052604090205490565b610731610896565b61073b6000610a5c565b565b60606001805461038f90611293565b610446338383610aae565b610762848484610542565b6105c73385858585610b4d565b606061077a82610850565b50600061079260408051602081019091526000815290565b905060008151116107b257604051806020016040528060008152506107dd565b806107bc84610c78565b6040516020016107cd929190611322565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61081a610896565b6001600160a01b03811661084457604051631e4fbdf760e01b81526000600482015260240161047c565b61084d81610a5c565b50565b6000818152600260205260408120546001600160a01b03168061037a57604051637e27328960e01b81526004810184905260240161047c565b6105e88383836001610d0b565b6006546001600160a01b0316331461073b5760405163118cdaa760e01b815233600482015260240161047c565b6001600160a01b0382166108ed57604051633250574960e11b81526000600482015260240161047c565b60006108fb83836000610928565b90506001600160a01b038116156105e8576040516339e3563760e11b81526000600482015260240161047c565b6000828152600260205260408120546001600160a01b039081169083161561095557610955818486610e11565b6001600160a01b0381161561099357610972600085600080610d0b565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156109c2576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6000610a306000836000610928565b90506001600160a01b03811661044657604051637e27328960e01b81526004810183905260240161047c565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610ae057604051630b61174360e31b81526001600160a01b038316600482015260240161047c565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610c7157604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610b8f908890889087908790600401611351565b6020604051808303816000875af1925050508015610bca575060408051601f3d908101601f19168201909252610bc79181019061138e565b60015b610c33573d808015610bf8576040519150601f19603f3d011682016040523d82523d6000602084013e610bfd565b606091505b508051600003610c2b57604051633250574960e11b81526001600160a01b038516600482015260240161047c565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b14610c6f57604051633250574960e11b81526001600160a01b038516600482015260240161047c565b505b5050505050565b60606000610c8583610e75565b600101905060008167ffffffffffffffff811115610ca557610ca561116e565b6040519080825280601f01601f191660200182016040528015610ccf576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610cd957509392505050565b8080610d1f57506001600160a01b03821615155b15610de1576000610d2f84610850565b90506001600160a01b03831615801590610d5b5750826001600160a01b0316816001600160a01b031614155b8015610d6e5750610d6c81846107e4565b155b15610d975760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161047c565b8115610ddf5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610e1c838383610f4d565b6105e8576001600160a01b038316610e4a57604051637e27328960e01b81526004810182905260240161047c565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161047c565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610eb45772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610ee0576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610efe57662386f26fc10000830492506010015b6305f5e1008310610f16576305f5e100830492506008015b6127108310610f2a57612710830492506004015b60648310610f3c576064830492506002015b600a831061037a5760010192915050565b60006001600160a01b03831615801590610fab5750826001600160a01b0316846001600160a01b03161480610f875750610f8784846107e4565b80610fab57506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160e01b03198116811461084d57600080fd5b600060208284031215610fdb57600080fd5b81356107dd81610fb3565b60005b83811015611001578181015183820152602001610fe9565b50506000910152565b60008151808452611022816020860160208601610fe6565b601f01601f19169290920160200192915050565b6020815260006107dd602083018461100a565b60006020828403121561105b57600080fd5b5035919050565b80356001600160a01b038116811461107957600080fd5b919050565b6000806040838503121561109157600080fd5b61109a83611062565b946020939093013593505050565b6000806000606084860312156110bd57600080fd5b6110c684611062565b95602085013595506040909401359392505050565b6000806000606084860312156110f057600080fd5b6110f984611062565b925061110760208501611062565b9150604084013590509250925092565b60006020828403121561112957600080fd5b6107dd82611062565b6000806040838503121561114557600080fd5b61114e83611062565b91506020830135801515811461116357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561119a57600080fd5b6111a385611062565b93506111b160208601611062565b925060408501359150606085013567ffffffffffffffff808211156111d557600080fd5b818701915087601f8301126111e957600080fd5b8135818111156111fb576111fb61116e565b604051601f8201601f19908116603f011681019083821181831017156112235761122361116e565b816040528281528a602084870101111561123c57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561127357600080fd5b61127c83611062565b915061128a60208401611062565b90509250929050565b600181811c908216806112a757607f821691505b6020821081036112c757634e487b7160e01b600052602260045260246000fd5b50919050565b602080825260149082015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b604082015260600190565b60006001820161131b57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008351611334818460208801610fe6565b835190830190611348818360208801610fe6565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906113849083018461100a565b9695505050505050565b6000602082840312156113a057600080fd5b81516107dd81610fb356fea26469706673582212203327abff292a316cda6866fe27c6527381f239eb946760594cbe2442ea19fdb264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x75794A3C EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x156E29F6 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x5CC07076 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x5DDE8895 EQ PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x1394F102 EQ PUSH2 0x1C4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC9 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x380 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x1049 JUMP JUMPDEST PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0x107E JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15A PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1049 JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A8 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x542 JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x1049 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x258 PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0x1049 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x1049 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x1049 JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x729 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x197 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x73D JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1132 JUMP JUMPDEST PUSH2 0x74C JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x2F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1184 JUMP JUMPDEST PUSH2 0x757 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x1049 JUMP JUMPDEST PUSH2 0x76F JUMP JUMPDEST PUSH2 0x15A PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x1260 JUMP JUMPDEST PUSH2 0x7E4 JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x35F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x37A JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x38F SWAP1 PUSH2 0x1293 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3BB SWAP1 PUSH2 0x1293 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x408 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3DD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x408 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41D DUP3 PUSH2 0x850 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x37A JUMP JUMPDEST PUSH2 0x446 DUP3 DUP3 CALLER PUSH2 0x889 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x456 DUP4 PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x485 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47C SWAP1 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A8 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x4B8 DUP4 PUSH2 0x12FB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP7 DUP2 MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP3 SWAP1 KECCAK256 SWAP1 MLOAD DUP2 SSTORE SWAP1 MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE SWAP1 POP PUSH2 0x4F5 DUP5 DUP3 PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH32 0x833CC33F3742F30A4B77B979E34A34A35C01C28E3E146BB15A5799212E597BA0 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x56C JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x579 DUP4 DUP4 CALLER PUSH2 0x928 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5E8 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x757 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5F5 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x600 DUP3 PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x626 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47C SWAP1 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 ADD SSTORE PUSH2 0x644 DUP2 PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x6CE5B8B269980BC0DCE72C0CD3CD829D07D53E3649EA065F2B5EF971FDB17A31 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x67F DUP5 PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47C SWAP1 PUSH2 0x12CD JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP3 SWAP1 SWAP2 ADD DUP3 SWAP1 MSTORE SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A DUP3 PUSH2 0x850 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x731 PUSH2 0x896 JUMP JUMPDEST PUSH2 0x73B PUSH1 0x0 PUSH2 0xA5C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x38F SWAP1 PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x446 CALLER DUP4 DUP4 PUSH2 0xAAE JUMP JUMPDEST PUSH2 0x762 DUP5 DUP5 DUP5 PUSH2 0x542 JUMP JUMPDEST PUSH2 0x5C7 CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0xB4D JUMP JUMPDEST PUSH1 0x60 PUSH2 0x77A DUP3 PUSH2 0x850 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x792 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x7B2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7DD JUMP JUMPDEST DUP1 PUSH2 0x7BC DUP5 PUSH2 0xC78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7CD SWAP3 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x81A PUSH2 0x896 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST PUSH2 0x84D DUP2 PUSH2 0xA5C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x37A JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST PUSH2 0x5E8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x73B JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8ED JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FB DUP4 DUP4 PUSH1 0x0 PUSH2 0x928 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x955 JUMPI PUSH2 0x955 DUP2 DUP5 DUP7 PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x993 JUMPI PUSH2 0x972 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x9C2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA30 PUSH1 0x0 DUP4 PUSH1 0x0 PUSH2 0x928 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x446 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAE0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xC71 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xB8F SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1351 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBCA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBC7 SWAP2 DUP2 ADD SWAP1 PUSH2 0x138E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC33 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xC2B JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xC85 DUP4 PUSH2 0xE75 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCA5 JUMPI PUSH2 0xCA5 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCCF JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xCD9 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0xD1F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xDE1 JUMPI PUSH1 0x0 PUSH2 0xD2F DUP5 PUSH2 0x850 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD5B JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xD6E JUMPI POP PUSH2 0xD6C DUP2 DUP5 PUSH2 0x7E4 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xD97 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST DUP2 ISZERO PUSH2 0xDDF JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE1C DUP4 DUP4 DUP4 PUSH2 0xF4D JUMP JUMPDEST PUSH2 0x5E8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE4A JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x47C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x47C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xEB4 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xEE0 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xEFE JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xF16 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xF2A JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xF3C JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x37A JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xFAB JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xF87 JUMPI POP PUSH2 0xF87 DUP5 DUP5 PUSH2 0x7E4 JUMP JUMPDEST DUP1 PUSH2 0xFAB JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7DD DUP2 PUSH2 0xFB3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1001 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFE9 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1022 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7DD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x105B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1079 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1091 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109A DUP4 PUSH2 0x1062 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10C6 DUP5 PUSH2 0x1062 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F9 DUP5 PUSH2 0x1062 JUMP JUMPDEST SWAP3 POP PUSH2 0x1107 PUSH1 0x20 DUP6 ADD PUSH2 0x1062 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7DD DUP3 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114E DUP4 PUSH2 0x1062 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x119A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11A3 DUP6 PUSH2 0x1062 JUMP JUMPDEST SWAP4 POP PUSH2 0x11B1 PUSH1 0x20 DUP7 ADD PUSH2 0x1062 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x11FB JUMPI PUSH2 0x11FB PUSH2 0x116E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1223 JUMPI PUSH2 0x1223 PUSH2 0x116E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x123C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x127C DUP4 PUSH2 0x1062 JUMP JUMPDEST SWAP2 POP PUSH2 0x128A PUSH1 0x20 DUP5 ADD PUSH2 0x1062 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x12A7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12C7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x131B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1334 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xFE6 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1348 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xFE6 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1384 SWAP1 DUP4 ADD DUP5 PUSH2 0x100A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7DD DUP2 PUSH2 0xFB3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER 0x27 0xAB SELFDESTRUCT 0x29 0x2A BALANCE PUSH13 0xDA6866FE27C6527381F239EB94 PUSH8 0x60594CBE2442EA19 REVERT 0xB2 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"340:2739:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1527:300:9;;;;;;:::i;:::-;;:::i;:::-;;;565:14:27;;558:22;540:41;;528:2;513:18;1527:300:9;;;;;;;;2263:89;;;:::i;:::-;;;;;;;:::i;3299:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:27;;;1679:51;;1667:2;1652:18;3299:154:9;1533:203:27;3152:113:9;;;;;;:::i;:::-;;:::i;:::-;;2691:235:26;;;;;;:::i;:::-;;:::i;1195:442::-;;;;;;:::i;:::-;;:::i;:::-;;;2651:25:27;;;2639:2;2624:18;1195:442:26;2505:177:27;3852:578:9;;;;;;:::i;:::-;;:::i;4464:132::-;;;;;;:::i;:::-;;:::i;1741:249:26:-;;;;;;:::i;:::-;;:::i;537:53::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3194:25:27;;;3250:2;3235:18;;3228:34;;;;3167:18;537:53:26;3020:248:27;2224:299:26;;;;;;:::i;:::-;;:::i;2103:118:9:-;;;;;;:::i;:::-;;:::i;1861:208::-;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;2986:91:26:-;3058:12;;2986:91;;1638:85:0;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;2394:93:9;;;:::i;3487:144::-;;;;;;:::i;:::-;;:::i;4630:233::-;;;;;;:::i;:::-;;:::i;2529:255::-;;;;;;:::i;:::-;;:::i;3665:153::-;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;1527:300:9:-;1629:4;-1:-1:-1;;;;;;1664:40:9;;-1:-1:-1;;;1664:40:9;;:104;;-1:-1:-1;;;;;;;1720:48:9;;-1:-1:-1;;;1720:48:9;1664:104;:156;;;-1:-1:-1;;;;;;;;;;829:40:18;;;1784:36:9;1645:175;1527:300;-1:-1:-1;;1527:300:9:o;2263:89::-;2308:13;2340:5;2333:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2263:89;:::o;3299:154::-;3366:7;3385:22;3399:7;3385:13;:22::i;:::-;-1:-1:-1;5679:7:9;5705:24;;;:15;:24;;;;;;-1:-1:-1;;;;;5705:24:9;3425:21;5609:127;3152:113;3223:35;3232:2;3236:7;735:10:14;3223:8:9;:35::i;:::-;3152:113;;:::o;2691:235:26:-;2762:14;;2796:16;2804:7;2796;:16::i;:::-;-1:-1:-1;;;;;2796:30:26;;2788:63;;;;-1:-1:-1;;;2788:63:26;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;2887:20:26;;;;:11;:20;;;;;:32;;;2868:15;:51;;;2691:235::o;1195:442::-;1317:15;1531:13:0;:11;:13::i;:::-;1359:12:26::1;:14:::0;;;:12:::1;:14;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;1415:100:26::1;::::0;;;;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;1392:20:26;;;:11:::1;:20:::0;;;;;;:123;;;;;;::::1;::::0;;::::1;::::0;1349:24;-1:-1:-1;1534:18:26::1;1540:2:::0;1349:24;1534:5:::1;:18::i;:::-;1576:54;::::0;;3194:25:27;;;3250:2;3235:18;;3228:34;;;1597:7:26;;-1:-1:-1;;;;;1576:54:26;::::1;::::0;::::1;::::0;3167:18:27;1576:54:26::1;;;;;;;1195:442:::0;;;;;:::o;3852:578:9:-;-1:-1:-1;;;;;3946:16:9;;3942:87;;3985:33;;-1:-1:-1;;;3985:33:9;;4015:1;3985:33;;;1679:51:27;1652:18;;3985:33:9;1533:203:27;3942:87:9;4247:21;4271:34;4279:2;4283:7;735:10:14;4271:7:9;:34::i;:::-;4247:58;;4336:4;-1:-1:-1;;;;;4319:21:9;:13;-1:-1:-1;;;;;4319:21:9;;4315:109;;4363:50;;-1:-1:-1;;;4363:50:9;;-1:-1:-1;;;;;6585:15:27;;;4363:50:9;;;6567:34:27;6617:18;;;6610:34;;;6680:15;;6660:18;;;6653:43;6502:18;;4363:50:9;6327:375:27;4315:109:9;3932:498;3852:578;;;:::o;4464:132::-;4550:39;4567:4;4573:2;4577:7;4550:39;;;;;;;;;;;;:16;:39::i;:::-;4464:132;;;:::o;1741:249:26:-;1531:13:0;:11;:13::i;:::-;1837:1:26::1;1809:16;1817:7:::0;1809::::1;:16::i;:::-;-1:-1:-1::0;;;;;1809:30:26::1;::::0;1801:63:::1;;;;-1:-1:-1::0;;;1801:63:26::1;;;;;;;:::i;:::-;1890:20;::::0;;;:11:::1;:20;::::0;;;;1883:27;;;::::1;;::::0;1920:14:::1;1902:7:::0;1920:5:::1;:14::i;:::-;1958:25;::::0;1975:7;;1958:25:::1;::::0;;;::::1;1741:249:::0;:::o;2224:299::-;2291:18;;;2350:16;2358:7;2350;:16::i;:::-;-1:-1:-1;;;;;2350:30:26;;2342:63;;;;-1:-1:-1;;;2342:63:26;;;;;;;:::i;:::-;-1:-1:-1;;2415:26:26;2444:20;;;:11;:20;;;;;;;;;2415:49;;;;;;;;;;;;;;;;;;;;;;;;;;2224:299::o;2103:118:9:-;2166:7;2192:22;2206:7;2192:13;:22::i;1861:208::-;1924:7;-1:-1:-1;;;;;1947:19:9;;1943:87;;1989:30;;-1:-1:-1;;;1989:30:9;;2016:1;1989:30;;;1679:51:27;1652:18;;1989:30:9;1533:203:27;1943:87:9;-1:-1:-1;;;;;;2046:16:9;;;;;:9;:16;;;;;;;1861:208::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2394:93:9:-;2441:13;2473:7;2466:14;;;;;:::i;3487:144::-;3572:52;735:10:14;3605:8:9;3615;3572:18;:52::i;4630:233::-;4743:31;4756:4;4762:2;4766:7;4743:12;:31::i;:::-;4784:72;735:10:14;4832:4:9;4838:2;4842:7;4851:4;4784:33;:72::i;2529:255::-;2593:13;2618:22;2632:7;2618:13;:22::i;:::-;;2651:21;2675:10;3102:9;;;;;;;;;-1:-1:-1;3102:9:9;;;3026:92;2675:10;2651:34;;2726:1;2708:7;2702:21;:25;:75;;;;;;;;;;;;;;;;;2744:7;2753:18;:7;:16;:18::i;:::-;2730:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2702:75;2695:82;2529:255;-1:-1:-1;;;2529:255:9:o;3665:153::-;-1:-1:-1;;;;;3776:25:9;;;3753:4;3776:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3665:153::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1679:51:27::0;1652:18;;2672:31:0::1;1533:203:27::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;15858:241:9:-;15921:7;5470:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5470:16:9;;15983:88;;16029:31;;-1:-1:-1;;;16029:31:9;;;;;2651:25:27;;;2624:18;;16029:31:9;2505:177:27;14138:120:9;14218:33;14227:2;14231:7;14240:4;14246;14218:8;:33::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:14;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:14;1901:40:0;;;1679:51:27;1652:18;;1901:40:0;1533:203:27;9624:327:9;-1:-1:-1;;;;;9691:16:9;;9687:87;;9730:33;;-1:-1:-1;;;9730:33:9;;9760:1;9730:33;;;1679:51:27;1652:18;;9730:33:9;1533:203:27;9687:87:9;9783:21;9807:32;9815:2;9819:7;9836:1;9807:7;:32::i;:::-;9783:56;-1:-1:-1;;;;;;9853:27:9;;;9849:96;;9903:31;;-1:-1:-1;;;9903:31:9;;9931:1;9903:31;;;1679:51:27;1652:18;;9903:31:9;1533:203:27;8507:795:9;8593:7;5470:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5470:16:9;;;;8704:18;;;8700:86;;8738:37;8755:4;8761;8767:7;8738:16;:37::i;:::-;-1:-1:-1;;;;;8830:18:9;;;8826:256;;8946:48;8963:1;8967:7;8984:1;8988:5;8946:8;:48::i;:::-;-1:-1:-1;;;;;9037:15:9;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9037:20:9;;;8826:256;-1:-1:-1;;;;;9096:16:9;;;9092:107;;-1:-1:-1;;;;;9156:13:9;;;;;;:9;:13;;;;;:18;;9173:1;9156:18;;;9092:107;9209:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9209:21:9;-1:-1:-1;;;;;9209:21:9;;;;;;;;;9246:27;;9209:16;;9246:27;;;;;;;9291:4;8507:795;-1:-1:-1;;;;8507:795:9:o;11156:227::-;11207:21;11231:40;11247:1;11251:7;11268:1;11231:7;:40::i;:::-;11207:64;-1:-1:-1;;;;;;11285:27:9;;11281:96;;11335:31;;-1:-1:-1;;;11335:31:9;;;;;2651:25:27;;;2624:18;;11335:31:9;2505:177:27;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;15311:312:9:-;-1:-1:-1;;;;;15418:22:9;;15414:91;;15463:31;;-1:-1:-1;;;15463:31:9;;-1:-1:-1;;;;;1697:32:27;;15463:31:9;;;1679:51:27;1652:18;;15463:31:9;1533:203:27;15414:91:9;-1:-1:-1;;;;;15514:25:9;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15514:46:9;;;;;;;;;;15575:41;;540::27;;;15575::9;;513:18:27;15575:41:9;;;;;;;15311:312;;;:::o;993:926:13:-;-1:-1:-1;;;;;1173:14:13;;;:18;1169:744;;1211:67;;-1:-1:-1;;;1211:67:13;;-1:-1:-1;;;;;1211:36:13;;;;;:67;;1248:8;;1258:4;;1264:7;;1273:4;;1211:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1211:67:13;;;;;;;;-1:-1:-1;;1211:67:13;;;;;;;;;;;;:::i;:::-;;;1207:696;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1568:6;:13;1585:1;1568:18;1564:325;;1672:39;;-1:-1:-1;;;1672:39:13;;-1:-1:-1;;;;;1697:32:27;;1672:39:13;;;1679:51:27;1652:18;;1672:39:13;1533:203:27;1564:325:13;1841:6;1835:13;1828:4;1820:6;1816:17;1809:40;1207:696;-1:-1:-1;;;;;;1325:51:13;;-1:-1:-1;;;1325:51:13;1321:182;;1445:39;;-1:-1:-1;;;1445:39:13;;-1:-1:-1;;;;;1697:32:27;;1445:39:13;;;1679:51:27;1652:18;;1445:39:13;1533:203:27;1321:182:13;1279:238;1207:696;993:926;;;;;:::o;1308:634:17:-;1364:13;1413:14;1430:17;1441:5;1430:10;:17::i;:::-;1450:1;1430:21;1413:38;;1465:20;1499:6;1488:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1488:18:17;-1:-1:-1;1465:41:17;-1:-1:-1;1595:30:17;;;1611:4;1595:30;1652:247;-1:-1:-1;;1683:5:17;-1:-1:-1;;;1782:2:17;1771:14;;1766:32;1683:5;1753:46;1843:2;1834:11;;;-1:-1:-1;1863:21:17;1652:247;1863:21;-1:-1:-1;1919:6:17;1308:634;-1:-1:-1;;;1308:634:17:o;14440:662:9:-;14600:9;:31;;;-1:-1:-1;;;;;;14613:18:9;;;;14600:31;14596:460;;;14647:13;14663:22;14677:7;14663:13;:22::i;:::-;14647:38;-1:-1:-1;;;;;;14813:18:9;;;;;;:35;;;14844:4;-1:-1:-1;;;;;14835:13:9;:5;-1:-1:-1;;;;;14835:13:9;;;14813:35;:69;;;;;14853:29;14870:5;14877:4;14853:16;:29::i;:::-;14852:30;14813:69;14809:142;;;14909:27;;-1:-1:-1;;;14909:27:9;;-1:-1:-1;;;;;1697:32:27;;14909:27:9;;;1679:51:27;1652:18;;14909:27:9;1533:203:27;14809:142:9;14969:9;14965:81;;;15023:7;15019:2;-1:-1:-1;;;;;15003:28:9;15012:5;-1:-1:-1;;;;;15003:28:9;;;;;;;;;;;14965:81;14633:423;14596:460;-1:-1:-1;;15066:24:9;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15066:29:9;-1:-1:-1;;;;;15066:29:9;;;;;;;;;;14440:662::o;6751:368::-;6863:38;6877:5;6884:7;6893;6863:13;:38::i;:::-;6858:255;;-1:-1:-1;;;;;6921:19:9;;6917:186;;6967:31;;-1:-1:-1;;;6967:31:9;;;;;2651:25:27;;;2624:18;;6967:31:9;2505:177:27;6917:186:9;7044:44;;-1:-1:-1;;;7044:44:9;;-1:-1:-1;;;;;8280:32:27;;7044:44:9;;;8262:51:27;8329:18;;;8322:34;;;8235:18;;7044:44:9;8088:274:27;29154:916:20;29207:7;;-1:-1:-1;;;29282:17:20;;29278:103;;-1:-1:-1;;;29319:17:20;;;-1:-1:-1;29364:2:20;29354:12;29278:103;29407:8;29398:5;:17;29394:103;;29444:8;29435:17;;;-1:-1:-1;29480:2:20;29470:12;29394:103;29523:8;29514:5;:17;29510:103;;29560:8;29551:17;;;-1:-1:-1;29596:2:20;29586:12;29510:103;29639:7;29630:5;:16;29626:100;;29675:7;29666:16;;;-1:-1:-1;29710:1:20;29700:11;29626:100;29752:7;29743:5;:16;29739:100;;29788:7;29779:16;;;-1:-1:-1;29823:1:20;29813:11;29739:100;29865:7;29856:5;:16;29852:100;;29901:7;29892:16;;;-1:-1:-1;29936:1:20;29926:11;29852:100;29978:7;29969:5;:16;29965:66;;30015:1;30005:11;30057:6;29154:916;-1:-1:-1;;29154:916:20:o;6047:272:9:-;6150:4;-1:-1:-1;;;;;6185:21:9;;;;;;:127;;;6232:7;-1:-1:-1;;;;;6223:16:9;:5;-1:-1:-1;;;;;6223:16:9;;:52;;;;6243:32;6260:5;6267:7;6243:16;:32::i;:::-;6223:88;;;-1:-1:-1;5679:7:9;5705:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6279:32:9;;;5705:24;;6279:32;6223:88;6166:146;6047:272;-1:-1:-1;;;;6047:272:9:o;14:131:27:-;-1:-1:-1;;;;;;88:32:27;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:27;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:27;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:27:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:27;;1348:180;-1:-1:-1;1348:180:27:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:27;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:27:o;2178:322::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;2439:2;2424:18;;2411:32;;-1:-1:-1;2490:2:27;2475:18;;;2462:32;;2178:322;-1:-1:-1;;;2178:322:27:o;2687:328::-;2764:6;2772;2780;2833:2;2821:9;2812:7;2808:23;2804:32;2801:52;;;2849:1;2846;2839:12;2801:52;2872:29;2891:9;2872:29;:::i;:::-;2862:39;;2920:38;2954:2;2943:9;2939:18;2920:38;:::i;:::-;2910:48;;3005:2;2994:9;2990:18;2977:32;2967:42;;2687:328;;;;;:::o;3273:186::-;3332:6;3385:2;3373:9;3364:7;3360:23;3356:32;3353:52;;;3401:1;3398;3391:12;3353:52;3424:29;3443:9;3424:29;:::i;3464:347::-;3529:6;3537;3590:2;3578:9;3569:7;3565:23;3561:32;3558:52;;;3606:1;3603;3596:12;3558:52;3629:29;3648:9;3629:29;:::i;:::-;3619:39;;3708:2;3697:9;3693:18;3680:32;3755:5;3748:13;3741:21;3734:5;3731:32;3721:60;;3777:1;3774;3767:12;3721:60;3800:5;3790:15;;;3464:347;;;;;:::o;3816:127::-;3877:10;3872:3;3868:20;3865:1;3858:31;3908:4;3905:1;3898:15;3932:4;3929:1;3922:15;3948:1138;4043:6;4051;4059;4067;4120:3;4108:9;4099:7;4095:23;4091:33;4088:53;;;4137:1;4134;4127:12;4088:53;4160:29;4179:9;4160:29;:::i;:::-;4150:39;;4208:38;4242:2;4231:9;4227:18;4208:38;:::i;:::-;4198:48;;4293:2;4282:9;4278:18;4265:32;4255:42;;4348:2;4337:9;4333:18;4320:32;4371:18;4412:2;4404:6;4401:14;4398:34;;;4428:1;4425;4418:12;4398:34;4466:6;4455:9;4451:22;4441:32;;4511:7;4504:4;4500:2;4496:13;4492:27;4482:55;;4533:1;4530;4523:12;4482:55;4569:2;4556:16;4591:2;4587;4584:10;4581:36;;;4597:18;;:::i;:::-;4672:2;4666:9;4640:2;4726:13;;-1:-1:-1;;4722:22:27;;;4746:2;4718:31;4714:40;4702:53;;;4770:18;;;4790:22;;;4767:46;4764:72;;;4816:18;;:::i;:::-;4856:10;4852:2;4845:22;4891:2;4883:6;4876:18;4931:7;4926:2;4921;4917;4913:11;4909:20;4906:33;4903:53;;;4952:1;4949;4942:12;4903:53;5008:2;5003;4999;4995:11;4990:2;4982:6;4978:15;4965:46;5053:1;5048:2;5043;5035:6;5031:15;5027:24;5020:35;5074:6;5064:16;;;;;;;3948:1138;;;;;;;:::o;5091:260::-;5159:6;5167;5220:2;5208:9;5199:7;5195:23;5191:32;5188:52;;;5236:1;5233;5226:12;5188:52;5259:29;5278:9;5259:29;:::i;:::-;5249:39;;5307:38;5341:2;5330:9;5326:18;5307:38;:::i;:::-;5297:48;;5091:260;;;;;:::o;5356:380::-;5435:1;5431:12;;;;5478;;;5499:61;;5553:4;5545:6;5541:17;5531:27;;5499:61;5606:2;5598:6;5595:14;5575:18;5572:38;5569:161;;5652:10;5647:3;5643:20;5640:1;5633:31;5687:4;5684:1;5677:15;5715:4;5712:1;5705:15;5569:161;;5356:380;;;:::o;5741:344::-;5943:2;5925:21;;;5982:2;5962:18;;;5955:30;-1:-1:-1;;;6016:2:27;6001:18;;5994:50;6076:2;6061:18;;5741:344::o;6090:232::-;6129:3;6150:17;;;6147:140;;6209:10;6204:3;6200:20;6197:1;6190:31;6244:4;6241:1;6234:15;6272:4;6269:1;6262:15;6147:140;-1:-1:-1;6314:1:27;6303:13;;6090:232::o;6707:496::-;6886:3;6924:6;6918:13;6940:66;6999:6;6994:3;6987:4;6979:6;6975:17;6940:66;:::i;:::-;7069:13;;7028:16;;;;7091:70;7069:13;7028:16;7138:4;7126:17;;7091:70;:::i;:::-;7177:20;;6707:496;-1:-1:-1;;;;6707:496:27:o;7208:489::-;-1:-1:-1;;;;;7477:15:27;;;7459:34;;7529:15;;7524:2;7509:18;;7502:43;7576:2;7561:18;;7554:34;;;7624:3;7619:2;7604:18;;7597:31;;;7402:4;;7645:46;;7671:19;;7663:6;7645:46;:::i;:::-;7637:54;7208:489;-1:-1:-1;;;;;;7208:489:27:o;7702:249::-;7771:6;7824:2;7812:9;7803:7;7799:23;7795:32;7792:52;;;7840:1;7837;7830:12;7792:52;7872:9;7866:16;7891:30;7915:5;7891:30;:::i"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","getApproved(uint256)":"081812fc","getWithdrawalInfo(uint256)":"5dde8895","isApprovedForAll(address,address)":"e985e9c5","isWithdrawalAvailable(uint256)":"1394f102","mint(address,uint256,uint256)":"156e29f6","name()":"06fdde03","nextTokenId()":"75794a3c","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","withdrawals(uint256)":"5cc07076"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"WithdrawalBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assetsOwed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"availableAt\",\"type\":\"uint256\"}],\"name\":\"WithdrawalMinted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getWithdrawalInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assetsOwed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isWithdrawalAvailable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"available\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetsOwed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableAt\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assetsOwed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"NFT representing a time-locked withdrawal claim Each NFT contains information about assets owed and when they become available\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"details\":\"Burn a withdrawal NFT\",\"params\":{\"tokenId\":\"ID of the NFT to burn\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getWithdrawalInfo(uint256)\":{\"details\":\"Get withdrawal information for a token\",\"params\":{\"tokenId\":\"ID of the token\"},\"returns\":{\"assetsOwed\":\"Amount of assets owed\",\"availableAt\":\"Timestamp when withdrawal becomes available\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"isWithdrawalAvailable(uint256)\":{\"details\":\"Check if a withdrawal is available\",\"params\":{\"tokenId\":\"ID of the token\"},\"returns\":{\"available\":\"True if withdrawal is available\"}},\"mint(address,uint256,uint256)\":{\"details\":\"Mint a new withdrawal NFT\",\"params\":{\"assetsOwed\":\"Amount of assets owed\",\"availableAt\":\"Timestamp when withdrawal becomes available\",\"to\":\"Address to mint to\"},\"returns\":{\"tokenId\":\"ID of the minted NFT\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"nextTokenId()\":{\"details\":\"Get the next token ID\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"WithdrawalNFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WithdrawalNFT.sol\":\"WithdrawalNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/WithdrawalNFT.sol\":{\"keccak256\":\"0x45ee217cf8ca1652f79774ffce52c37a55200d1313503de9aeed62e14f7f8058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f5a6d2bdb7d63b79308711271e4c894d6a78766f2dbbd939836515d8c19c289\",\"dweb:/ipfs/QmVN2AidKgsRmfPpfaBVNkAVTEKU5LT8Sw6i3j4Mc8xL96\"]}},\"version\":1}"}}}}}