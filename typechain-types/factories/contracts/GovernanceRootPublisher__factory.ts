/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  GovernanceRootPublisher,
  GovernanceRootPublisherInterface,
} from "../../contracts/GovernanceRootPublisher";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "actionData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "actionDataHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "snapshotBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "exchangeRateSnapshot",
        type: "uint256",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "actionData",
        type: "bytes",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "votingPowerRoot",
        type: "bytes32",
      },
    ],
    name: "VotingPowerRootPublished",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "actionData",
        type: "bytes",
      },
    ],
    name: "createProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "getProposal",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "actionData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "actionDataHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "snapshotBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "exchangeRateSnapshot",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "votingPowerRoot",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "rootPublished",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
        ],
        internalType: "struct GovernanceRootPublisher.Proposal",
        name: "proposal",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getVotingPowerAtBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "votingPower",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextProposalId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalExists",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "actionData",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "actionDataHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "snapshotBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateSnapshot",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "votingPowerRoot",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "rootPublished",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "votingPowerRoot",
        type: "bytes32",
      },
    ],
    name: "publishVotingPowerRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract LiquidStakingVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052600160025534801561001557600080fd5b5060405161131a38038061131a833981016040819052610034916100c5565b338061005a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61006381610075565b506001600160a01b03166080526100f5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d757600080fd5b81516001600160a01b03811681146100ee57600080fd5b9392505050565b6080516111fc61011e600039600081816101e20152818161062a015261099401526111fc6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b1461015f578063abebe45c14610184578063c7f758a814610197578063d182fb9e146101b7578063f2fde38b146101ca578063fbfa77cf146101dd57600080fd5b8063013cf08b146100b95780630d61b519146100eb5780631374b22d146101005780632ab09d14146101325780636f17c15614610144578063715018a614610157575b600080fd5b6100cc6100c7366004610c22565b610204565b6040516100e29a99989796959493929190610c81565b60405180910390f35b6100fe6100f9366004610c22565b61036a565b005b61012261010e366004610c22565b600090815260016020526040902054151590565b60405190151581526020016100e2565b6002545b6040519081526020016100e2565b6100fe610152366004610cee565b6104bc565b6100fe6105ed565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100e2565b610136610192366004610d2c565b610601565b6101aa6101a5366004610c22565b61069e565b6040516100e29190610d56565b6101366101c5366004610e8e565b6108c9565b6100fe6101d8366004610f1d565b610b67565b61016c7f000000000000000000000000000000000000000000000000000000000000000081565b60016020819052600091825260409091208054918101805461022590610f38565b80601f016020809104026020016040519081016040528092919081815260200182805461025190610f38565b801561029e5780601f106102735761010080835404028352916020019161029e565b820191906000526020600020905b81548152906001019060200180831161028157829003601f168201915b5050505050908060020180546102b390610f38565b80601f01602080910402602001604051908101604052809291908181526020018280546102df90610f38565b801561032c5780601f106103015761010080835404028352916020019161032c565b820191906000526020600020905b81548152906001019060200180831161030f57829003601f168201915b50505060038401546004850154600586015460068701546007880154600890980154969793969295509093509160ff8082169261010090920416908a565b60008181526001602052604081205490036103a05760405162461bcd60e51b815260040161039790610f72565b60405180910390fd5b60008181526001602052604090206007015460ff166103f65760405162461bcd60e51b8152602060048201526012602482015271149bdbdd081b9bdd081c1d589b1a5cda195960721b6044820152606401610397565b600081815260016020526040902060070154610100900460ff161561045d5760405162461bcd60e51b815260206004820152601960248201527f50726f706f73616c20616c7265616479206578656375746564000000000000006044820152606401610397565b6000818152600160205260409081902060078101805461ff001916610100179055905182917fbadbd87941bb6424ed4aa4719bf01a3319b64480e49f89018c718603239553d2916104b19160020190610fa9565b60405180910390a250565b6104c4610ba5565b60008281526001602052604081205490036104f15760405162461bcd60e51b815260040161039790610f72565b60008281526001602052604090206007015460ff161561054c5760405162461bcd60e51b8152602060048201526016602482015275149bdbdd08185b1c9958591e481c1d589b1a5cda195960521b6044820152606401610397565b8061058f5760405162461bcd60e51b8152602060048201526013602482015272526f6f742063616e6e6f74206265207a65726f60681b6044820152606401610397565b60008281526001602081815260409283902060068101859055600701805460ff1916909217909155905182815283917f4ad88007ea0d4cb3af4700b414825af8fd184bcf884745becc7e3490810304d2910160405180910390a25050565b6105f5610ba5565b6105ff6000610bd2565b565b6040516323fd003d60e21b81526001600160a01b038381166004830152602482018390526000917f000000000000000000000000000000000000000000000000000000000000000090911690638ff400f490604401602060405180830381865afa158015610673573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106979190611034565b9392505050565b6106fe60405180610140016040528060008152602001606081526020016060815260200160008019168152602001600081526020016000815260200160008019168152602001600015158152602001600015158152602001600081525090565b600082815260016020526040812054900361072b5760405162461bcd60e51b815260040161039790610f72565b600082815260016020818152604092839020835161014081019094528054845291820180549184019161075d90610f38565b80601f016020809104026020016040519081016040528092919081815260200182805461078990610f38565b80156107d65780601f106107ab576101008083540402835291602001916107d6565b820191906000526020600020905b8154815290600101906020018083116107b957829003601f168201915b505050505081526020016002820180546107ef90610f38565b80601f016020809104026020016040519081016040528092919081815260200182805461081b90610f38565b80156108685780601f1061083d57610100808354040283529160200191610868565b820191906000526020600020905b81548152906001019060200180831161084b57829003601f168201915b505050918352505060038201546020820152600482015460408201526005820154606082015260068201546080820152600782015460ff808216151560a084015261010090910416151560c082015260089091015460e09091015292915050565b60006108d3610ba5565b60008351116109245760405162461bcd60e51b815260206004820152601b60248201527f4465736372697074696f6e2063616e6e6f7420626520656d70747900000000006044820152606401610397565b60008251116109755760405162461bcd60e51b815260206004820152601b60248201527f416374696f6e20646174612063616e6e6f7420626520656d70747900000000006044820152606401610397565b600280549060006109858361104d565b919050559050600043905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633ba0b9a96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a149190611034565b90506000848051906020012090506040518061014001604052808581526020018781526020018681526020018281526020018481526020018381526020016000801b81526020016000151581526020016000151581526020014281525060016000868152602001908152602001600020600082015181600001556020820151816001019081610aa391906110c3565b5060408201516002820190610ab890826110c3565b50606082015160038201556080820151600482015560a0820151600582015560c0820151600682015560e08201516007820180546101008086015115150261ff00199315159390931661ffff19909116179190911790556101209091015160089091015560405184907f59da9de999ff61b9b811e412df8f25ff32770a66ae28bce18473efaa6ec2bbeb90610b569089908990869089908990611183565b60405180910390a250505092915050565b610b6f610ba5565b6001600160a01b038116610b9957604051631e4fbdf760e01b815260006004820152602401610397565b610ba281610bd2565b50565b6000546001600160a01b031633146105ff5760405163118cdaa760e01b8152336004820152602401610397565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610c3457600080fd5b5035919050565b6000815180845260005b81811015610c6157602081850181015186830182015201610c45565b506000602082860101526020601f19601f83011685010191505092915050565b60006101408c8352806020840152610c9b8184018d610c3b565b90508281036040840152610caf818c610c3b565b606084019a909a525050608081019690965260a086019490945260c0850192909252151560e08401521515610100830152610120909101529392505050565b60008060408385031215610d0157600080fd5b50508035926020909101359150565b80356001600160a01b0381168114610d2757600080fd5b919050565b60008060408385031215610d3f57600080fd5b610d4883610d10565b946020939093013593505050565b602081528151602082015260006020830151610140806040850152610d7f610160850183610c3b565b91506040850151601f19858403016060860152610d9c8382610c3b565b92505060608501516080850152608085015160a085015260a085015160c085015260c085015160e085015260e0850151610100610ddc8187018315159052565b8601519050610120610df18682018315159052565b959095015193019290925250919050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115610e3357610e33610e02565b604051601f8501601f19908116603f01168101908282118183101715610e5b57610e5b610e02565b81604052809350858152868686011115610e7457600080fd5b858560208301376000602087830101525050509392505050565b60008060408385031215610ea157600080fd5b823567ffffffffffffffff80821115610eb957600080fd5b818501915085601f830112610ecd57600080fd5b610edc86833560208501610e18565b93506020850135915080821115610ef257600080fd5b508301601f81018513610f0457600080fd5b610f1385823560208401610e18565b9150509250929050565b600060208284031215610f2f57600080fd5b61069782610d10565b600181811c90821680610f4c57607f821691505b602082108103610f6c57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526017908201527f50726f706f73616c20646f6573206e6f74206578697374000000000000000000604082015260600190565b6000602080835260008454610fbd81610f38565b80848701526040600180841660008114610fde5760018114610ff857611026565b60ff1985168984015283151560051b890183019550611026565b896000528660002060005b8581101561101e5781548b8201860152908301908801611003565b8a0184019650505b509398975050505050505050565b60006020828403121561104657600080fd5b5051919050565b60006001820161106d57634e487b7160e01b600052601160045260246000fd5b5060010190565b601f8211156110be57600081815260208120601f850160051c8101602086101561109b5750805b601f850160051c820191505b818110156110ba578281556001016110a7565b5050505b505050565b815167ffffffffffffffff8111156110dd576110dd610e02565b6110f1816110eb8454610f38565b84611074565b602080601f831160018114611126576000841561110e5750858301515b600019600386901b1c1916600185901b1785556110ba565b600085815260208120601f198616915b8281101561115557888601518255948401946001909101908401611136565b50858210156111735787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60a08152600061119660a0830188610c3b565b82810360208401526111a88188610c3b565b6040840196909652505060608101929092526080909101529291505056fea2646970667358221220f6fae53fe0aeb5c8ac19413005ef6412dae6bb5ff3d3e9d5161befbd273e0fc864736f6c63430008140033";

type GovernanceRootPublisherConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernanceRootPublisherConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernanceRootPublisher__factory extends ContractFactory {
  constructor(...args: GovernanceRootPublisherConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _vault: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_vault, overrides || {});
  }
  override deploy(
    _vault: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_vault, overrides || {}) as Promise<
      GovernanceRootPublisher & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): GovernanceRootPublisher__factory {
    return super.connect(runner) as GovernanceRootPublisher__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceRootPublisherInterface {
    return new Interface(_abi) as GovernanceRootPublisherInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): GovernanceRootPublisher {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as GovernanceRootPublisher;
  }
}
